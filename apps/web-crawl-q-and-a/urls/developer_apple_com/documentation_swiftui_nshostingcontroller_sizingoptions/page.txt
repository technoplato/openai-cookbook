https://developer.apple.com/documentation/swiftui/nshostingcontroller/sizingoptionsSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
Focus Cookbook: Supporting and enhancing focus-driven interactions in your SwiftUI app
Controlling the timing and movements of your animations
Building a document-based app using SwiftData
Backyard Birds: Building an app with SwiftData and widgets
Articles
Xcode library customization
Previews in Xcode
P
var preferredContentSize: NSSize
M
func sizeThatFits(in: CGSize) -> CGSize
Configuring the controller
P
var identifier: NSUserInterfaceItemIdentifier?
P
var rootView: Content
Getting the root view
M
init?(coder: NSCoder)
M
init?(coder: NSCoder, rootView: Content)
Documentation
Open Menu
Swift
Instance Property
sizingOptions
The options for how the hosting controller’s view creates and updates constraints based on the size of its SwiftUI content.
macOS 13.0+
@MainActor
var sizingOptions: NSHostingSizingOptions { get set }
Discussion
NSHostingController can create minimum, maximum, and ideal (content size) constraints that are derived from its SwiftUI view content. These constraints are only created when Auto Layout constraints are otherwise being used in the containing window.
If the NSHostingController is set as the contentViewController of an NSWindow, it will also update the window’s contentMinSize and contentMaxSize based on the minimum and maximum size of its SwiftUI content.
sizingOptions defaults to .standardBounds (which includes minSize, intrinsicContentSize, and maxSize), but can be set to an explicit value to control this behavior. For instance, setting a value of .minSize will only create the constraints necessary to maintain the minimum size of the SwiftUI content, or setting a value of [] will create no constraints at all.
If a use case can make assumptions about the size of the NSHostingController relative to its displayed content, such as the always being displayed in a fixed frame, setting this to a value with fewer options can improve performance as it reduces the amount of layout measurements that need to be performed. If an NSHostingController has a frame that is smaller or larger than that required to display its SwiftUI content, the content will be centered within that frame.
See Also
Configuring the controller
func sizeThatFits(in: CGSize) -> CGSize
Calculates and returns the most appropriate size for the current view.
var preferredContentSize: NSSize
var safeAreaRegions: SafeAreaRegions
The safe area regions that this view controller adds to its view.
var sceneBridgingOptions: NSHostingSceneBridgingOptions
The options for which aspects of the window will be managed by this controller’s hosting view.
Beta
Current page is sizingOptions
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


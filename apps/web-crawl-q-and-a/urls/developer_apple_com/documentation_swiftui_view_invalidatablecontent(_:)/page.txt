https://developer.apple.com/documentation/swiftui/view/invalidatablecontent(_:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func privacySensitive(Bool) -> some View
Designing your app for the Always On state
Redacting private content
S
SurroundingsEffect
Beta
M
func preferredSurroundingsEffect(SurroundingsEffect?) -> some View
Beta
Configuring passthrough
E
ColorSchemeContrast
M
func interactionActivityTrackingTag(String) -> some View
P
var isEnabled: Bool
M
func disabled(Bool) -> some View
Managing view interaction
E
Visibility
M
func persistentSystemOverlays(Visibility) -> some View
M
func statusBarHidden(Bool) -> some View
M
func menuIndicator(Visibility) -> some View
Documentation
Open Menu
Swift
Instance Method
invalidatableContent(_:)
Mark the receiver as their content might be invalidated.
iOS 17.0+ Beta
iPadOS 17.0+ Beta
macOS 14.0+ Beta
Mac Catalyst 17.0+ Beta
tvOS 17.0+ Beta
watchOS 10.0+ Beta
visionOS 1.0+ Beta
func invalidatableContent(_ invalidatable: Bool = true) -> some View
Parameters
invalidatable
Whether the receiver content might be invalidated.
Discussion
Use this modifier to annotate views that display values that are derived from the current state of your data and might be invalidated in response of, for example, user interaction.
The view will change its appearance when RedactionReasons.invalidated is present in the environment.
In an interactive widget a view is invalidated from the moment the user interacts with a control on the widget to the moment when a new timeline update has been presented.
See Also
Managing view interaction
func disabled(Bool) -> some View
Adds a condition that controls whether users can interact with this view.
var isEnabled: Bool
A Boolean value that indicates whether the view associated with this environment allows user interaction.
func interactionActivityTrackingTag(String) -> some View
Sets a tag that you use for tracking interactivity.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is invalidatableContent(_:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright Â© 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


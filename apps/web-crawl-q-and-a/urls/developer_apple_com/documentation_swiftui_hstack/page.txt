https://developer.apple.com/documentation/swiftui/hstackSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
Layering views
S
GridItem
S
LazyVGrid
S
LazyHGrid
Dynamically arranging views in two dimensions
M
func gridColumnAlignment(HorizontalAlignment) -> some View
M
func gridCellUnsizedAxes(Axis.Set) -> some View
Building layouts with stack views
Statically arranging views in one dimension
Picking container views for your content
Choosing a layout
Layout fundamentals
View layout
Drawing and graphics
Shapes
Documentation
Open Menu
Swift
Structure
HStack
A view that arranges its subviews in a horizontal line.
iOS 13.0+
iPadOS 13.0+
macOS 10.15+
Mac Catalyst 13.0+
tvOS 13.0+
watchOS 6.0+
visionOS 1.0+ Beta
@frozen
struct HStack<Content> where Content : View
Overview
Unlike LazyHStack, which only renders the views when your app needs to display them onscreen, an HStack renders the views all at once, regardless of whether they are on- or offscreen. Use the regular HStack when you have a small number of subviews or don’t want the delayed rendering behavior of the “lazy” version.
The following example shows a simple horizontal stack of five text views:
var body: some View {
    HStack(
        alignment: .top,
        spacing: 10
    ) {
        ForEach(
            1...5,
            id: \.self
        ) {
            Text("Item \($0)")
        }
    }
}
Note
If you need a horizontal stack that conforms to the Layout protocol, like when you want to create a conditional layout using AnyLayout, use HStackLayout instead.
Topics
Creating a stack
init(alignment: VerticalAlignment, spacing: CGFloat?, content: () -> Content)
Creates a horizontal stack with the given spacing and vertical alignment.
Relationships
Conforms To
Sendable
View
See Also
Statically arranging views in one dimension
Building layouts with stack views
Compose complex layouts from primitive container views.
struct VStack
A view that arranges its subviews in a vertical line.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is HStack
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


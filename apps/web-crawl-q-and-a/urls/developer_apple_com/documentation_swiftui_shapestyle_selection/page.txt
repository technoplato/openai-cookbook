https://developer.apple.com/documentation/swiftui/shapestyle/selectionSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
P
var body: _ShapeView<Rectangle, Self>
Using a shape style as a view
Resolved
M
func resolve(in: EnvironmentValues) -> Self.Resolved
Beta
Resolving a shape style in an environment
M
func `in`(CGRect) -> some ShapeStyle
Mapping to absolute coordinates
P
static var background: BackgroundStyle
P
static var foreground: ForegroundStyle
Semantic styles
P
static var quinary: HierarchicalShapeStyle
P
static var quaternary: HierarchicalShapeStyle
P
static var tertiary: HierarchicalShapeStyle
P
static var secondary: HierarchicalShapeStyle
P
static var primary: HierarchicalShapeStyle
Documentation
Open Menu
Swift
Type Property
selection
A style used to visually indicate selection following platform conventional colors and behaviors.
iOS 15.0+
iPadOS 15.0+
macOS 12.0+
Mac Catalyst 15.0+
visionOS 1.0+ Beta
static var selection: SelectionShapeStyle { get }
Available when Self is SelectionShapeStyle.
Discussion
For example:
ForEach(items) {
   ItemView(value: item, isSelected: item.id == selectedID)
}


struct ItemView {
    var value: item
    var isSelected: Bool


    var body: some View {
        // construct the actual cell content
            .background(isSelected
                ? AnyShapeStyle(.selection)
                    : AnyShapeStyle(.fill.quaternary),
                in: .rect(cornerRadius: 6))
    }
}
On macOS and iPadOS this automatically reflects window key state and focus state, where the emphasized appearance will be used only when the window is key and the nearest focusable element is actually focused. On iPhone, this will always fill with the environment’s accent color.
When applied as a background of another view, it will automatically set the EnvironmentValues.backgroundProminence for the environment of that view to match the current prominence of the selection.
For information about how to use shape styles, see ShapeStyle.
See Also
Semantic styles
static var foreground: ForegroundStyle
The foreground style in the current context.
Available when Self is ForegroundStyle.
static var background: BackgroundStyle
The background style in the current context.
Available when Self is BackgroundStyle.
static var separator: SeparatorShapeStyle
A style appropriate for foreground separator or border lines.
Available when Self is SeparatorShapeStyle.
static var tint: TintShapeStyle
A style that reflects the current tint color.
Available when Self is TintShapeStyle.
static var placeholder: PlaceholderTextShapeStyle
A style appropriate for placeholder text.
Available when Self is PlaceholderTextShapeStyle.
Beta
static var link: LinkShapeStyle
A style appropriate for links.
Available when Self is LinkShapeStyle.
Beta
static var fill: FillShapeStyle
An overlay fill style for filling shapes.
Available when Self is FillShapeStyle.
Beta
static var windowBackground: WindowBackgroundShapeStyle
A style appropriate for elements that should match the background of their containing window.
Available when Self is WindowBackgroundShapeStyle.
Beta
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is selection
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


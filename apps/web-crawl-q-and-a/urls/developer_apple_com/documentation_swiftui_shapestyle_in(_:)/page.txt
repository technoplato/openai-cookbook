https://developer.apple.com/documentation/swiftui/shapestyle/in(_:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func blendMode(BlendMode) -> some ShapeStyle
M
func opacity(Double) -> some ShapeStyle
M
func shadow(ShadowStyle) -> some ShapeStyle
Configuring the default shape style
M
static func blendMode(BlendMode) -> some ShapeStyle
M
static func opacity(Double) -> some ShapeStyle
M
static func shadow(ShadowStyle) -> some ShapeStyle
Mapping to absolute coordinates
S
ForegroundStyle
S
BackgroundStyle
S
SelectionShapeStyle
S
SeparatorShapeStyle
S
TintShapeStyle
S
FillShapeStyle
Beta
S
LinkShapeStyle
Beta
Documentation
Open Menu
Swift
Instance Method
in(_:)
Maps a shape style’s unit-space coordinates to the absolute coordinates of a given rectangle.
iOS 13.0+
iPadOS 13.0+
macOS 10.15+
Mac Catalyst 13.0+
tvOS 13.0+
watchOS 6.0+
visionOS 1.0+ Beta
func `in`(_ rect: CGRect) -> some ShapeStyle
Parameters
rect
A rectangle that gives the absolute coordinates over which to map the shape style.
Return Value
A new shape style mapped to the coordinates given by rect.
Discussion
Some shape styles have colors or patterns that vary with position based on UnitPoint coordinates. For example, you can create a LinearGradient using top and bottom as the start and end points:
let gradient = LinearGradient(
    colors: [.red, .yellow],
    startPoint: .top,
    endPoint: .bottom)
When rendering such styles, SwiftUI maps the unit space coordinates to the absolute coordinates of the filled shape. However, you can tell SwiftUI to use a different set of coordinates by supplying a rectangle to the in(_:) method. Consider two resizable rectangles using the gradient defined above:
HStack {
    Rectangle()
        .fill(gradient)
    Rectangle()
        .fill(gradient.in(CGRect(x: 0, y: 0, width: 0, height: 300)))
}
.onTapGesture { isBig.toggle() }
.frame(height: isBig ? 300 : 50)
.animation(.easeInOut)
When isBig is true — defined elsewhere as a private State variable — the rectangles look the same, because their heights match that of the modified gradient:
When the user toggles isBig by tapping the HStack, the rectangles shrink, but the gradients each react in a different way:
SwiftUI remaps the gradient of the first rectangle to the new frame height, so that you continue to see the full range of colors in a smaller area. For the second rectangle, the modified gradient retains a mapping to the full height, so you instead see only a small part of the overall gradient. Animation helps to visualize the difference.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is in(_:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


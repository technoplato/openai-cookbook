https://developer.apple.com/documentation/swiftui/referencefiledocumentSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
P
var newDocument: NewDocumentAction
Opening a document programmatically
S
FileDocumentWriteConfiguration
S
FileDocumentReadConfiguration
Reading and writing documents
S
DocumentConfiguration
Beta
P
var documentConfiguration: DocumentConfiguration?
Storing document data in a class instance
S
FileDocumentConfiguration
r
P
FileDocument
Storing document data in a structure instance
S
DocumentGroup
Building a document-based app using SwiftData
Building a Document-Based App with SwiftUI
Creating a document
Documentation
Open Menu
Swift
Protocol
ReferenceFileDocument
A type that you use to serialize reference type documents to and from file.
iOS 14.0+
iPadOS 14.0+
macOS 11.0+
Mac Catalyst 14.0+
visionOS 1.0+ Beta
protocol ReferenceFileDocument : ObservableObject
Overview
To store a document as a reference type — like a class — create a type that conforms to the ReferenceFileDocument protocol and implement the required methods and properties. Your implementation:
Provides a list of the content types that the document can read from and write to by defining readableContentTypes. If the list of content types that the document can write to is different from those that it reads from, you can optionally also define writableContentTypes.
Loads documents from file in the init(configuration:) initializer.
Stores documents to file by providing a snapshot of the document’s content in the snapshot(contentType:) method, and then serializing that content in the fileWrapper(snapshot:configuration:) method.
Important
If you store your document as a value type — like a structure — use FileDocument instead.
Ensure that types that conform to this protocol are thread-safe. In particular, SwiftUI calls the protocol’s methods on a background thread. Don’t use that thread to perform user interface updates. Use it only to serialize and deserialize the document data.
Topics
Reading a document
init(configuration: Self.ReadConfiguration) throws
Creates a document and initializes it with the contents of a file.
Required
static var readableContentTypes: [UTType]
The file and data types that the document reads from.
Required
typealias ReadConfiguration
The configuration for reading document contents.
Getting a snapshot
func snapshot(contentType: UTType) throws -> Self.Snapshot
Creates a snapshot that represents the current state of the document.
Required
associatedtype Snapshot
A type that represents the document’s stored content.
Required
Writing a document
func fileWrapper(snapshot: Self.Snapshot, configuration: Self.WriteConfiguration) throws -> FileWrapper
Serializes a document snapshot to a file wrapper.
Required
static var writableContentTypes: [UTType]
The file types that the document supports saving or exporting to.
Required Default implementation provided.
typealias WriteConfiguration
The configuration for writing document contents.
Relationships
Inherits From
ObservableObject
See Also
Storing document data in a class instance
struct ReferenceFileDocumentConfiguration
The properties of an open reference file document.
var undoManager: UndoManager?
The undo manager used to register a view’s undo operations.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is ReferenceFileDocument
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


https://developer.apple.com/documentation/swiftui/preferencekeySkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
Animations
View styles
View configuration
View fundamentals
Views
Persistent storage
M
func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View
func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View
func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View
Creating custom preferences
M
func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View
M
func preference<K>(key: K.Type, value: K.Value) -> some View
Setting preferences
Preferences
Environment values
Model data
Data and storage
Documentation
Open Menu
Swift
Protocol
PreferenceKey
A named value produced by a view.
iOS 13.0+
iPadOS 13.0+
macOS 10.15+
Mac Catalyst 13.0+
tvOS 13.0+
watchOS 6.0+
visionOS 1.0+ Beta
protocol PreferenceKey
Overview
A view with multiple children automatically combines its values for a given preference into a single value visible to its ancestors.
Topics
Getting the default value
static var defaultValue: Self.Value
The default value of the preference.
Required Default implementation provided.
associatedtype Value
The type of value produced by this preference.
Required
Combining preferences
static func reduce(value: inout Self.Value, nextValue: () -> Self.Value)
Combines a sequence of values by modifying the previously-accumulated value with the result of a closure that provides the next value.
Required
Relationships
Conforming Types
PreferredColorSchemeKey
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is PreferenceKey
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright Â© 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


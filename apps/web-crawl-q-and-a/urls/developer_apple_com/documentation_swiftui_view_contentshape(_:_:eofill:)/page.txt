https://developer.apple.com/documentation/swiftui/view/contentshape(_:_:eofill:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
Clipboard
E
TouchBarItemPresence
S
TouchBar
M
func touchBarItemPresence(TouchBarItemPresence) -> some View
M
func touchBarCustomizationLabel(Text) -> some View
M
func touchBarItemPrincipal(Bool) -> some View
M
func touchBar<Content>(TouchBar<Content>) -> some View
func digitalCrownRotation<V>(Binding<V>, from: V, through: V, by: V.Stride?, sensitivity: DigitalCrownRotationalSensitivity, isContinuous: Bool, isHapticFeedbackEnabled: Bool) -> some View
func digitalCrownRotation<V>(detent: Binding<V>, from: V, through: V, by: V.Stride, sensitivity: DigitalCrownRotationalSensitivity, isContinuous: Bool, isHapticFeedbackEnabled: Bool, onChange: (DigitalCrownEvent) -> Void, onIdle: () -> Void) -> some View
func digitalCrownRotation<V>(detent: Binding<V>, from: V, through: V, by: V.Stride, sensitivity: DigitalCrownRotationalSensitivity, isContinuous: Bool, isHapticFeedbackEnabled: Bool, onChange: (DigitalCrownEvent) -> Void, onIdle: () -> Void) -> some View
func digitalCrownRotation<V>(Binding<V>, onChange: (DigitalCrownEvent) -> Void, onIdle: () -> Void) -> some View
func digitalCrownRotation<V>(Binding<V>, from: V, through: V, sensitivity: DigitalCrownRotationalSensitivity, isContinuous: Bool, isHapticFeedbackEnabled: Bool, onChange: (DigitalCrownEvent) -> Void, onIdle: () -> Void) -> some View
M
func contentShape<S>(S, eoFill: Bool) -> some View
M
func allowsTightening(Bool) -> some View
Controlling hit testing
E
MoveCommandDirection
M
func onCommand(Selector, perform: (() -> Void)?) -> some View
M
func onPlayPauseCommand(perform: (() -> Void)?) -> some View
M
func onExitCommand(perform: (() -> Void)?) -> some View
M
func pageCommand<V>(value: Binding<V>, in: ClosedRange<V>, step: V) -> some View
Documentation
Open Menu
Swift
Instance Method
contentShape(_:_:eoFill:)
Sets the content shape for this view.
iOS 15.0+
iPadOS 15.0+
macOS 12.0+
Mac Catalyst 15.0+
tvOS 15.0+
watchOS 8.0+
visionOS 1.0+ Beta
func contentShape<S>(
    _ kind: ContentShapeKinds,
    _ shape: S,
    eoFill: Bool = false
) -> some View where S : Shape
Parameters
kind
The kinds to apply to this content shape.
shape
The shape to use.
eoFill
A Boolean that indicates whether the shape is interpreted with the even-odd winding number rule.
Return Value
A view that uses the given shape for the specified kind.
Discussion
The content shape has a variety of uses. You can control the kind of the content shape by specifying one in kind. For example, the following example only sets the focus ring shape of the view, without affecting its shape for hit-testing:
MyFocusableView()
    .contentShape(.focusEffect, Circle())
See Also
Controlling hit testing
func allowsTightening(Bool) -> some View
Sets whether text in this view can compress the space between characters when necessary to fit text in a line.
func contentShape<S>(S, eoFill: Bool) -> some View
Defines the content shape for hit testing.
struct ContentShapeKinds
A kind for the content shape of a view.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is contentShape(_:_:eoFill:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright Â© 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


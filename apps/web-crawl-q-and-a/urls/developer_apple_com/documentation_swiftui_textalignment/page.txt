https://developer.apple.com/documentation/swiftui/textalignmentSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View
M
func keyboardType(UIKeyboardType) -> some View
P
var autocorrectionDisabled: Bool
M
func autocorrectionDisabled(Bool) -> some View
Managing text entry
P
var multilineTextAlignment: TextAlignment
M
func multilineTextAlignment(TextAlignment) -> some View
M
func flipsForRightToLeftLayoutDirection(Bool) -> some View
M
func tracking(CGFloat) -> some View
M
func kerning(CGFloat) -> some View
M
func baselineOffset(CGFloat) -> some View
P
var minimumScaleFactor: CGFloat
M
func minimumScaleFactor(CGFloat) -> some View
P
var allowsTightening: Bool
M
func allowsTightening(Bool) -> some View
Documentation
Open Menu
Swift
Enumeration
TextAlignment
An alignment position for text along the horizontal axis.
iOS 13.0+
iPadOS 13.0+
macOS 10.15+
Mac Catalyst 13.0+
tvOS 13.0+
watchOS 6.0+
visionOS 1.0+ Beta
@frozen
enum TextAlignment
Topics
Getting text alignments
case center
case leading
case trailing
Relationships
Conforms To
CaseIterable
Equatable
Hashable
Sendable
See Also
Managing text layout
func truncationMode(Text.TruncationMode) -> some View
Sets the truncation mode for lines of text that are too long to fit in the available space.
var truncationMode: Text.TruncationMode
A value that indicates how the layout truncates the last line of text to fit into the available space.
func allowsTightening(Bool) -> some View
Sets whether text in this view can compress the space between characters when necessary to fit text in a line.
var allowsTightening: Bool
A Boolean value that indicates whether inter-character spacing should tighten to fit the text into the available space.
func minimumScaleFactor(CGFloat) -> some View
Sets the minimum amount that text in this view scales down to fit in the available space.
var minimumScaleFactor: CGFloat
The minimum permissible proportion to shrink the font size to fit the text into the available space.
func baselineOffset(CGFloat) -> some View
Sets the vertical offset for the text relative to its baseline in this view.
func kerning(CGFloat) -> some View
Sets the spacing, or kerning, between characters for the text in this view.
func tracking(CGFloat) -> some View
Sets the tracking for the text in this view.
func flipsForRightToLeftLayoutDirection(Bool) -> some View
Sets whether this view mirrors its contents horizontally when the layout direction is right-to-left.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is TextAlignment
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright Â© 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


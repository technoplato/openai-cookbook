https://developer.apple.com/documentation/swiftui/view/accessibilitychildren(children:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
Xcode library customization
Previews in Xcode
Tool support
Technology-specific views
WatchKit integration
UIKit integration
AppKit integration
M
func accessibilityElement(children: AccessibilityChildBehavior) -> some View
Creating accessible elements
Creating Accessible Views
Essentials
Accessibility fundamentals
Accessibility
System events
Focus
Documentation
Open Menu
Swift
Instance Method
accessibilityChildren(children:)
Replaces the existing accessibility element’s children with one or more new synthetic accessibility elements.
iOS 15.0+
iPadOS 15.0+
macOS 12.0+
Mac Catalyst 15.0+
tvOS 15.0+
watchOS 8.0+
visionOS 1.0+ Beta
func accessibilityChildren<V>(@ViewBuilder children: () -> V) -> some View where V : View
Parameters
children
A ViewBuilder that represents the replacement child views the framework uses to generate accessibility elements.
Discussion
Use this modifier to replace an existing element’s children with one or more new synthetic accessibility elements you provide. This allows for synthetic, non-visual accessibility elements to be set as children of a visual accessibility element.
SwiftUI creates an accessibility container implicitly when needed. If an accessibility element already exists, the framework converts it into an accessibility container.
In the example below, a Canvas displays a graph of vertical bars that don’t have any inherent accessibility elements. You make the view accessible by adding the accessibilityChildren(children:) modifier with views whose accessibility elements represent the values of each bar drawn in the canvas:
var body: some View {
    Canvas { context, size in
        // Draw Graph
        for data in dataSet {
            let path = Path(
                roundedRect: CGRect(
                    x: (size.width / CGFloat(dataSet.count))
                    * CGFloat(data.week),
                    y: 0,
                    width: size.width / CGFloat(dataSet.count),
                    height: CGFloat(data.lines),
                cornerRadius: 5)
            context.fill(path, with: .color(.blue))
        }
        // Draw Axis and Labels
        ...
    }
    .accessibilityLabel("Lines of Code per Week")
    .accessibilityChildren {
        HStack {
            ForEach(dataSet) { data in
                RoundedRectangle(cornerRadius: 5)
                    .accessibilityLabel("Week \(data.week)")
                    .accessibilityValue("\(data.lines) lines")
            }
        }
    }
}
SwiftUI hides any views that you provide with the children parameter, then the framework uses the views to generate the accessibility elements.
See Also
Creating accessible elements
func accessibilityElement(children: AccessibilityChildBehavior) -> some View
Creates a new accessibility element, or modifies the AccessibilityChildBehavior of the existing accessibility element.
func accessibilityRepresentation<V>(representation: () -> V) -> some View
Replaces one or more accessibility elements for this view with new accessibility elements.
struct AccessibilityChildBehavior
Defines the behavior for the child elements of the new parent element.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is accessibilityChildren(children:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


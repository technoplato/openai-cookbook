https://developer.apple.com/documentation/swiftui/timelineschedule/everyminuteSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
S
EmptyAnimatableData
Updating a view on a schedule
Updating watchOS apps with timelines
S
TimelineView
r
P
TimelineSchedule
Getting built-in schedules
P
static var animation: AnimationTimelineSchedule
M
static func animation(minimumInterval: Double?, paused: Bool) -> AnimationTimelineSchedule
Synchronizing geometries
M
func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View
S
MatchedGeometryProperties
r
P
GeometryEffect
S
Namespace
M
func geometryGroup() -> some View
Beta
Defining transitions
Documentation
Open Menu
Swift
Type Property
everyMinute
A schedule for updating a timeline view at the start of every minute.
iOS 15.0+
iPadOS 15.0+
macOS 12.0+
Mac Catalyst 15.0+
tvOS 15.0+
watchOS 8.0+
visionOS 1.0+ Beta
static var everyMinute: EveryMinuteTimelineSchedule { get }
Available when Self is EveryMinuteTimelineSchedule.
Discussion
Initialize a TimelineView with an every minute timeline schedule when you want to schedule timeline view updates at the start of every minute:
TimelineView(.everyMinute) { context in
    Text(context.date.description)
}
The schedule provides the first date as the beginning of the minute in which you use it to initialize the timeline view. For example, if you create the timeline view at 10:09:38, the schedule’s first entry is 10:09:00. In response, the timeline view performs its first update immediately, providing the beginning of the current minute, namely 10:09:00, as context to its content. Subsequent updates happen at the beginning of each minute that follows.
The schedule defines the EveryMinuteTimelineSchedule.Entries structure to return the sequence of dates when the timeline view calls the entries(from:mode:) method.
See Also
Getting built-in schedules
static var animation: AnimationTimelineSchedule
A pausable schedule of dates updating at a frequency no more quickly than the provided interval.
Available when Self is AnimationTimelineSchedule.
static func animation(minimumInterval: Double?, paused: Bool) -> AnimationTimelineSchedule
A pausable schedule of dates updating at a frequency no more quickly than the provided interval.
Available when Self is AnimationTimelineSchedule.
static func explicit<S>(S) -> ExplicitTimelineSchedule<S>
A schedule for updating a timeline view at explicit points in time.
static func periodic(from: Date, by: TimeInterval) -> PeriodicTimelineSchedule
A schedule for updating a timeline view at regular intervals.
Available when Self is PeriodicTimelineSchedule.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is everyMinute
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


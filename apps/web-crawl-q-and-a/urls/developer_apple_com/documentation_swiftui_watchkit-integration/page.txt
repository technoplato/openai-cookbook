https://developer.apple.com/documentation/swiftui/watchkit-integrationSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
Accessibility fundamentals
Accessible appearance
Accessible controls
Accessible descriptions
Accessible navigation
Framework integration
AppKit integration
UIKit integration
Focus Cookbook: Supporting and enhancing focus-driven interactions in your SwiftUI app
Managing model data in your app
Migrating from the Observable Object protocol to the Observable macro
Monitoring data changes in your app
Documentation
Open Menu
Swift
WatchKit integration
Add WatchKit views to your SwiftUI app, or use SwiftUI views in your WatchKit app.
Overview
Integrate SwiftUI with your app’s existing content using hosting controllers to add SwiftUI views into WatchKit interfaces. A hosting controller wraps a set of SwiftUI views in a form that you can then add to your storyboard-based app.
You can also add WatchKit views and view controllers to your SwiftUI interfaces. A representable object wraps the designated view or view controller, and facilitates communication between the wrapped object and your SwiftUI views.
For design guidance, see Designing for watchOS in the Human Interface Guidelines.
Topics
Displaying SwiftUI views in WatchKit
class WKHostingController
A WatchKit interface controller that hosts a SwiftUI view hierarchy.
class WKUserNotificationHostingController
A WatchKit user notification interface controller that hosts a SwiftUI view hierarchy.
Adding WatchKit views to SwiftUI view hierarchies
protocol WKInterfaceObjectRepresentable
A view that represents a WatchKit interface object.
struct WKInterfaceObjectRepresentableContext
Contextual information about the state of the system that you use to create and update your WatchKit interface object.
See Also
Framework integration
API Reference
AppKit integration
Add AppKit views to your SwiftUI app, or use SwiftUI views in your AppKit app.
API Reference
UIKit integration
Add UIKit views to your SwiftUI app, or use SwiftUI views in your UIKit app.
API Reference
Technology-specific views
Use SwiftUI views that other Apple frameworks provide.
Current page is WatchKit integration
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


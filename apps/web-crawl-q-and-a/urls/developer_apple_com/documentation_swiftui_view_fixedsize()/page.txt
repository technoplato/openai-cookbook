https://developer.apple.com/documentation/swiftui/view/fixedsize()Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
Setting margins
S
ViewDimensions
r
P
AlignmentID
S
DepthAlignment
Beta
S
VerticalAlignment
S
HorizontalAlignment
S
Alignment
M
func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View
Beta
M
func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View
Beta
M
func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View
Beta
M
func frame(minDepth: CGFloat?, idealDepth: CGFloat?, maxDepth: CGFloat?, alignment: DepthAlignment) -> some View
Beta
M
func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View
M
func frame(depth: CGFloat?, alignment: DepthAlignment) -> some View
Beta
M
func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View
Influencing a view’s size
Documentation
Open Menu
Swift
Instance Method
fixedSize()
Fixes this view at its ideal size.
iOS 13.0+
iPadOS 13.0+
macOS 10.15+
Mac Catalyst 13.0+
tvOS 13.0+
watchOS 6.0+
visionOS 1.0+ Beta
func fixedSize() -> some View
Return Value
A view that fixes this view at its ideal size.
Discussion
During the layout of the view hierarchy, each view proposes a size to each child view it contains. If the child view doesn’t need a fixed size it can accept and conform to the size offered by the parent.
For example, a Text view placed in an explicitly sized frame wraps and truncates its string to remain within its parent’s bounds:
Text("A single line of text, too long to fit in a box.")
    .frame(width: 200, height: 200)
    .border(Color.gray)
The fixedSize() modifier can be used to create a view that maintains the ideal size of its children both dimensions:
Text("A single line of text, too long to fit in a box.")
    .fixedSize()
    .frame(width: 200, height: 200)
    .border(Color.gray)
This can result in the view exceeding the parent’s bounds, which may or may not be the effect you want.
You can think of fixedSize() as the creation of a counter proposal to the view size proposed to a view by its parent. The ideal size of a view, and the specific effects of fixedSize() depends on the particular view and how you have configured it.
To create a view that fixes the view’s size in either the horizontal or vertical dimensions, see fixedSize(horizontal:vertical:).
See Also
Influencing a view’s size
func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View
Positions this view within an invisible frame with the specified size.
func frame(depth: CGFloat?, alignment: DepthAlignment) -> some View
Positions this view within an invisible frame with the specified depth.
Beta
func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View
Positions this view within an invisible frame having the specified size constraints.
func frame(minDepth: CGFloat?, idealDepth: CGFloat?, maxDepth: CGFloat?, alignment: DepthAlignment) -> some View
Positions this view within an invisible frame having the specified depth constraints.
Beta
func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View
Positions this view within an invisible frame with a size relative to the nearest container.
Beta
func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View
Positions this view within an invisible frame with a size relative to the nearest container.
Beta
func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View
Positions this view within an invisible frame with a size relative to the nearest container.
Beta
func fixedSize(horizontal: Bool, vertical: Bool) -> some View
Fixes this view at its ideal size in the specified dimensions.
func layoutPriority(Double) -> some View
Sets the priority by which a parent layout should apportion space to this child.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is fixedSize()
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


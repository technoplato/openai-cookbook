https://developer.apple.com/documentation/swiftui/graphicscontext/resolve(_:)-28u0dSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
S
GraphicsContext.ResolvedSymbol
M
func resolveSymbol<ID>(id: ID) -> GraphicsContext.ResolvedSymbol?
M
func draw(GraphicsContext.ResolvedSymbol, in: CGRect)
M
func draw(GraphicsContext.ResolvedSymbol, at: CGPoint, anchor: UnitPoint)
Drawing a child view
S
GraphicsContext.ResolvedText
M
func resolve(Text) -> GraphicsContext.ResolvedText
M
func fill(Path, with: GraphicsContext.Shading, style: FillStyle)
M
func stroke(Path, with: GraphicsContext.Shading, style: StrokeStyle)
M
func stroke(Path, with: GraphicsContext.Shading, lineWidth: CGFloat)
Drawing a path
S
GraphicsContext
S
Canvas
Add Rich Graphics to Your SwiftUI App
Immediate mode drawing
Documentation
Open Menu
Swift
Instance Method
resolve(_:)
Returns a version of a shading resolved with the current values of the graphics context’s environment.
iOS 15.0+
iPadOS 15.0+
macOS 12.0+
Mac Catalyst 15.0+
tvOS 15.0+
watchOS 8.0+
visionOS 1.0+ Beta
func resolve(_ shading: GraphicsContext.Shading) -> GraphicsContext.Shading
Discussion
Calling this function once and then drawing multiple times with the result will often have less overhead than drawing with the original shading multiple times.
See Also
Drawing a path
func stroke(Path, with: GraphicsContext.Shading, lineWidth: CGFloat)
Draws a path into the context with a specified line width.
func stroke(Path, with: GraphicsContext.Shading, style: StrokeStyle)
Draws a path into the context with a specified stroke style.
func fill(Path, with: GraphicsContext.Shading, style: FillStyle)
Draws a path into the context and fills the outlined region.
struct Shading
A color or pattern that you can use to outline or fill a path.
struct GradientOptions
Options that affect the rendering of color gradients.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is resolve(_:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


https://developer.apple.com/documentation/swiftui/gauge/init(value:in:label:currentvaluelabel:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
E
ControlActiveState
P
var controlActiveState: ControlActiveState
Activating controls
E
ControlSize
P
var controlSize: ControlSize
M
func controlSize(ControlSize) -> some View
Sizing controls
init<V>(value: V, in: ClosedRange<V>, label: () -> Label, currentValueLabel: () -> CurrentValueLabel, minimumValueLabel: () -> BoundsLabel, maximumValueLabel: () -> BoundsLabel, markedValueLabels: () -> MarkedValueLabels)
init<V>(value: V, in: ClosedRange<V>, label: () -> Label, currentValueLabel: () -> CurrentValueLabel, minimumValueLabel: () -> BoundsLabel, maximumValueLabel: () -> BoundsLabel)
init<V>(value: V, in: ClosedRange<V>, label: () -> Label, currentValueLabel: () -> CurrentValueLabel, markedValueLabels: () -> MarkedValueLabels)
M
init<V>(value: V, in: ClosedRange<V>, label: () -> Label)
Creating a gauge
S
Gauge
Indicating a value
S
ColorPicker
Choosing a color
P
var timeZone: TimeZone
P
var calendar: Calendar
Documentation
Open Menu
Swift
Initializer
init(value:in:label:currentValueLabel:)
Creates a gauge showing a value within a range and that describes the gauge’s purpose and current value.
iOS 16.0+
iPadOS 16.0+
macOS 13.0+
Mac Catalyst 16.0+
watchOS 7.0+
visionOS 1.0+ Beta
init<V>(
    value: V,
    in bounds: ClosedRange<V> = 0...1,
    @ViewBuilder label: () -> Label,
    @ViewBuilder currentValueLabel: () -> CurrentValueLabel
) where BoundsLabel == EmptyView, MarkedValueLabels == EmptyView, V : BinaryFloatingPoint
Parameters
value
The value to show on the gauge.
bounds
The range of the valid values. Defaults to 0...1.
label
A view that describes the purpose of the gauge.
currentValueLabel
A view that describes the current value of the gauge.
Discussion
Use this method to create a gauge that displays a value within a range you supply with labels that describe the purpose of the gauge and its current value. In the example below, a gauge using the circular style shows its current value of 67 along with a label describing the (BPM) for the gauge:
struct SimpleGauge: View {
    @State private var current = 67.0


    var body: some View {
        Gauge(value: currrent, in: 0...170) {
            Text("BPM")
        } currentValueLabel: {
            Text("\(current)")
        }
        .gaugeStyle(.circular)
   }
}
See Also
Creating a gauge
init<V>(value: V, in: ClosedRange<V>, label: () -> Label)
Creates a gauge showing a value within a range and describes the gauge’s purpose and current value.
init<V>(value: V, in: ClosedRange<V>, label: () -> Label, currentValueLabel: () -> CurrentValueLabel, markedValueLabels: () -> MarkedValueLabels)
Creates a gauge representing a value within a range.
init<V>(value: V, in: ClosedRange<V>, label: () -> Label, currentValueLabel: () -> CurrentValueLabel, minimumValueLabel: () -> BoundsLabel, maximumValueLabel: () -> BoundsLabel)
Creates a gauge showing a value within a range and describes the gauge’s current, minimum, and maximum values.
init<V>(value: V, in: ClosedRange<V>, label: () -> Label, currentValueLabel: () -> CurrentValueLabel, minimumValueLabel: () -> BoundsLabel, maximumValueLabel: () -> BoundsLabel, markedValueLabels: () -> MarkedValueLabels)
Creates a gauge representing a value within a range.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is init(value:in:label:currentValueLabel:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


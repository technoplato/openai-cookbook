https://developer.apple.com/documentation/swiftui/actionsheetSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
Menus and commands
Controls and indicators
Images
Text input and output
Animations
View styles
View configuration
S
Alert
Deprecated
Deprecated modal presentations
M
func interactiveDismissDisabled(Bool) -> some View
S
DismissAction
P
var dismiss: DismissAction
P
var isPresented: Bool
Dismissing a presentation
M
func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View
Beta
Documentation
Open Menu
Swift
Structure
ActionSheet
A representation of an action sheet presentation.
iOS 13.0–17.0 Deprecated
iPadOS 13.0–17.0 Deprecated
Mac Catalyst 13.0–17.0 Deprecated
tvOS 13.0–17.0 Deprecated
watchOS 6.0–10.0 Deprecated
visionOS 1.0+ Beta
struct ActionSheet
Deprecated
Use a View modifier like confirmationDialog(_:isPresented:titleVisibility:presenting:actions:message:) instead.
Overview
Use an action sheet when you want the user to make a choice between two or more options, in response to their own action. If you want the user to act in response to the state of the app or the system, rather than a user action, use an Alert instead.
You show an action sheet by using the actionSheet(isPresented:content:) view modifier to create an action sheet, which then appears whenever the bound isPresented value is true. The content closure you provide to this modifier produces a customized instance of the ActionSheet type. To supply the options, create instances of ActionSheet.Button to distinguish between ordinary options, destructive options, and cancellation of the user’s original action.
The action sheet handles its dismissal by setting the bound isPresented value back to false when the user taps a button in the action sheet.
The following example creates an action sheet with three options: a Cancel button, a destructive button, and a default button. The second and third of these call methods are named overwriteWorkout and appendWorkout, respectively.
@State private var showActionSheet = false
var body: some View {
    Button("Tap to show action sheet") {
        showActionSheet = true
    }
    .actionSheet(isPresented: $showActionSheet) {
        ActionSheet(title: Text("Resume Workout Recording"),
                    message: Text("Choose a destination for workout data"),
                    buttons: [
                        .cancel(),
                        .destructive(
                            Text("Overwrite Current Workout"),
                            action: overwriteWorkout
                        ),
                        .default(
                            Text("Append to Current Workout"),
                            action: appendWorkout
                        )
                    ]
        )
    }
}
The system may interpret the order of items as they appear in the buttons array to accommodate platform conventions. In this example, the Cancel button is the first member of the array, but the action sheet puts it in its standard position at the bottom of the sheet.
Topics
Creating an action sheet
init(title: Text, message: Text?, buttons: [ActionSheet.Button])
Creates an action sheet with the provided buttons.
Specifying the button type
typealias Button
A button representing an operation of an action sheet presentation.
Relationships
Conforms To
Sendable
See Also
Deprecated modal presentations
struct Alert
A representation of an alert presentation.
Deprecated
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is ActionSheet
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


https://developer.apple.com/documentation/swiftui/view/paletteselectioneffect(_:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
S
Toggle
M
func toggleStyle<S>(S) -> some View
Choosing from a set of options
S
Picker
M
func pickerStyle<S>(S) -> some View
M
func horizontalRadioGroupLayout() -> some View
M
func defaultWheelPickerItemHeight(CGFloat) -> some View
P
var defaultWheelPickerItemHeight: CGFloat
S
DefaultDateProgressLabel
Indicating missing content
S
ContentUnavailableView
Beta
Providing haptic feedback
M
func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View
Beta
M
func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View
Beta
M
func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View
Beta
Documentation
Open Menu
Swift
Instance Method
paletteSelectionEffect(_:)
Specifies the selection effect to apply to a palette item.
iOS 17.0+ Beta
iPadOS 17.0+ Beta
macOS 14.0+ Beta
Mac Catalyst 17.0+ Beta
visionOS 1.0+ Beta
func paletteSelectionEffect(_ effect: PaletteSelectionEffect) -> some View
Parameters
effect
The type of effect to apply when a palette item is selected.
Discussion
automatic applies the system’s default appearance when selected. When using un-tinted SF Symbols or template images, the current tint color is applied to the selected items’ image. If the provided SF Symbols have custom tints, a stroke is drawn around selected items.
If you wish to provide a specific image (or SF Symbol) to indicate selection, use custom to forgo the system’s default selection appearance allowing the provided image to solely indicate selection instead.
The following example creates a palette picker that disables the system selection behavior:
Menu {
    Picker("Palettes", selection: $selection) {
        ForEach(palettes) { palette in
            Label(palette.title, image: selection == palette ?
                  "selected-palette" : "palette")
            .tint(palette.tint)
            .tag(palette)
        }
    }
    .pickerStyle(.palette)
    .paletteSelectionEffect(.custom)
} label: {
    ...
}
If a specific SF Symbol variant is preferable instead, use symbolVariant(_:).
Menu {
    ControlGroup {
        ForEach(ColorTags.allCases) { colorTag in
            Toggle(isOn: $selectedColorTags[colorTag]) {
                Label(colorTag.name, systemImage: "circle")
            }
            .tint(colorTag.color)
        }
    }
    .controlGroupStyle(.palette)
    .paletteSelectionEffect(.symbolVariant(.fill))
}
See Also
Choosing from a set of options
struct Picker
A control for selecting from a set of mutually exclusive values.
func pickerStyle<S>(S) -> some View
Sets the style for pickers within this view.
func horizontalRadioGroupLayout() -> some View
Sets the style for radio group style pickers within this view to be horizontally positioned with the radio buttons inside the layout.
func defaultWheelPickerItemHeight(CGFloat) -> some View
Sets the default wheel-style picker item height.
var defaultWheelPickerItemHeight: CGFloat
The default height of an item in a wheel-style picker, such as a date picker.
struct PaletteSelectionEffect
The selection effect to apply to a palette item.
Beta
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is paletteSelectionEffect(_:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


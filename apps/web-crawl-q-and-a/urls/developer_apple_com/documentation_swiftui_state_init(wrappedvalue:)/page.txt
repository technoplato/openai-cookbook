https://developer.apple.com/documentation/swiftui/state/init(wrappedvalue:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func environmentObject<T>(T) -> some View
Distributing model data throughout your app
M
func onReceive<P>(P, perform: (P.Output) -> Void) -> some View
M
func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View
Beta
M
func onChange<V>(of: V, initial: Bool, () -> Void) -> some View
Beta
Responding to data changes
r
P
ObservableObject
Creating a state
S
State
Managing user interface state
Creating and sharing view state
Model data
Data and storage
App extensions
Search
Documentation
Open Menu
Swift
Initializer
init(wrappedValue:)
Creates a state property that stores an initial wrapped value.
iOS 13.0+
iPadOS 13.0+
macOS 10.15+
Mac Catalyst 13.0+
tvOS 13.0+
watchOS 6.0+
visionOS 1.0+ Beta
init(wrappedValue value: Value)
Parameters
value
An initial value to store in the state property.
Discussion
You don’t call this initializer directly. Instead, SwiftUI calls it for you when you declare a property with the @State attribute and provide an initial value:
struct MyView: View {
    @State private var isPlaying: Bool = false


    // ...
}
SwiftUI initializes the state’s storage only once for each container instance that you declare. In the above code, SwiftUI creates isPlaying only the first time it initializes a particular instance of MyView. On the other hand, each instance of MyView creates a distinct instance of the state. For example, each of the views in the following VStack has its own isPlaying value:
var body: some View {
    VStack {
        MyView()
        MyView()
    }
}
See Also
Creating a state
init(initialValue: Value)
Creates a state property that stores an initial value.
init()
Creates a state property without an initial value.
Available when Value conforms to ExpressibleByNilLiteral.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is init(wrappedValue:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


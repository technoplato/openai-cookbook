https://developer.apple.com/documentation/swiftui/physicalmetricSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
Measuring a view
S
GeometryReader
S
GeometryReader3D
Beta
S
GeometryProxy
S
GeometryProxy3D
Beta
M
func coordinateSpace(NamedCoordinateSpace) -> some View
Beta
E
CoordinateSpace
r
P
CoordinateSpaceProtocol
Beta
M
func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View
M
func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View
Beta
S
Shader
Beta
S
ShaderFunction
Beta
S
ShaderLibrary
Beta
Accessing geometric constructs
E
Axis
Documentation
Open Menu
Swift
Structure
PhysicalMetric
Provides access to a value in points that corresponds to the specified physical measurement.
visionOS 1.0+ Beta
@propertyWrapper @frozen
struct PhysicalMetric<Value>
Overview
Use this property wrapper inside a View or a type that inherits a View’s environment, like a ViewModifier. Its value will be the equivalent in points of the physical measurement of length you specify.
For example, to have a variable that contains the amount of points corresponding to one meter, you can do the following:
struct MyView: View {
    @PhysicalMetric(from: .meters)
    var twoAndAHalfMeters = 2.5
    …
}
Using this wrapper for a property of a type not associated with a scene’s view contents, like an App or a Scene, is unsupported.
Topics
Creating a metric
init(wrappedValue: Value, from: UnitLength)
Creates a value that maps the specified set of physical length measurements, in the specified unit, to a corresponding set of values measured in points in the associated scene.
init(wrappedValue: CGPoint, from: UnitLength)
Creates a value that maps the specified point, whose dimensions are specified in physical length measurements in the given unit, to the corresponding value in points in the associated scene.
init(wrappedValue: CGSize, from: UnitLength)
Creates a value that maps the specified size, in the specified unit to the corresponding value in points in the associated scene.
init(wrappedValue: Size3D, from: UnitLength)
Creates a value that maps the specified size, in the specified unit to the corresponding value in points in the associated scene.
init(wrappedValue: Point3D, from: UnitLength)
Creates a value that maps the specified point, whose dimensions are specified in physical length measurements in the given unit, to the corresponding value in points in the associated scene.
init(wrappedValue: Value, from: UnitLength)
Creates a value that maps the specified single physical length measurement, in the specified unit, to the corresponding value in points in the associated scene.
init(wrappedValue: CGRect, from: UnitLength)
Creates a value that maps the specified rectangle, whose dimensions are specified in physical length measurements in the given unit, to the corresponding value in points in the associated scene.
init(wrappedValue: Rect3D, from: UnitLength)
Creates a value that maps the specified Rect3D, whose dimensions are specified in physical length measurements in the given unit, to the corresponding value in points in the associated scene.
Getting the value
var wrappedValue: Value
A value in points in the coordinate system of the associated scene.
Relationships
Conforms To
DynamicProperty
Sendable
See Also
Measuring a view
struct GeometryReader
A container view that defines its content as a function of its own size and coordinate space.
struct GeometryReader3D
A container view that defines its content as a function of its own size and coordinate space.
Beta
struct GeometryProxy
A proxy for access to the size and coordinate space (for anchor resolution) of the container view.
struct GeometryProxy3D
A proxy for access to the size and coordinate space of the container view.
Beta
func coordinateSpace(NamedCoordinateSpace) -> some View
Assigns a name to the view’s coordinate space, so other code can operate on dimensions like points and sizes relative to the named space.
Beta
enum CoordinateSpace
A resolved coordinate space created by CoordinateSpaceProtocol.
protocol CoordinateSpaceProtocol
A frame of reference within the layout system.
Beta
struct PhysicalMetricsConverter
A physical metrics converter provides conversion between point values and their extent in 3D space, in the form of physical length measurements.
Beta
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is PhysicalMetric
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


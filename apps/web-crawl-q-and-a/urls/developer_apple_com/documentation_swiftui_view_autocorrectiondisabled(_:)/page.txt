https://developer.apple.com/documentation/swiftui/view/autocorrectiondisabled(_:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func lineLimit(Int, reservesSpace: Bool) -> some View
P
var lineLimit: Int?
Formatting multiline text
M
func lineSpacing(CGFloat) -> some View
P
var lineSpacing: CGFloat
M
func multilineTextAlignment(TextAlignment) -> some View
P
var multilineTextAlignment: TextAlignment
Managing text entry
M
func typeSelectEquivalent(LocalizedStringKey) -> some View
M
func typeSelectEquivalent<S>(S) -> some View
Localizing text
Preparing views for localization
S
LocalizedStringKey
P
var locale: Locale
M
func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View
Beta
Documentation
Open Menu
Swift
Instance Method
autocorrectionDisabled(_:)
Sets whether to disable autocorrection for this view.
iOS 13.0+
iPadOS 13.0+
macOS 10.15+
Mac Catalyst 13.0+
tvOS 13.0+
watchOS 8.0+
visionOS 1.0+ Beta
func autocorrectionDisabled(_ disable: Bool = true) -> some View
Parameters
disable
A Boolean value that indicates whether autocorrection is disabled for this view. The default value is true.
Discussion
Use this method when the effect of autocorrection would make it more difficult for the user to input information. The entry of proper names and street addresses are examples where autocorrection can negatively affect the user’s ability complete a data entry task.
The example below configures a TextField with the default keyboard. Disabling autocorrection allows the user to enter arbitrary text without the autocorrection system offering suggestions or attempting to override their input.
TextField("1234 Main St.", text: $address)
    .keyboardType(.default)
    .autocorrectionDisabled(true)
See Also
Managing text entry
var autocorrectionDisabled: Bool
A Boolean value that determines whether the view hierarchy has auto-correction enabled.
func keyboardType(UIKeyboardType) -> some View
Sets the keyboard type for this view.
func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View
Configures the behavior in which scrollable content interacts with the software keyboard.
func textContentType(UITextContentType?) -> some View
Sets the text content type for this view, which the system uses to offer suggestions while the user enters text on an iOS or tvOS device.
func textContentType(NSTextContentType?) -> some View
Sets the text content type for this view, which the system uses to offer suggestions while the user enters text on macOS.
func textContentType(WKTextContentType?) -> some View
Sets the text content type for this view, which the system uses to offer suggestions while the user enters text on a watchOS device.
func textInputAutocapitalization(TextInputAutocapitalization?) -> some View
Sets how often the shift key in the keyboard is automatically enabled.
struct TextInputAutocapitalization
The kind of autocapitalization behavior applied during text input.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is autocorrectionDisabled(_:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func contrast(Double) -> some View
M
func brightness(Double) -> some View
Transforming colors
S
ShadowStyle
S
AnyGradient
S
Gradient
S
AnyShapeStyle
Deprecated symbols
M
func hash(into: inout Hasher)
static func == (Color, Color) -> Bool
Comparing colors
P
var description: String
Describing a color
P
var gradient: AnyGradient
M
func opacity(Double) -> Color
Documentation
Open Menu
Swift
Initializer
init(_:)
Creates a color from a UIKit color.
iOS 13.0–17.0 Deprecated
iPadOS 13.0–17.0 Deprecated
Mac Catalyst 13.0–17.0 Deprecated
tvOS 13.0–17.0 Deprecated
watchOS 6.0–10.0 Deprecated
visionOS 1.0–1.0 Deprecated
init(_ color: UIColor)
Deprecated
Use init(uiColor:) instead.
Parameters
color
A UIColor instance from which to create a color.
Discussion
Use this method to create a SwiftUI color from a UIColor instance. The new color preserves the adaptability of the original. For example, you can create a rectangle using link to see how the shade adjusts to match the user’s system settings:
struct Box: View {
    var body: some View {
        Color(UIColor.link)
            .frame(width: 200, height: 100)
    }
}
The Box view defined above automatically changes its appearance when the user turns on Dark Mode. With the light and dark appearances placed side by side, you can see the subtle difference in shades:
Note
Use this initializer only if you need to convert an existing UIColor to a SwiftUI color. Otherwise, create a SwiftUI Color using an initializer like init(_:red:green:blue:opacity:), or use a system color like blue.
See Also
Deprecated symbols
init(NSColor)
Creates a color from an AppKit color.
Deprecated
init(CGColor)
Creates a color from a Core Graphics color.
Deprecated
var cgColor: CGColor?
A Core Graphics representation of the color, if available.
Deprecated
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is init(_:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


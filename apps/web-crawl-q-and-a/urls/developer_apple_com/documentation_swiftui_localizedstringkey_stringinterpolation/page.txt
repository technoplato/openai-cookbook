https://developer.apple.com/documentation/swiftui/localizedstringkey/stringinterpolationSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
Deprecated types
S
TypesettingLanguage
Beta
M
func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View
Beta
M
func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View
Beta
P
var locale: Locale
M
func appendLiteral(String)
M
func appendInterpolation(timerInterval: ClosedRange<Date>, pauseTime: Date?, countsDown: Bool, showsHours: Bool)
M
init(stringInterpolation: LocalizedStringKey.StringInterpolation)
Creating a key from an interpolation
M
init(stringLiteral: String)
M
init(String)
Creating a key from a literal value
S
LocalizedStringKey
Preparing views for localization
Localizing text
Documentation
Open Menu
Swift
Structure
LocalizedStringKey.StringInterpolation
Represents the contents of a string literal with interpolations while it’s being built, for use in creating a localized string key.
iOS 13.0+
iPadOS 13.0+
macOS 10.15+
Mac Catalyst 13.0+
tvOS 13.0+
watchOS 6.0+
visionOS 1.0+ Beta
struct StringInterpolation
Topics
Appending to an interpolation
The compiler uses these methods when interpreting string interpolations; don’t call them directly.
func appendInterpolation(String)
Appends a literal string segment to a string interpolation.
func appendInterpolation(AttributedString)
Appends an attributed string to a string interpolation.
func appendInterpolation<T>(T)
Appends a type, convertible to a string by using a default format specifier, to a string interpolation.
func appendInterpolation<T>(T, specifier: String)
Appends a type, convertible to a string with a format specifier, to a string interpolation.
func appendInterpolation(ClosedRange<Date>)
Appends a date range to a string interpolation.
func appendInterpolation(DateInterval)
Appends a date interval to a string interpolation.
func appendInterpolation<F>(F.FormatInput, format: F)
Appends the formatted representation of a nonstring type supported by a corresponding format style.
func appendInterpolation<Subject>(Subject, formatter: Formatter?)
Appends an optionally-formatted instance of an Objective-C subclass to a string interpolation.
func appendInterpolation<Subject>(Subject, formatter: Formatter?)
Appends an optionally-formatted instance of a Foundation type to a string interpolation.
func appendInterpolation(Date, style: Text.DateStyle)
Appends a formatted date to a string interpolation.
func appendInterpolation(Text)
Appends the string displayed by a text view to a string interpolation.
func appendInterpolation(Image)
Appends an image to a string interpolation.
func appendInterpolation(LocalizedStringResource)
Appends the localized string resource to a string interpolation.
func appendInterpolation(timerInterval: ClosedRange<Date>, pauseTime: Date?, countsDown: Bool, showsHours: Bool)
Appends a timer interval to a string interpolation.
func appendLiteral(String)
Appends a literal string.
Relationships
Conforms To
Sendable
StringInterpolationProtocol
See Also
Creating a key from an interpolation
init(stringInterpolation: LocalizedStringKey.StringInterpolation)
Creates a localized string key from the given string interpolation.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is LocalizedStringKey.StringInterpolation
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


https://developer.apple.com/documentation/swiftui/color/init(_:bundle:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
Add Rich Graphics to Your SwiftUI App
S
Canvas
S
GraphicsContext
Setting a color
M
func tint<S>(S?) -> some View
M
func tint(Color?) -> some View
S
Color
Creating a color from an asset
M
func resolve(in: EnvironmentValues) -> Color.Resolved
Getting standard colors
P
static let black: Color
P
static let blue: Color
P
static let brown: Color
P
static let clear: Color
P
static let cyan: Color
Documentation
Open Menu
Swift
Initializer
init(_:bundle:)
Creates a color from a color set that you indicate by name.
iOS 13.0+
iPadOS 13.0+
macOS 10.15+
Mac Catalyst 13.0+
tvOS 13.0+
watchOS 6.0+
visionOS 1.0+ Beta
init(
    _ name: String,
    bundle: Bundle? = nil
)
Parameters
name
The name of the color resource to look up.
bundle
The bundle in which to search for the color resource. If you don’t indicate a bundle, the initializer looks in your app’s main bundle by default.
Discussion
Use this initializer to load a color from a color set stored in an Asset Catalog. The system determines which color within the set to use based on the environment at render time. For example, you can provide light and dark versions for background and foreground colors:
You can then instantiate colors by referencing the names of the assets:
struct Hello: View {
    var body: some View {
        ZStack {
            Color("background")
            Text("Hello, world!")
                .foregroundStyle(Color("foreground"))
        }
        .frame(width: 200, height: 100)
    }
}
SwiftUI renders the appropriate colors for each appearance:
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is init(_:bundle:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


https://developer.apple.com/documentation/swiftui/system-eventsSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
Views
Persistent storage
Preferences
Environment values
Model data
Data and storage
App extensions
Documentation
Open Menu
Swift
System events
React to system events, like opening a URL.
Overview
Specify view and scene modifiers to indicate how your app responds to certain system events. For example, you can use the onOpenURL(perform:) view modifier to define an action to take when your app receives a universal link, or use the backgroundTask(_:action:) scene modifier to specify an asynchronous task to carry out in response to a background task event, like the completion of a background URL session.
Topics
Handling user activities
Restoring Your App’s State with SwiftUI
Provide app continuity for users by preserving their current activities.
func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View
Advertises a user activity type.
func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View
Advertises a user activity type.
func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View
Registers a handler to invoke when the view receives the specified activity type for the scene or window the view is in.
Handling background tasks
func backgroundTask<D, R>(BackgroundTask<D, R>, action: (D) async -> R) -> some Scene
Runs the specified action when the system provides a background task.
struct BackgroundTask
The kinds of background tasks that your app or extension can handle.
struct SnapshotData
The associated data of a snapshot background task.
struct SnapshotResponse
Your appplication’s response to a snapshot background task.
Handling URLs
func onOpenURL(perform: (URL) -> ()) -> some View
Registers a handler to invoke when the view receives a url for the scene or window the view is in.
var openURL: OpenURLAction
An action that opens a URL.
struct OpenURLAction
An action that opens a URL.
Importing and exporting transferable items
func importableFromServices<T>(for: T.Type, action: ([T]) -> Bool) -> some View
Enables importing items from services, such as Continuity Camera on macOS.
func exportableToServices<T>(() -> [T]) -> some View
Exports items for consumption by shortcuts, quick actions, and services.
func exportableToServices<T>(() -> [T], onEdit: ([T]) -> Bool) -> some View
Exports read-write items for consumption by shortcuts, quick actions, and services.
Importing and exporting using item providers
func importsItemProviders([UTType], onImport: ([NSItemProvider]) -> Bool) -> some View
Enables importing item providers from services, such as Continuity Camera on macOS.
func exportsItemProviders([UTType], onExport: () -> [NSItemProvider]) -> some View
Exports a read-only item provider for consumption by shortcuts, quick actions, and services.
func exportsItemProviders([UTType], onExport: () -> [NSItemProvider], onEdit: ([NSItemProvider]) -> Bool) -> some View
Exports a read-write item provider for consumption by shortcuts, quick actions, and services.
Handling external events
func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View
Specifies a modifier indicating the Scene this View is in can handle matching incoming External Events.
See Also
Event handling
API Reference
Gestures
Define interactions from taps, clicks, and swipes to fine-grained gestures.
API Reference
Input events
Respond to input from a hardware device, like a keyboard or a Touch Bar.
API Reference
Clipboard
Enable people to move or duplicate items by issuing Copy and Paste commands.
API Reference
Drag and drop
Enable people to move or duplicate items by dragging them from one location to another.
API Reference
Focus
Identify and control which visible object responds to user interaction.
Current page is System events
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


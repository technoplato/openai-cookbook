https://developer.apple.com/documentation/swiftui/gesture/onchanged(_:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
S
GestureStateGesture
S
GestureState
Managing gesture state
S
HandActivationBehavior
Beta
S
AnyGesture
M
func targetedToEntity(where: QueryPredicate<Entity>) -> some Gesture<EntityTargetValue<Self.Value>>
Beta
M
func targetedToEntity(Entity) -> some Gesture<EntityTargetValue<Self.Value>>
M
func updating<State>(GestureState<State>, body: (Self.Value, inout State, inout Transaction) -> Void) -> GestureStateGesture<Self, State>
Performing the gesture
Body
P
var body: Self.Body
Implementing a custom gesture
r
P
Gesture
M
func defersSystemGestures(on: Edge.Set) -> some View
M
func highPriorityGesture<T>(T, including: GestureMask) -> some View
Documentation
Open Menu
Swift
Instance Method
onChanged(_:)
Adds an action to perform when the gesture’s value changes.
iOS 13.0+
iPadOS 13.0+
macOS 10.15+
Mac Catalyst 13.0+
tvOS 13.0+
watchOS 6.0+
visionOS 1.0+ Beta
func onChanged(_ action: @escaping (Self.Value) -> Void) -> _ChangedGesture<Self>
Available when Value conforms to Equatable.
Parameters
action
The action to perform when this gesture’s value changes. The action closure’s parameter contains the gesture’s new value.
Return Value
A gesture that triggers action when this gesture’s value changes.
See Also
Performing the gesture
func updating<State>(GestureState<State>, body: (Self.Value, inout State, inout Transaction) -> Void) -> GestureStateGesture<Self, State>
Updates the provided gesture state property as the gesture’s value changes.
func onEnded((Self.Value) -> Void) -> _EndedGesture<Self>
Adds an action to perform when the gesture ends.
associatedtype Value
The type representing the gesture’s value.
Required
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is onChanged(_:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


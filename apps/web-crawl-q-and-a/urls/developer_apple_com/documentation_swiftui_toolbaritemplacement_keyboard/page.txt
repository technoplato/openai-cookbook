https://developer.apple.com/documentation/swiftui/toolbaritemplacement/keyboardSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View
M
func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View
Styling a toolbar
S
ToolbarRole
M
func toolbarRole(ToolbarRole) -> some View
Specifying the role of toolbar content
S
ToolbarPlacement
P
static let bottomOrnament: ToolbarItemPlacement
Beta
P
static let bottomBar: ToolbarItemPlacement
P
static var topBarTrailing: ToolbarItemPlacement
P
static var topBarLeading: ToolbarItemPlacement
Getting explicit placement
P
static let navigation: ToolbarItemPlacement
P
static let destructiveAction: ToolbarItemPlacement
P
static let cancellationAction: ToolbarItemPlacement
Documentation
Open Menu
Swift
Type Property
keyboard
The item is placed in the keyboard section.
iOS 15.0+
iPadOS 15.0+
macOS 12.0+
Mac Catalyst 15.0+
visionOS 1.0+ Beta
static let keyboard: ToolbarItemPlacement
Discussion
On iOS, keyboard items are above the software keyboard when present, or at the bottom of the screen when a hardware keyboard is attached.
On macOS, keyboard items will be placed inside the Touch Bar.
A FocusedValuecan be used to adjust the content of the keyboard bar based on the currently focused view. In the example below, the keyboard bar gains additional buttons only when the appropriate TextField is focused.
enum Field {
    case suit
    case rank
}


struct KeyboardBarDemo : View {
    @FocusedValue(\.field) var field: Field?


    var body: some View {
        HStack {
            TextField("Suit", text: $suitText)
                .focusedValue(\.field, .suit)
            TextField("Rank", text: $rankText)
                .focusedValue(\.field, .rank)
        }
        .toolbar {
            ToolbarItemGroup(placement: .keyboard) {
                if field == .suit {
                    Button("♣️", action: {})
                    Button("♥️", action: {})
                    Button("♠️", action: {})
                    Button("♦️", action: {})
                }
                DoneButton()
            }
        }
    }
}
See Also
Getting explicit placement
static var topBarLeading: ToolbarItemPlacement
Places the item in the leading edge of the top bar.
static var topBarTrailing: ToolbarItemPlacement
Places the item in the trailing edge of the top bar.
static let bottomBar: ToolbarItemPlacement
Places the item in the bottom toolbar.
static let bottomOrnament: ToolbarItemPlacement
Places the item in an ornament under the window.
Beta
static func accessoryBar<ID>(id: ID) -> ToolbarItemPlacement
Creates a unique accessory bar placement.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is keyboard
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


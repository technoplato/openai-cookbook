https://developer.apple.com/documentation/swiftui/environmentvalues/dismisswindowSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
Data and storage
App extensions
Search
Toolbars
Modal presentations
Navigation
Documents
Closing windows
S
OpenWindowAction
P
var openWindow: OpenWindowAction
P
var supportsMultipleWindows: Bool
Presenting windows and spaces
Opening windows
r
P
WindowToolbarStyle
M
func windowToolbarStyle<S>(S) -> some Scene
Documentation
Open Menu
Swift
Instance Property
dismissWindow
A window dismissal action stored in a view’s environment.
iOS 17.0+ Beta
iPadOS 17.0+ Beta
macOS 14.0+ Beta
Mac Catalyst 17.0+ Beta
visionOS 1.0+ Beta
var dismissWindow: DismissWindowAction { get }
Discussion
Use the dismissWindow environment value to get an DismissWindowAction instance for a given Environment. Then call the instance to dismiss a window. You call the instance directly because it defines a callAsFunction(id:) method that Swift calls when you call the instance.
For example, you can define a button that dismisses an auxiliary window:
@main
struct MyApp: App {
    var body: some Scene {
        WindowGroup {
            ContentView()
        }
        #if os(macOS)
        Window("Auxiliary", id: "auxiliary") {
            AuxiliaryContentView()
        }
        #endif
    }
}


struct DismissWindowButton: View {
    @Environment(\.dismissWindow) private var dismissWindow


    var body: some View {
        Button("Close Auxiliary Window") {
            dismissWindow(id: "auxiliary")
        }
    }
}
See Also
Closing windows
struct DismissWindowAction
An action that dismisses a window associated to a particular scene.
Beta
var dismiss: DismissAction
An action that dismisses the current presentation.
struct DismissAction
An action that dismisses a presentation.
struct DismissBehavior
Programmatic window dismissal behaviors.
Beta
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is dismissWindow
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


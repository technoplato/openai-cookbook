https://developer.apple.com/documentation/swiftui/view/onsubmit(of:_:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func digitalCrownAccessory<Content>(content: () -> Content) -> some View
M
func digitalCrownAccessory(Visibility) -> some View
Interacting with the Digital Crown
S
ContentShapeKinds
M
func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View
M
func contentShape<S>(S, eoFill: Bool) -> some View
M
func allowsTightening(Bool) -> some View
Responding to submission events
S
HoverEffect
M
func hoverEffect(HoverEffect) -> some View
Changing view appearance for hover events
E
HoverPhase
P
var isHoverEffectEnabled: Bool
Beta
M
func defaultHoverEffect(HoverEffect?) -> some View
Beta
M
func hoverEffectDisabled(Bool) -> some View
Beta
Documentation
Open Menu
Swift
Instance Method
onSubmit(of:_:)
Adds an action to perform when the user submits a value to this view.
iOS 15.0+
iPadOS 15.0+
macOS 12.0+
Mac Catalyst 15.0+
tvOS 15.0+
watchOS 8.0+
visionOS 1.0+ Beta
func onSubmit(
    of triggers: SubmitTriggers = .text,
    _ action: @escaping (() -> Void)
) -> some View
Parameters
triggers
The triggers that should invoke the provided action.
action
The action to perform on submission of a value.
Discussion
Different views may have different triggers for the provided action. A TextField, or SecureField will trigger this action when the user hits the hardware or software return key. This modifier may also bind this action to a default action keyboard shortcut. You may set this action on an individual view or an entire view hierarchy.
TextField("Username", text: $username)
    .onSubmit {
        guard viewModel.validate() else { return }
        viewModel.login()
    }
You can use the submitScope(_:) modifier to stop a submit trigger from a control from propagating higher up in the view hierarchy to higher View.onSubmit(of:_:) modifiers.
Form {
    TextField("Username", text: $viewModel.userName)
    SecureField("Password", text: $viewModel.password)


    TextField("Tags", text: $viewModel.tags)
        .submitScope()
}
.onSubmit {
    guard viewModel.validate() else { return }
    viewModel.login()
}
You can use different submit triggers to filter the types of triggers that should invoke the provided submission action. For example, you may provide a value of search to only hear submission triggers that originate from search fields vended by searchable modifiers.
@StateObject private var viewModel = ViewModel()


NavigationView {
    SidebarView()
    DetailView()
}
.searchable(
    text: $viewModel.searchText,
    placement: .sidebar
) {
    SuggestionsView()
}
.onSubmit(of: .search) {
    viewModel.submitCurrentSearchQuery()
}
See Also
Responding to submission events
func submitScope(Bool) -> some View
Prevents submission triggers originating from this view to invoke a submission action configured by a submission modifier higher up in the view hierarchy.
struct SubmitTriggers
A type that defines various triggers that result in the firing of a submission action.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is onSubmit(of:_:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright Â© 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
Views
S
SectionedFetchResults
S
SectionedFetchRequest
S
FetchedResults
S
FetchRequest
P
var managedObjectContext: NSManagedObjectContext
Loading and Displaying a Large Data Feed
M
init(wrappedValue: Value, String, store: UserDefaults?)
M
init(wrappedValue: Value, String, store: UserDefaults?)
M
init(wrappedValue: Value, String, store: UserDefaults?)
M
init(wrappedValue: Value, String, store: UserDefaults?)
M
init(wrappedValue: Value, String, store: UserDefaults?)
M
init(wrappedValue: Value, String, store: UserDefaults?)
M
init(wrappedValue: Value, String, store: UserDefaults?)
M
init(wrappedValue: Value, String, store: UserDefaults?)
Documentation
Open Menu
Swift
Initializer
init(wrappedValue:_:store:)
Creates a property that can save and restore table column state.
iOS 17.0+ Beta
iPadOS 17.0+ Beta
macOS 14.0+ Beta
Mac Catalyst 17.0+ Beta
visionOS 1.0+ Beta
init<RowValue>(
    wrappedValue: Value = TableColumnCustomization<RowValue>(),
    _ key: String,
    store: UserDefaults? = nil
) where Value == TableColumnCustomization<RowValue>, RowValue : Identifiable
Parameters
wrappedValue
The default value if table column state is not available for the given key.
key
The key to read and write the value to in the user defaults store.
store
The user defaults store to read and write to. A value of nil will use the user default store from the environment.
Discussion
Table column state is typically not bound from a table directly to AppStorage, but instead indirecting through State or SceneStorage, and using the app storage value as its initial value kept up to date on changes to the direct backing.
See Also
Storing a value
init(wrappedValue: Value, String, store: UserDefaults?)
Creates a property that can read and write to a string user default.
init(wrappedValue: Value, String, store: UserDefaults?)
Creates a property that can read and write to an integer user default, transforming that to RawRepresentable data type.
init(wrappedValue: Value, String, store: UserDefaults?)
Creates a property that can read and write to a user default as data.
init(wrappedValue: Value, String, store: UserDefaults?)
Creates a property that can read and write to an integer user default.
init(wrappedValue: Value, String, store: UserDefaults?)
Creates a property that can read and write to a string user default, transforming that to RawRepresentable data type.
init(wrappedValue: Value, String, store: UserDefaults?)
Creates a property that can read and write to a url user default.
init(wrappedValue: Value, String, store: UserDefaults?)
Creates a property that can read and write to a double user default.
init(wrappedValue: Value, String, store: UserDefaults?)
Creates a property that can read and write to a boolean user default.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is init(wrappedValue:_:store:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright Â© 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


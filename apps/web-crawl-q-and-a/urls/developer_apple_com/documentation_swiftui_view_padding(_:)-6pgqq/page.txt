https://developer.apple.com/documentation/swiftui/view/padding(_:)-6pgqqSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func position(x: CGFloat, y: CGFloat) -> some View
M
func position(CGPoint) -> some View
Making fine adjustments to a view’s position
Adjusting a view’s position
M
func layoutPriority(Double) -> some View
M
func fixedSize(horizontal: Bool, vertical: Bool) -> some View
M
func fixedSize() -> some View
func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View
func frame(minDepth: CGFloat?, idealDepth: CGFloat?, maxDepth: CGFloat?, alignment: DepthAlignment) -> some View
func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View
M
func padding(Edge.Set, CGFloat?) -> some View
M
func padding(CGFloat) -> some View
Adding padding around a view
Inspecting view layout
Laying out a simple view
Finetuning a layout
Layout adjustments
Layout fundamentals
Documentation
Open Menu
Swift
Instance Method
padding(_:)
Adds a different padding amount to each edge of this view.
iOS 13.0+
iPadOS 13.0+
macOS 10.15+
Mac Catalyst 13.0+
tvOS 13.0+
watchOS 6.0+
visionOS 1.0+ Beta
func padding(_ insets: EdgeInsets) -> some View
Parameters
insets
An EdgeInsets instance that contains padding amounts for each edge.
Return Value
A view that’s padded by different amounts on each edge.
Discussion
Use this modifier to add a different amount of padding on each edge of a view:
VStack {
    Text("Text padded by different amounts on each edge.")
        .padding(EdgeInsets(top: 10, leading: 20, bottom: 40, trailing: 0))
        .border(.gray)
    Text("Unpadded text for comparison.")
        .border(.yellow)
}
The order in which you apply modifiers matters. The example above applies the padding before applying the border to ensure that the border encompasses the padded region:
To pad a view on specific edges with equal padding for all padded edges, use padding(_:_:). To pad all edges of a view equally, use padding(_:).
See Also
Adding padding around a view
func padding(CGFloat) -> some View
Adds a specific padding amount to each edge of this view.
func padding(Edge.Set, CGFloat?) -> some View
Adds an equal padding amount to specific edges of this view.
func padding3D(CGFloat) -> some View
Pads this view along all edge insets by the amount you specify.
Beta
func padding3D(EdgeInsets3D) -> some View
Pads this view using the edge insets you specify.
Beta
func padding3D(Edge3D.Set, CGFloat?) -> some View
Pads this view using the edge insets you specify.
Beta
func scenePadding(Edge.Set) -> some View
Adds padding to the specified edges of this view using an amount that’s appropriate for the current scene.
func scenePadding(ScenePadding, edges: Edge.Set) -> some View
Adds a specified kind of padding to the specified edges of this view using an amount that’s appropriate for the current scene.
struct ScenePadding
The padding used to space a view from its containing scene.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is padding(_:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


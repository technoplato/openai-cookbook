https://developer.apple.com/documentation/swiftui/keyboardshortcut/localization-swift.structSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
S
SubmitTriggers
M
func submitScope(Bool) -> some View
M
func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View
Responding to submission events
S
HoverEffect
M
func hoverEffect(HoverEffect) -> some View
Changing view appearance for hover events
func onContinuousHover(coordinateSpace: some CoordinateSpaceProtocol, perform: (HoverPhase) -> Void) -> some View
P
var localization: KeyboardShortcut.Localization
M
init(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization)
Creating a localized shortcut
P
var modifiers: EventModifiers
P
var key: KeyEquivalent
M
init(KeyEquivalent, modifiers: EventModifiers)
Creating a shortcut
P
static let defaultAction: KeyboardShortcut
Documentation
Open Menu
Swift
Structure
KeyboardShortcut.Localization
Options for how a keyboard shortcut participates in automatic localization.
iOS 15.0+
iPadOS 15.0+
macOS 12.0+
Mac Catalyst 15.0+
visionOS 1.0+ Beta
struct Localization
Overview
A shortcut’s key that is defined on an US-English keyboard layout might not be reachable on international layouts. For example the shortcut ⌘[ works well for the US layout but is hard to reach for German users. On the German keyboard layout, pressing ⌥5 will produce [, which causes the shortcut to become ⌥⌘5. If configured, which is the default behavior, automatic shortcut remapping will convert it to ⌘Ö.
In addition to that, some keyboard shortcuts carry information about directionality. Right-aligning a block of text or seeking forward in context of music playback are such examples. These kinds of shortcuts benefit from the option withoutMirroring to tell the system that they won’t be flipped when running in a right-to-left context.
Topics
Getting localization strategies
static let automatic: KeyboardShortcut.Localization
Remap shortcuts to their international counterparts, mirrored for right-to-left usage if appropriate.
static let custom: KeyboardShortcut.Localization
Don’t use automatic shortcut remapping.
static let withoutMirroring: KeyboardShortcut.Localization
Don’t mirror shortcuts.
Relationships
Conforms To
Sendable
See Also
Creating a localized shortcut
init(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization)
Creates a new keyboard shortcut with the given key equivalent and set of modifier keys.
var localization: KeyboardShortcut.Localization
The localization strategy to apply to this shortcut.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is KeyboardShortcut.Localization
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


https://developer.apple.com/documentation/swiftui/nsviewcontrollerrepresentable/updatensviewcontroller(_:context:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
S
NSHostingSizingOptions
S
NSHostingSceneBridgingOptions
Beta
Adding AppKit views to SwiftUI view hierarchies
r
P
NSViewRepresentable
S
NSViewRepresentableContext
r
P
NSViewControllerRepresentable
Creating and updating the view controller
M
func makeNSViewController(context: Self.Context) -> Self.NSViewControllerType
func sizeThatFits(ProposedViewSize, nsViewController: Self.NSViewControllerType, context: Self.Context) -> CGSize?
Technology-specific views
Tool support
Previews in Xcode
Xcode library customization
Articles
Backyard Birds: Building an app with SwiftData and widgets
Building a document-based app using SwiftData
Documentation
Open Menu
Swift
Instance Method
updateNSViewController(_:context:)
Updates the state of the specified view controller with new information from SwiftUI.
macOS 10.15+
@MainActor
func updateNSViewController(
    _ nsViewController: Self.NSViewControllerType,
    context: Self.Context
)
Required
Parameters
nsViewController
Your custom view controller object.
context
A context structure containing information about the current state of the system.
Discussion
When the state of your app changes, SwiftUI updates the portions of your interface affected by those changes. SwiftUI calls this method for any changes affecting the corresponding AppKit view controller. Use this method to update the configuration of your view controller to match the new state information provided in the context parameter.
See Also
Creating and updating the view controller
func makeNSViewController(context: Self.Context) -> Self.NSViewControllerType
Creates the view controller object and configures its initial state.
Required
typealias Context
associatedtype NSViewControllerType : NSViewController
The type of view controller to present.
Required
Current page is updateNSViewController(_:context:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright Â© 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


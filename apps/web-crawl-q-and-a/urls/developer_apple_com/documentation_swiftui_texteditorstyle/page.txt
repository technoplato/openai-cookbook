https://developer.apple.com/documentation/swiftui/texteditorstyleSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
S
ProgressViewStyleConfiguration
Styling views that display text
M
func labelStyle<S>(S) -> some View
r
P
LabelStyle
S
LabelStyleConfiguration
M
func textFieldStyle<S>(S) -> some View
r
P
TextFieldStyle
M
func textEditorStyle(some TextEditorStyle) -> some View
Beta
M
func listStyle<S>(S) -> some View
r
P
ListStyle
M
func tableStyle<S>(S) -> some View
r
P
TableStyle
S
TableStyleConfiguration
M
func disclosureGroupStyle<S>(S) -> some View
r
P
DisclosureGroupStyle
Documentation
Open Menu
Swift
Protocol
TextEditorStyle
A specification for the appearance and interaction of a text editor.
iOS 17.0+ Beta
iPadOS 17.0+ Beta
macOS 14.0+ Beta
Mac Catalyst 17.0+ Beta
visionOS 1.0+ Beta
protocol TextEditorStyle
Topics
Getting built-in styles
static var automatic: AutomaticTextEditorStyle
The default text editor style, based on the text editor’s context.
Available when Self is AutomaticTextEditorStyle.
static var plain: PlainTextEditorStyle
A text editor style with no decoration.
Available when Self is PlainTextEditorStyle.
static var roundedBorder: RoundedBorderTextEditorStyle
A text editor style with a system-defined rounded border.
Available when Self is RoundedBorderTextEditorStyle.
Creating custom styles
func makeBody(configuration: Self.Configuration) -> Self.Body
Creates a view that represents the body of a text editor.
Required
typealias Configuration
The properties of a text editor.
associatedtype Body : View
A view that represents the body of a text editor.
Required
Supporting types
struct AutomaticTextEditorStyle
The default text editor style, based on the text editor’s context.
struct PlainTextEditorStyle
A text editor style with no decoration.
struct RoundedBorderTextEditorStyle
A text editor style with a system-defined rounded border.
Relationships
Conforming Types
AutomaticTextEditorStyle
PlainTextEditorStyle
RoundedBorderTextEditorStyle
See Also
Styling views that display text
func labelStyle<S>(S) -> some View
Sets the style for labels within this view.
protocol LabelStyle
A type that applies a custom appearance to all labels within a view.
struct LabelStyleConfiguration
The properties of a label.
func textFieldStyle<S>(S) -> some View
Sets the style for text fields within this view.
protocol TextFieldStyle
A specification for the appearance and interaction of a text field.
func textEditorStyle(some TextEditorStyle) -> some View
Sets the style for text editors within this view.
Beta
struct TextEditorStyleConfiguration
The properties of a text editor.
Beta
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is TextEditorStyle
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


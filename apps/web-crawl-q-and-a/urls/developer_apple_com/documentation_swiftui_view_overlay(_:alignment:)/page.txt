https://developer.apple.com/documentation/swiftui/view/overlay(_:alignment:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
Layout modifiers
M
func navigationViewStyle<S>(S) -> some View
Deprecated
M
func menuButtonStyle<S>(S) -> some View
Deprecated
Style modifiers
M
func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View
Deprecated
M
func statusBar(hidden: Bool) -> some View
Deprecated
M
func navigationBarHidden(Bool) -> some View
func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View
M
func background<Background>(Background, alignment: Alignment) -> some View
Deprecated
M
func listRowPlatterColor(Color?) -> some View
Deprecated
M
func colorScheme(ColorScheme) -> some View
Deprecated
Appearance modifiers
M
func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>
Deprecated
M
func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>
Deprecated
M
func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>
Deprecated
M
func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>
Deprecated
Documentation
Open Menu
Swift
Instance Method
overlay(_:alignment:)
Layers a secondary view in front of this view.
iOS 13.0–17.0 Deprecated
iPadOS 13.0–17.0 Deprecated
macOS 10.15–14.0 Deprecated
Mac Catalyst 13.0–17.0 Deprecated
tvOS 13.0–17.0 Deprecated
watchOS 6.0–10.0 Deprecated
visionOS 1.0–1.0 Deprecated
func overlay<Overlay>(
    _ overlay: Overlay,
    alignment: Alignment = .center
) -> some View where Overlay : View
Deprecated
Use overlay(alignment:content:) instead.
Parameters
overlay
The view to layer in front of this view.
alignment
The alignment for overlay in relation to this view.
Return Value
A view that layers overlay in front of the view.
Discussion
When you apply an overlay to a view, the original view continues to provide the layout characteristics for the resulting view. In the following example, the heart image is shown overlaid in front of, and aligned to the bottom of the folder image.
Image(systemName: "folder")
    .font(.system(size: 55, weight: .thin))
    .overlay(Text("❤️"), alignment: .bottom)
See Also
Appearance modifiers
func colorScheme(ColorScheme) -> some View
Sets this view’s color scheme.
Deprecated
func listRowPlatterColor(Color?) -> some View
Sets the color that the system applies to the row background when this view is placed in a list.
Deprecated
func background<Background>(Background, alignment: Alignment) -> some View
Layers the given view behind this view.
Deprecated
func foregroundColor(Color?) -> some View
Sets the color of the foreground elements displayed by this view.
Deprecated
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is overlay(_:alignment:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


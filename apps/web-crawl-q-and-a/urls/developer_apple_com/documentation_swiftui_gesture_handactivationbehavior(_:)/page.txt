https://developer.apple.com/documentation/swiftui/gesture/handactivationbehavior(_:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func simultaneously<Other>(with: Other) -> SimultaneousGesture<Self, Other>
M
func sequenced<Other>(before: Other) -> SequenceGesture<Self, Other>
M
func exclusively<Other>(before: Other) -> ExclusiveGesture<Self, Other>
Adding modifier keys to a gesture
M
func modifiers(EventModifiers) -> _ModifiersGesture<Self>
Transforming a gesture
M
func map<T>((Self.Value) -> T) -> _MapGesture<Self, T>
Customizing gesture activation
Drag and drop
Focus
System events
Accessibility
Accessibility fundamentals
Accessible appearance
Accessible controls
Documentation
Open Menu
Swift
Instance Method
handActivationBehavior(_:)
Customizes the activation behavior for a gesture when driven by hand or hand-like input. Use automatic to allow a gesture to activate with default system behaviors. Use pinch when a gesture should only trigger when the hand is pinched.
visionOS 1.0+ Beta
func handActivationBehavior(_ behavior: HandActivationBehavior) -> some Gesture<Self.Value>
Parameters
behavior
The hand activation behavior to use for the gesture.
Return Value
A new gesture with a preference to activate with the provided behavior.
Discussion
For example, in a 3D chess application, a DragGesture that enables movement of the pieces could use handActivationBehavior(.pinch) to ensure that piece movement is only possible when a hand is pinched in order to avoid pushing the piece around by only touching it:
Model3D("Pawn")
.gesture(DragGesture().handActivationBehavior(.pinch)
.updating($chessDragState) { value, state, _ in
   ...
})
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is handActivationBehavior(_:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright Â© 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


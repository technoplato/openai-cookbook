https://developer.apple.com/documentation/swiftui/view/ontapgesture(count:coordinatespace:perform:)-21n4iSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
S
SequenceGesture
M
func simultaneousGesture<T>(T, including: GestureMask) -> some View
Composing SwiftUI gestures
Combining gestures
S
GestureMask
S
RotateGesture3D
Beta
S
RotateGesture
func onLongTouchGesture(minimumDuration: Double, perform: () -> Void, onTouchingChanged: ((Bool) -> Void)?) -> some View
func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View
func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View
func onTapGesture(count: Int, coordinateSpace: some CoordinateSpaceProtocol, perform: (CGPoint) -> Void) -> some View
M
func onTapGesture(count: Int, perform: () -> Void) -> some View
Recognizing tap gestures
Adding interactivity with gestures
Essentials
Gestures
Event handling
Scroll views
View groupings
Documentation
Open Menu
Swift
Instance Method
onTapGesture(count:coordinateSpace:perform:)
Adds an action to perform when this view recognizes a tap gesture, and provides the action with the location of the interaction.
iOS 17.0+ Beta
iPadOS 17.0+ Beta
macOS 14.0+ Beta
Mac Catalyst 17.0+ Beta
watchOS 10.0+ Beta
visionOS 1.0+ Beta
func onTapGesture(
    count: Int = 1,
    coordinateSpace: some CoordinateSpaceProtocol = .local,
    perform action: @escaping (CGPoint) -> Void
) -> some View
Parameters
count
The number of taps or clicks required to trigger the action closure provided in action. Defaults to 1.
coordinateSpace
The coordinate space in which to receive location values. Defaults to CoordinateSpace.local.
action
The action to perform. This closure receives an input that indicates where the interaction occurred.
Discussion
Use this method to perform the specified action when the user clicks or taps on the modified view count times. The action closure receives the location of the interaction.
Note
If you create a control that’s functionally equivalent to a Button, use ButtonStyle to create a customized button instead.
The following code adds a tap gesture to a Circle that toggles the color of the circle based on the tap location.
struct TapGestureExample: View {
    @State private var location: CGPoint = .zero


    var body: some View {
        Circle()
            .fill(self.location.y > 50 ? Color.blue : Color.red)
            .frame(width: 100, height: 100, alignment: .center)
            .onTapGesture { location in
                self.location = location
            }
    }
}
See Also
Recognizing tap gestures
func onTapGesture(count: Int, perform: () -> Void) -> some View
Adds an action to perform when this view recognizes a tap gesture.
struct TapGesture
A gesture that recognizes one or more taps.
struct SpatialTapGesture
A gesture that recognizes one or more taps and reports their location.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is onTapGesture(count:coordinateSpace:perform:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


https://developer.apple.com/documentation/swiftui/color/rgbcolorspaceSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
P
static let gray: Color
P
static let cyan: Color
P
static let clear: Color
P
static let brown: Color
P
static let blue: Color
P
static let black: Color
Getting standard colors
M
init(Color.RGBColorSpace, red: Double, green: Double, blue: Double, opacity: Double)
M
init(Color.RGBColorSpace, white: Double, opacity: Double)
M
init(hue: Double, saturation: Double, brightness: Double, opacity: Double)
Creating a color from component values
M
init(String, bundle: Bundle?)
Creating a color from an asset
S
Color
M
func tint(Color?) -> some View
Documentation
Open Menu
Swift
Enumeration
Color.RGBColorSpace
A profile that specifies how to interpret a color value for display.
iOS 13.0+
iPadOS 13.0+
macOS 10.15+
Mac Catalyst 13.0+
tvOS 13.0+
watchOS 6.0+
visionOS 1.0+ Beta
enum RGBColorSpace
Topics
Getting color spaces
case sRGB
The extended red, green, blue (sRGB) color space.
case sRGBLinear
The extended sRGB color space with a linear transfer function.
case displayP3
The Display P3 color space.
Relationships
Conforms To
Equatable
Hashable
Sendable
See Also
Creating a color from component values
init(hue: Double, saturation: Double, brightness: Double, opacity: Double)
Creates a constant color from hue, saturation, and brightness values.
init(Color.RGBColorSpace, white: Double, opacity: Double)
Creates a constant grayscale color.
init(Color.RGBColorSpace, red: Double, green: Double, blue: Double, opacity: Double)
Creates a constant color from red, green, and blue component values.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is Color.RGBColorSpace
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright Â© 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


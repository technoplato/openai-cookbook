https://developer.apple.com/documentation/swiftui/view/navigationdestination(ispresented:destination:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View
M
func navigationBarBackButtonHidden(Bool) -> some View
Configuring the navigation bar
M
func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View
M
func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View
M
func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View
M
func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View
M
func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View
S
NavigationPath
S
NavigationStack
Stacking views in one column
S
NavigationLink
S
NavigationSplitViewVisibility
M
func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View
M
func navigationSplitViewColumnWidth(CGFloat) -> some View
Documentation
Open Menu
Swift
Instance Method
navigationDestination(isPresented:destination:)
Associates a destination view with a binding that can be used to push the view onto a NavigationStack.
iOS 16.0+
iPadOS 16.0+
macOS 13.0+
Mac Catalyst 16.0+
tvOS 16.0+
watchOS 9.0+
visionOS 1.0+ Beta
func navigationDestination<V>(
    isPresented: Binding<Bool>,
    @ViewBuilder destination: () -> V
) -> some View where V : View
Parameters
isPresented
A binding to a Boolean value that indicates whether destination is currently presented.
destination
A view to present.
Discussion
In general, favor binding a path to a navigation stack for programmatic navigation. Add this view modifer to a view inside a NavigationStack to programmatically push a single view onto the stack. This is useful for building components that can push an associated view. For example, you can present a ColorDetail view for a particular color:
@State private var showDetails = false
var favoriteColor: Color


NavigationStack {
    VStack {
        Circle()
            .fill(favoriteColor)
        Button("Show details") {
            showDetails = true
        }
    }
    .navigationDestination(isPresented: $showDetails) {
        ColorDetail(color: favoriteColor)
    }
    .navigationTitle("My Favorite Color")
}
Do not put a navigation destination modifier inside a “lazy” container, like List or LazyVStack. These containers create child views only when needed to render on screen. Add the navigation destination modifier outside these containers so that the navigation stack can always see the destination.
See Also
Stacking views in one column
struct NavigationStack
A view that displays a root view and enables you to present additional views over the root view.
struct NavigationPath
A type-erased list of data representing the content of a navigation stack.
func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View
Associates a destination view with a presented data type for use within a navigation stack.
func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View
Associates a destination view with a bound value for use within a navigation stack or navigation split view
Beta
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is navigationDestination(isPresented:destination:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


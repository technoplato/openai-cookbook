https://developer.apple.com/documentation/swiftui/colorpickerSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
S
PaletteSelectionEffect
Beta
Choosing dates
S
DatePicker
M
func datePickerStyle<S>(S) -> some View
S
MultiDatePicker
P
var calendar: Calendar
P
var timeZone: TimeZone
Choosing a color
Indicating missing content
S
ContentUnavailableView
Beta
Providing haptic feedback
M
func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View
Beta
M
func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View
Beta
M
func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View
Beta
S
SensoryFeedback
Beta
Documentation
Open Menu
Swift
Structure
ColorPicker
A control used to select a color from the system color picker UI.
iOS 14.0+
iPadOS 14.0+
macOS 11.0+
Mac Catalyst 14.0+
visionOS 1.0+ Beta
struct ColorPicker<Label> where Label : View
Overview
The color picker provides a color well that shows the currently selected color, and displays the larger system color picker that allows users to select a new color.
By default color picker supports colors with opacity; to disable opacity support, set the supportsOpacity parameter to false. In this mode the color picker won’t show controls for adjusting the opacity of the selected color, and strips out opacity from any color set programmatically or selected from the user’s system favorites.
You use ColorPicker by embedding it inside a view hierarchy and initializing it with a title string and a Binding to a Color:
struct FormattingControls: View {
    @State private var bgColor =
        Color(.sRGB, red: 0.98, green: 0.9, blue: 0.2)


    var body: some View {
        VStack {
            ColorPicker("Alignment Guides", selection: $bgColor)
        }
    }
}
Topics
Creating a color picker
init(selection: Binding<Color>, supportsOpacity: Bool, label: () -> Label)
Creates an instance that selects a color.
init(LocalizedStringKey, selection: Binding<Color>, supportsOpacity: Bool)
Creates a color picker with a text label generated from a title string key.
Available when Label is Text.
init<S>(S, selection: Binding<Color>, supportsOpacity: Bool)
Creates a color picker with a text label generated from a title string.
Available when Label is Text.
Creating a core graphics color picker
init(selection: Binding<CGColor>, supportsOpacity: Bool, label: () -> Label)
Creates an instance that selects a color.
init(LocalizedStringKey, selection: Binding<CGColor>, supportsOpacity: Bool)
Creates a color picker with a text label generated from a title string key.
Available when Label is Text.
init<S>(S, selection: Binding<CGColor>, supportsOpacity: Bool)
Creates a color picker with a text label generated from a title string.
Available when Label is Text.
Relationships
Conforms To
Sendable
View
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is ColorPicker
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


https://developer.apple.com/documentation/swiftui/horizontalalignment/init(_:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
E
LayoutDirectionBehavior
Beta
M
func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View
Beta
Setting a layout direction
S
SafeAreaRegions
M
func safeAreaPadding(Edge.Set, CGFloat?) -> some View
Beta
M
func safeAreaPadding(CGFloat) -> some View
Beta
M
func safeAreaPadding(EdgeInsets) -> some View
func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View
func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View
Creating a custom alignment
P
static let listRowSeparatorTrailing: HorizontalAlignment
P
static let listRowSeparatorLeading: HorizontalAlignment
P
static let trailing: HorizontalAlignment
P
static let center: HorizontalAlignment
P
static let leading: HorizontalAlignment
Getting guides
S
HorizontalAlignment
Documentation
Open Menu
Swift
Initializer
init(_:)
Creates a custom horizontal alignment of the specified type.
iOS 13.0+
iPadOS 13.0+
macOS 10.15+
Mac Catalyst 13.0+
tvOS 13.0+
watchOS 6.0+
visionOS 1.0+ Beta
init(_ id: AlignmentID.Type)
Parameters
id
The type of an identifier that uniquely identifies a horizontal alignment.
Discussion
Use this initializer to create a custom horizontal alignment. Define an AlignmentID type, and then use that type to create a new static property on HorizontalAlignment:
private struct OneQuarterAlignment: AlignmentID {
    static func defaultValue(in context: ViewDimensions) -> CGFloat {
        context.width / 4
    }
}


extension HorizontalAlignment {
    static let oneQuarter = HorizontalAlignment(OneQuarterAlignment.self)
}
Every horizontal alignment instance that you create needs a unique identifier. For more information, see AlignmentID.
See Also
Creating a custom alignment
func combineExplicit<S>(S) -> CGFloat?
Merges a sequence of explicit alignment values produced by this instance.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is init(_:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright Â© 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


https://developer.apple.com/documentation/swiftui/openurlaction/init(handler:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
Framework integration
Accessible navigation
Accessible descriptions
Accessible controls
Accessible appearance
Accessibility fundamentals
Accessibility
func exportsItemProviders([UTType], onExport: () -> [NSItemProvider], onEdit: ([NSItemProvider]) -> Bool) -> some View
Creating the action
S
OpenURLAction
P
var openURL: OpenURLAction
M
func onOpenURL(perform: (URL) -> ()) -> some View
Handling URLs
S
SnapshotResponse
S
SnapshotData
S
BackgroundTask
Documentation
Open Menu
Swift
Initializer
init(handler:)
Creates an action that opens a URL.
iOS 15.0+
iPadOS 15.0+
macOS 12.0+
Mac Catalyst 15.0+
tvOS 15.0+
watchOS 8.0+
visionOS 1.0+ Beta
init(handler: @escaping (URL) -> OpenURLAction.Result)
Parameters
handler
The closure to run for the given URL. The closure takes a URL as input, and returns a OpenURLAction.Result that indicates the outcome of the action.
Discussion
Use this initializer to create a custom action for opening URLs. Provide a handler that takes a URL and returns an OpenURLAction.Result. Place your handler in the environment using the environment(_:_:) view modifier:
Text("Visit [Example Company](https://www.example.com) for details.")
    .environment(\.openURL, OpenURLAction { url in
        handleURL(url) // Define this method to take appropriate action.
        return .handled
    })
Any views that read the action from the environment, including the built-in Link view and Text views with markdown links, or links in attributed strings, use your action.
SwiftUI translates the value that your custom action’s handler returns into an appropriate Boolean result for the action call. For example, a view that uses the action declared above receives true when calling the action, because the handler always returns handled.
See Also
Creating the action
struct Result
The result of a custom open URL action.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is init(handler:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


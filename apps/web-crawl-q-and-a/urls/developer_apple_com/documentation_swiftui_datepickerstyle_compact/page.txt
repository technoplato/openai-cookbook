https://developer.apple.com/documentation/swiftui/datepickerstyle/compactSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
Styling toggles
S
MenuStyleConfiguration
r
P
MenuStyle
M
func menuStyle<S>(S) -> some View
Styling menus
S
WheelDatePickerStyle
S
StepperFieldDatePickerStyle
P
static var automatic: DefaultDatePickerStyle
Getting built-in date picker styles
r
P
DatePickerStyle
M
func datePickerStyle<S>(S) -> some View
r
P
PickerStyle
M
func pickerStyle<S>(S) -> some View
Styling pickers
M
func signInWithAppleButtonStyle(SignInWithAppleButton.Style) -> some View
Documentation
Open Menu
Swift
Type Property
compact
A date picker style that displays the components in a compact, textual format.
iOS 14.0+
iPadOS 14.0+
macOS 10.15.4+
Mac Catalyst 13.4+
visionOS 1.0+ Beta
static var compact: CompactDatePickerStyle { get }
Available when Self is CompactDatePickerStyle.
Discussion
Use this style when space is constrained and users expect to make specific date and time selections. Some variants may include rich editing controls in a pop up.
See Also
Getting built-in date picker styles
static var automatic: DefaultDatePickerStyle
The default style for date pickers.
Available when Self is DefaultDatePickerStyle.
static var field: FieldDatePickerStyle
A date picker style that displays the components in an editable field.
Available when Self is FieldDatePickerStyle.
static var graphical: GraphicalDatePickerStyle
A date picker style that displays an interactive calendar or clock.
Available when Self is GraphicalDatePickerStyle.
static var stepperField: StepperFieldDatePickerStyle
A system style that displays the components in an editable field, with adjoining stepper that can increment/decrement the selected component.
Available when Self is StepperFieldDatePickerStyle.
static var wheel: WheelDatePickerStyle
A date picker style that displays each component as columns in a scrollable wheel.
Available when Self is WheelDatePickerStyle.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is compact
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright Â© 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


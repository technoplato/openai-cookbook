https://developer.apple.com/documentation/swiftui/timelineschedule/entries(from:mode:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
S
TransitionProperties
Beta
r
P
Transition
Beta
M
func transition(AnyTransition) -> some View
M
func transition<T>(T) -> some View
Beta
Defining transitions
M
func geometryGroup() -> some View
Beta
S
Namespace
func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View
Getting a sequence of dates
M
static func periodic(from: Date, by: TimeInterval) -> PeriodicTimelineSchedule
M
static func explicit<S>(S) -> ExplicitTimelineSchedule<S>
P
static var everyMinute: EveryMinuteTimelineSchedule
M
static func animation(minimumInterval: Double?, paused: Bool) -> AnimationTimelineSchedule
P
static var animation: AnimationTimelineSchedule
Getting built-in schedules
r
P
TimelineSchedule
Documentation
Open Menu
Swift
Instance Method
entries(from:mode:)
Provides a sequence of dates starting around a given date.
iOS 15.0+
iPadOS 15.0+
macOS 12.0+
Mac Catalyst 15.0+
tvOS 15.0+
watchOS 8.0+
visionOS 1.0+ Beta
func entries(
    from startDate: Date,
    mode: Self.Mode
) -> Self.Entries
Required
Parameters
startDate
The date by which the sequence begins.
mode
An indication of whether the schedule updates normally, or with some other cadence.
Return Value
A sequence of dates in ascending order.
Discussion
A TimelineView that you create calls this method to figure out when to update its content. The method returns a sequence of dates in increasing order that represent points in time when the timeline view should update. Types that conform to the TimelineSchedule protocol, like the one returned by periodic(from:by:), or a custom schedule that you define, implement a custom version of this method to implement a particular kind of schedule.
One or more dates in the sequence might be before the given startDate, in which case the timeline view performs its first update at startDate using the entry that most closely precedes that date. For example, if in response to a startDate of 10:09:55, the method returns a sequence with the values 10:09:00, 10:10:00, 10:11:00, and so on, the timeline view performs an initial update at 10:09:55 (using the 10:09:00 entry), followed by another update at the beginning of every minute, starting at 10:10:00.
A type that conforms should adjust its behavior based on the mode when possible. For example, a periodic schedule providing updates for a timer could restrict updates to once per minute while in the TimelineScheduleMode.lowFrequency mode:
func entries(
    from startDate: Date, mode: TimelineScheduleMode
) -> PeriodicTimelineSchedule {
    .periodic(
        from: startDate, by: (mode == .lowFrequency ? 60.0 : 1.0)
    )
}
See Also
Getting a sequence of dates
associatedtype Entries : Sequence
The sequence of dates within a schedule.
Required
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is entries(from:mode:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright Â© 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


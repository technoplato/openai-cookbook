https://developer.apple.com/documentation/swiftui/layoutsubview/prioritySkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
Event handling
Scroll views
View groupings
Tables
Lists
S
GridLayout
S
ZStackLayout
P
var spacing: ViewSpacing
M
func sizeThatFits(ProposedViewSize) -> CGSize
M
func dimensions(in: ProposedViewSize) -> ViewDimensions
Getting subview characteristics
M
func place(at: CGPoint, anchor: UnitPoint, proposal: ProposedViewSize)
Placing the subview
S
LayoutSubview
r
P
Layout
Documentation
Open Menu
Swift
Instance Property
priority
The layout priority of the subview.
iOS 16.0+
iPadOS 16.0+
macOS 13.0+
Mac Catalyst 16.0+
tvOS 16.0+
watchOS 9.0+
visionOS 1.0+ Beta
var priority: Double { get }
Discussion
If you define a custom layout type using the Layout protocol, you can read this value from subviews and use the value when deciding how to assign space to subviews. For example, you can read all of the subview priorities into an array before placing the subviews in a custom layout type called BasicVStack:
extension BasicVStack {
    func placeSubviews(
        in bounds: CGRect,
        proposal: ProposedViewSize,
        subviews: Subviews,
        cache: inout ()
    ) {
        let priorities = subviews.map { subview in
            subview.priority
        }


        // Place views, based on priorities.
    }
}
Set the layout priority for a view that appears in your layout by applying the layoutPriority(_:) view modifier. For example, you can assign two different priorities to views that you arrange with BasicVStack:
BasicVStack {
    Text("High priority")
        .layoutPriority(10)
    Text("Low priority")
        .layoutPriority(1)
}
See Also
Getting subview characteristics
func dimensions(in: ProposedViewSize) -> ViewDimensions
Asks the subview for its dimensions and alignment guides.
func sizeThatFits(ProposedViewSize) -> CGSize
Asks the subview for its size.
var spacing: ViewSpacing
The subviews’s preferred spacing values.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is priority
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


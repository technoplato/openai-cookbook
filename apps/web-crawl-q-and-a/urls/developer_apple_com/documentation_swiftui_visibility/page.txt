https://developer.apple.com/documentation/swiftui/visibilitySkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
Hiding views
M
func opacity(Double) -> some View
M
func hidden() -> some View
Hiding system elements
M
func labelsHidden() -> some View
M
func menuIndicator(Visibility) -> some View
M
func statusBarHidden(Bool) -> some View
M
func persistentSystemOverlays(Visibility) -> some View
M
func glassBackgroundEffect(displayMode: GlassBackgroundDisplayMode) -> some View
M
func glassBackgroundEffect<S>(in: S, displayMode: GlassBackgroundDisplayMode) -> some View
Beta
E
GlassBackgroundDisplayMode
Beta
Detecting and requesting the light or dark appearance
M
func preferredColorScheme(ColorScheme?) -> some View
P
var colorScheme: ColorScheme
E
ColorScheme
Documentation
Open Menu
Swift
Enumeration
Visibility
The visibility of a UI element, chosen automatically based on the platform, current context, and other factors.
iOS 15.0+
iPadOS 15.0+
macOS 12.0+
Mac Catalyst 15.0+
tvOS 15.0+
watchOS 8.0+
visionOS 1.0+ Beta
@frozen
enum Visibility
Overview
For example, the preferred visibility of list row separators can be configured using the listRowSeparator(_:edges:).
Topics
Getting visibility options
case automatic
The element may be visible or hidden depending on the policies of the component accepting the visibility configuration.
case visible
The element may be visible.
case hidden
The element may be hidden.
Relationships
Conforms To
CaseIterable
Equatable
Hashable
Sendable
See Also
Hiding system elements
func labelsHidden() -> some View
Hides the labels of any controls contained within this view.
func menuIndicator(Visibility) -> some View
Sets the menu indicator visibility for controls within this view.
func statusBarHidden(Bool) -> some View
Sets the visibility of the status bar.
func persistentSystemOverlays(Visibility) -> some View
Sets the preferred visibility of the non-transient system views overlaying the app.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is Visibility
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright Â© 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


https://developer.apple.com/documentation/swiftui/togglestyleconfigurationSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func textEditorStyle(some TextEditorStyle) -> some View
Beta
r
P
TextFieldStyle
M
func textFieldStyle<S>(S) -> some View
S
LabelStyleConfiguration
r
P
LabelStyle
M
func labelStyle<S>(S) -> some View
Styling views that display text
r
P
ToggleStyle
M
func toggleStyle<S>(S) -> some View
Styling toggles
S
MenuStyleConfiguration
r
P
MenuStyle
M
func menuStyle<S>(S) -> some View
Styling menus
r
P
DatePickerStyle
Documentation
Open Menu
Swift
Structure
ToggleStyleConfiguration
The properties of a toggle instance.
iOS 13.0+
iPadOS 13.0+
macOS 10.15+
Mac Catalyst 13.0+
tvOS 13.0+
watchOS 6.0+
visionOS 1.0+ Beta
struct ToggleStyleConfiguration
Overview
When you define a custom toggle style by creating a type that conforms to the ToggleStyle protocol, you implement the makeBody(configuration:) method. That method takes a ToggleStyleConfiguration input that has the information you need to define the behavior and appearance of a Toggle.
The configuration structure’s label reflects the toggle’s content, which might be the value that you supply to the label parameter of the init(isOn:label:) initializer. Alternatively, it could be another view that SwiftUI builds from an initializer that takes a string input, like init(_:isOn:). In either case, incorporate the label into the toggle’s view to help the user understand what the toggle does. For example, the built-in switch style horizontally stacks the label with the control element.
The structure’s isOn property provides a Binding to the state of the toggle. Adjust the appearance of the toggle based on this value. For example, the built-in button style fills the button’s background when the property is true, but leaves the background empty when the property is false. Change the value when the user performs an action that’s meant to change the toggle, like the button does when tapped or clicked by the user.
Topics
Getting the label view
let label: ToggleStyleConfiguration.Label
A view that describes the effect of switching the toggle between states.
struct Label
A type-erased label of a toggle.
Managing the toggle state
var isMixed: Bool
Whether the Toggle is currently in a mixed state.
var isOn: Bool
A binding to a state property that indicates whether the toggle is on.
var $isOn: Binding<Bool>
Relationships
Conforms To
Sendable
See Also
Styling toggles
func toggleStyle<S>(S) -> some View
Sets the style for toggles in a view hierarchy.
protocol ToggleStyle
The appearance and behavior of a toggle.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is ToggleStyleConfiguration
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


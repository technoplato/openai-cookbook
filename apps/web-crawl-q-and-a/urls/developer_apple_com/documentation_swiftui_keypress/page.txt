https://developer.apple.com/documentation/swiftui/keypressSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func onContinuousHover(coordinateSpace: some CoordinateSpaceProtocol, perform: (HoverPhase) -> Void) -> some View
Beta
M
func onHover(perform: (Bool) -> Void) -> some View
Responding to hover events
S
EventModifiers
S
KeyEquivalent
S
KeyboardShortcut
P
var keyboardShortcut: KeyboardShortcut?
func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View
M
func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View
Beta
M
func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View
Beta
M
func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View
Beta
M
func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View
Beta
M
func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View
Beta
Responding to keyboard input
Input events
Gestures
Documentation
Open Menu
Swift
Structure
KeyPress
iOS 17.0+ Beta
iPadOS 17.0+ Beta
macOS 14.0+ Beta
Mac Catalyst 17.0+ Beta
tvOS 17.0+ Beta
visionOS 1.0+ Beta
struct KeyPress
Topics
Getting the keypress
let key: KeyEquivalent
The key equivalent value for the pressed key.
let characters: String
The characters generated by the pressed key as if no modifier key applies.
let modifiers: EventModifiers
The set of modifier keys the user held in addition to the pressed key.
Getting the phase of the keypress
let phase: KeyPress.Phases
The phase of the key-press event (.down, .repeat, or .up).
struct Phases
Options for matching different phases of a key-press event.
Getting the result
enum Result
A result value returned from a key-press action that indicates whether the action consumed the event.
Relationships
Conforms To
CustomDebugStringConvertible
Sendable
See Also
Responding to keyboard input
func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View
Performs an action if the user presses a key on a hardware keyboard while the view has focus.
Beta
func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View
Performs an action if the user presses any key on a hardware keyboard while the view has focus.
Beta
func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View
Performs an action if the user presses a key on a hardware keyboard while the view has focus.
Beta
func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View
Performs an action if the user presses one or more keys on a hardware keyboard while the view has focus.
Beta
func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View
Performs an action if the user presses one or more keys on a hardware keyboard while the view has focus.
Beta
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is KeyPress
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright Â© 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


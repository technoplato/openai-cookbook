https://developer.apple.com/documentation/swiftui/path/addroundedrect(in:cornersize:style:transform:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
Views
Persistent storage
Preferences
Environment values
Model data
Data and storage
App extensions
Documentation
Open Menu
Swift
Instance Method
addRoundedRect(in:cornerSize:style:transform:)
Adds a rounded rectangle to the path.
iOS 13.0+
iPadOS 13.0+
macOS 10.15+
Mac Catalyst 13.0+
tvOS 13.0+
watchOS 6.0+
visionOS 1.0+ Beta
mutating func addRoundedRect(
    in rect: CGRect,
    cornerSize: CGSize,
    style: RoundedCornerStyle = .continuous,
    transform: CGAffineTransform = .identity
)
Parameters
rect
A rectangle, specified in user space coordinates.
cornerSize
The size of the corners, specified in user space coordinates.
style
The corner style. Defaults to the continous style if not specified.
transform
An affine transform to apply to the rectangle before adding to the path. Defaults to the identity transform if not specified.
Discussion
This is a convenience function that adds a rounded rectangle to a path, starting by moving to the center of the right edge and then adding lines and curves counter-clockwise to create a rounded rectangle, closing the subpath.
See Also
Drawing a path
func move(to: CGPoint)
Begins a new subpath at the specified point.
func addArc(center: CGPoint, radius: CGFloat, startAngle: Angle, endAngle: Angle, clockwise: Bool, transform: CGAffineTransform)
Adds an arc of a circle to the path, specified with a radius and angles.
func addArc(tangent1End: CGPoint, tangent2End: CGPoint, radius: CGFloat, transform: CGAffineTransform)
Adds an arc of a circle to the path, specified with a radius and two tangent lines.
func addCurve(to: CGPoint, control1: CGPoint, control2: CGPoint)
the curve.
func addEllipse(in: CGRect, transform: CGAffineTransform)
Adds an ellipse that fits inside the specified rectangle to the path.
func addLine(to: CGPoint)
Appends a straight line segment from the current point to the specified point.
func addLines([CGPoint])
Adds a sequence of connected straight-line segments to the path.
func addPath(Path, transform: CGAffineTransform)
Appends another path value to this path.
func addQuadCurve(to: CGPoint, control: CGPoint)
the curve.
func addRect(CGRect, transform: CGAffineTransform)
Adds a rectangular subpath to the path.
func addRects([CGRect], transform: CGAffineTransform)
Adds a set of rectangular subpaths to the path.
func addRelativeArc(center: CGPoint, radius: CGFloat, startAngle: Angle, delta: Angle, transform: CGAffineTransform)
Adds an arc of a circle to the path, specified with a radius and a difference in angle.
func closeSubpath()
Closes and completes the current subpath.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is addRoundedRect(in:cornerSize:style:transform:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright Â© 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


https://developer.apple.com/documentation/swiftui/view/listrowbackground(_:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func moveDisabled(Bool) -> some View
Editing a list
S
RefreshAction
P
var refresh: RefreshAction?
M
func refreshable(action: () async -> Void) -> some View
Refreshing a list’s content
M
func selectionDisabled(Bool) -> some View
Configuring backgrounds
S
ListSectionSpacing
Beta
M
func listSectionSpacing(ListSectionSpacing) -> some View
Beta
M
func listSectionSpacing(CGFloat) -> some View
Beta
M
func listRowSpacing(CGFloat?) -> some View
Configuring spacing
P
var defaultMinListHeaderHeight: CGFloat?
E
Prominence
Documentation
Open Menu
Swift
Instance Method
listRowBackground(_:)
Places a custom background view behind a list row item.
iOS 13.0+
iPadOS 13.0+
macOS 10.15+
Mac Catalyst 13.0+
tvOS 13.0+
watchOS 6.0+
visionOS 1.0+ Beta
func listRowBackground<V>(_ view: V?) -> some View where V : View
Parameters
view
The View to use as the background behind the list row view.
Return Value
A list row view with view as its background view.
Discussion
Use listRowBackground(_:) to place a custom background view behind a list row item.
In the example below, the Flavor enumeration provides content for list items. The SwiftUI ForEach structure computes views for each element of the Flavor enumeration and extracts the raw value of each of its elements using the resulting text to create each list row item. The listRowBackground(_:) modifier then places the view you supply behind each of the list row items:
struct ContentView: View {
    enum Flavor: String, CaseIterable, Identifiable {
        var id: String { self.rawValue }
        case vanilla, chocolate, strawberry
    }


    var body: some View {
        List {
            ForEach(Flavor.allCases) {
                Text($0.rawValue)
                    .listRowBackground(Ellipse()
                                        .background(Color.clear)
                                        .foregroundColor(.purple)
                                        .opacity(0.3)
                    )
            }
        }
    }
}
See Also
Configuring backgrounds
func alternatingRowBackgrounds(AlternatingRowBackgroundBehavior) -> some View
Overrides whether lists and tables in this view have alternating row backgrounds.
Beta
struct AlternatingRowBackgroundBehavior
The styling of views with respect to alternating row backgrounds.
Beta
var backgroundProminence: BackgroundProminence
The prominence of the background underneath views associated with this environment.
Beta
struct BackgroundProminence
The prominence of backgrounds underneath other views.
Beta
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is listRowBackground(_:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


https://developer.apple.com/documentation/swiftui/pagingscrolltargetbehaviorSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
P
var isScrollEnabled: Bool
M
func scrollDisabled(Bool) -> some View
Disabling scrolling
M
func scrollClipDisabled(Bool) -> some View
Beta
M
func scrollContentBackground(Visibility) -> some View
Managing content visibility
S
ScrollIndicatorVisibility
func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View
func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View
S
ScrollTargetBehaviorContext
Beta
r
P
ScrollTargetBehavior
Beta
S
ScrollTarget
Beta
M
func scrollTargetLayout(isEnabled: Bool) -> some View
Beta
M
func scrollTargetBehavior(some ScrollTargetBehavior) -> some View
Beta
Defining scroll targets
M
func defaultScrollAnchor(UnitPoint?) -> some View
Beta
M
func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View
Beta
Documentation
Open Menu
Swift
Structure
PagingScrollTargetBehavior
The scroll behavior that aligns scroll targets to container-based geometry.
iOS 17.0+ Beta
iPadOS 17.0+ Beta
macOS 14.0+ Beta
Mac Catalyst 17.0+ Beta
tvOS 17.0+ Beta
watchOS 10.0+ Beta
visionOS 1.0+ Beta
struct PagingScrollTargetBehavior
Overview
In the following example, every view in the lazy stack is flexible in both directions and the scroll view settles to container-aligned boundaries.
ScrollView {
    LazyVStack(spacing: 0.0) {
        ForEach(items) { item in
            FullScreenItem(item)
        }
    }
}
.scrollTargetBehavior(.paging)
Topics
Creating the target behavior
init()
Creates a paging scroll behavior.
Relationships
Conforms To
ChartScrollTargetBehavior
ScrollTargetBehavior
Sendable
See Also
Defining scroll targets
func scrollTargetBehavior(some ScrollTargetBehavior) -> some View
Sets the scroll behavior of views scrollable in the provided axes.
Beta
func scrollTargetLayout(isEnabled: Bool) -> some View
Configures the outermost layout as a scroll target layout.
Beta
struct ScrollTarget
A type defining the target in which a scroll view should try and scroll to.
Beta
protocol ScrollTargetBehavior
A type that defines the scroll behavior of a scrollable view.
Beta
struct ScrollTargetBehaviorContext
The context in which a scroll target behavior updates its scroll target.
Beta
struct ViewAlignedScrollTargetBehavior
The scroll behavior that aligns scroll targets to view-based geometry.
Beta
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is PagingScrollTargetBehavior
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright Â© 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


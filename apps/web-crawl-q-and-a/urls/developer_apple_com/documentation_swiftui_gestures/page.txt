https://developer.apple.com/documentation/swiftui/gesturesSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
S
RotateGesture3D
Beta
S
RotateGesture
Beta
S
MagnifyGesture
Beta
S
DragGesture
M
func gesture<T>(T, including: GestureMask) -> some View
Recognizing gestures that change over time
S
SpatialEventCollection
func onLongTouchGesture(minimumDuration: Double, perform: () -> Void, onTouchingChanged: ((Bool) -> Void)?) -> some View
func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View
func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View
func onTapGesture(count: Int, coordinateSpace: some CoordinateSpaceProtocol, perform: (CGPoint) -> Void) -> some View
Event handling
Scroll views
View groupings
Tables
Lists
Custom layout
Layout adjustments
Layout fundamentals
Documentation
Open Menu
Swift
Gestures
Define interactions from taps, clicks, and swipes to fine-grained gestures.
Overview
Respond to gestures by adding gesture modifiers to your views. You can listen for taps, drags, pinches, and other standard gestures.
You can also compose custom gestures from individual gestures using the simultaneously(with:), sequenced(before:), or exclusively(before:) modifiers, or combine gestures with keyboard modifiers using the modifiers(_:) modifier.
Important
When you need a button, use a Button instance rather than a tap gesture. You can use any view as the button’s label, and the button type automatically provides many of the standard behaviors that users expect from a button, like accessibility labels and hints.
For design guidance, see Touchscreen gestures in the Human Interface Guidelines.
Topics
Essentials
Adding interactivity with gestures
Use gesture modifiers to add interactivity to your app.
Recognizing tap gestures
func onTapGesture(count: Int, perform: () -> Void) -> some View
Adds an action to perform when this view recognizes a tap gesture.
func onTapGesture(count: Int, coordinateSpace: some CoordinateSpaceProtocol, perform: (CGPoint) -> Void) -> some View
Adds an action to perform when this view recognizes a tap gesture, and provides the action with the location of the interaction.
Beta
struct TapGesture
A gesture that recognizes one or more taps.
struct SpatialTapGesture
A gesture that recognizes one or more taps and reports their location.
Recognizing long press gestures
func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View
Adds an action to perform when this view recognizes a long press gesture.
func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View
Adds an action to perform when this view recognizes a long press gesture.
func onLongTouchGesture(minimumDuration: Double, perform: () -> Void, onTouchingChanged: ((Bool) -> Void)?) -> some View
Adds an action to perform when this view recognizes a remote long touch gesture. A long touch gesture is when the finger is on the remote touch surface without actually pressing.
struct LongPressGesture
A gesture that succeeds when the user performs a long press.
Recognizing spatial events
struct SpatialEventGesture
A gesture that activates immediately upon receiving any spatial event that describes clicks, touches, or pinches.
Beta
struct SpatialEventCollection
A collection of events that target a specific view.
Beta
Recognizing gestures that change over time
func gesture<T>(T, including: GestureMask) -> some View
Attaches a gesture to the view with a lower precedence than gestures defined by the view.
struct DragGesture
A dragging motion that invokes an action as the drag-event sequence changes.
struct MagnifyGesture
A gesture that recognizes a magnification motion and tracks the amount of magnification.
Beta
struct RotateGesture
A gesture that recognizes a rotation motion and tracks the angle of the rotation.
Beta
struct RotateGesture3D
A gesture that recognizes 3D rotation motion and tracks the angle and axis of the rotation.
Beta
struct GestureMask
Options that control how adding a gesture to a view affects other gestures recognized by the view and its subviews.
Combining gestures
Composing SwiftUI gestures
Combine gestures to create complex interactions.
func simultaneousGesture<T>(T, including: GestureMask) -> some View
Attaches a gesture to the view to process simultaneously with gestures defined by the view.
struct SequenceGesture
A gesture that’s a sequence of two gestures.
struct SimultaneousGesture
A gesture containing two gestures that can happen at the same time with neither of them preceding the other.
struct ExclusiveGesture
A gesture that consists of two gestures where only one of them can succeed.
Defining custom gestures
func highPriorityGesture<T>(T, including: GestureMask) -> some View
Attaches a gesture to the view with a higher precedence than gestures defined by the view.
func defersSystemGestures(on: Edge.Set) -> some View
Sets the screen edge from which you want your gesture to take precedence over the system gesture.
protocol Gesture
An instance that matches a sequence of events to a gesture, and returns a stream of values for each of its states.
struct AnyGesture
A type-erased gesture.
struct HandActivationBehavior
An activation behavior specific to hand-driven input.
Beta
Managing gesture state
struct GestureState
A property wrapper type that updates a property while the user performs a gesture and resets the property back to its initial state when the gesture ends.
struct GestureStateGesture
A gesture that updates the state provided by a gesture’s updating callback.
Deprecated gestures
struct MagnificationGesture
A gesture that recognizes a magnification motion and tracks the amount of magnification.
Deprecated
struct RotationGesture
A gesture that recognizes a rotation motion and tracks the angle of the rotation.
Deprecated
See Also
Event handling
API Reference
Input events
Respond to input from a hardware device, like a keyboard or a Touch Bar.
API Reference
Clipboard
Enable people to move or duplicate items by issuing Copy and Paste commands.
API Reference
Drag and drop
Enable people to move or duplicate items by dragging them from one location to another.
API Reference
Focus
Identify and control which visible object responds to user interaction.
API Reference
System events
React to system events, like opening a URL.
Current page is Gestures
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


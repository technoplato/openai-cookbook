https://developer.apple.com/documentation/swiftui/emptyviewSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
View groupings
Tables
Lists
Custom layout
Layout adjustments
Layout fundamentals
View layout
S
AnyView
Supporting view types
M
func equatable() -> EquatableView<Self>
M
func tag<V>(V) -> some View
M
func id<ID>(ID) -> some View
Managing the view hierarchy
M
func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View
M
func task(priority: TaskPriority, () async -> Void) -> some View
Documentation
Open Menu
Swift
Structure
EmptyView
A view that doesn’t contain any content.
iOS 13.0+
iPadOS 13.0+
macOS 10.15+
Mac Catalyst 13.0+
tvOS 13.0+
watchOS 6.0+
visionOS 1.0+ Beta
@frozen
struct EmptyView
Overview
You will rarely, if ever, need to create an EmptyView directly. Instead, EmptyView represents the absence of a view.
SwiftUI uses EmptyView in situations where a SwiftUI view type defines one or more child views with generic parameters, and allows the child views to be absent. When absent, the child view’s type in the generic type parameter is EmptyView.
The following example creates an indeterminate ProgressView without a label. The ProgressView type declares two generic parameters, Label and CurrentValueLabel, for the types used by its subviews. When both subviews are absent, like they are here, the resulting type is ProgressView<EmptyView, EmptyView>, as indicated by the example’s output:
let progressView = ProgressView()
print("\(type(of:progressView))")
// Prints: ProgressView<EmptyView, EmptyView>
Topics
Creating an empty view
init()
Creates an empty view.
Relationships
Conforms To
Sendable
View
See Also
Supporting view types
struct AnyView
A type-erased view.
struct EquatableView
A view type that compares itself against its previous value and prevents its child updating if its new value is the same as its old value.
struct SubscriptionView
A view that subscribes to a publisher with an action.
struct TupleView
A View created from a swift tuple of View values.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is EmptyView
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


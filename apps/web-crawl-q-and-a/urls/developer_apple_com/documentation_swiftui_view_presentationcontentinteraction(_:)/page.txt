https://developer.apple.com/documentation/swiftui/view/presentationcontentinteraction(_:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View
M
func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View
Presenting an alert with a message
M
func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View
M
func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View
M
func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View
M
func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View
M
func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View
M
func presentationDetents(Set<PresentationDetent>) -> some View
Configuring a sheet’s height
S
PresentationAdaptation
M
func presentationCompactAdaptation(PresentationAdaptation) -> some View
M
func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View
Adapting a presentation to size classes
E
PopoverAttachmentAnchor
Documentation
Open Menu
Swift
Instance Method
presentationContentInteraction(_:)
Configures the behavior of swipe gestures on a presentation.
iOS 16.4+
iPadOS 16.4+
macOS 13.3+
Mac Catalyst 16.4+
tvOS 16.4+
watchOS 9.4+
visionOS 1.0+ Beta
func presentationContentInteraction(_ behavior: PresentationContentInteraction) -> some View
Parameters
behavior
The requested behavior.
Discussion
By default, when a person swipes up on a scroll view in a resizable presentation, the presentation grows to the next detent. A scroll view embedded in the presentation only scrolls after the presentation reaches its largest size. Use this modifier to control which action takes precedence.
For example, you can request that swipe gestures scroll content first, resizing the sheet only after hitting the end of the scroll view, by passing the scrolls value to this modifier:
struct ContentView: View {
    @State private var showSettings = false


    var body: some View {
        Button("View Settings") {
            showSettings = true
        }
        .sheet(isPresented: $showSettings) {
            SettingsView()
                .presentationDetents([.medium, .large])
                .presentationContentInteraction(.scrolls)
        }
    }
}
People can always resize your presentation using the drag indicator.
See Also
Configuring a sheet’s height
func presentationDetents(Set<PresentationDetent>) -> some View
Sets the available detents for the enclosing sheet.
func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View
Sets the available detents for the enclosing sheet, giving you programmatic control of the currently selected detent.
func presentationDragIndicator(Visibility) -> some View
Sets the visibility of the drag indicator on top of a sheet.
struct PresentationDetent
A type that represents a height where a sheet naturally rests.
protocol CustomPresentationDetent
The definition of a custom detent with a calculated height.
struct PresentationContentInteraction
A behavior that you can use to influence how a presentation responds to swipe gestures.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is presentationContentInteraction(_:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


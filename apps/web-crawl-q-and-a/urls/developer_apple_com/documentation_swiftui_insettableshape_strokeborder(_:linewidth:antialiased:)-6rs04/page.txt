https://developer.apple.com/documentation/swiftui/insettableshape/strokeborder(_:linewidth:antialiased:)-6rs04Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
S
RotatedShape
S
OffsetShape
S
TransformedShape
Setting a container shape
M
func containerShape<T>(T) -> some View
r
P
InsettableShape
Setting the stroke border characteristics
M
func strokeBorder<S>(S, lineWidth: CGFloat, antialiased: Bool) -> StrokeBorderShapeView<Self, S, EmptyView>
Beta
func strokeBorder<S>(S, style: StrokeStyle, antialiased: Bool) -> StrokeBorderShapeView<Self, S, EmptyView>
Tables
View groupings
Scroll views
Event handling
Gestures
Input events
Clipboard
Documentation
Open Menu
Swift
Instance Method
strokeBorder(_:lineWidth:antialiased:)
Returns a view that is the result of filling the lineWidth-sized border (aka inner stroke) of self with content. This is equivalent to insetting self by lineWidth / 2 and stroking the resulting shape with lineWidth as the line-width.
iOS 13.0+
iPadOS 13.0+
macOS 10.15+
Mac Catalyst 13.0+
tvOS 13.0+
watchOS 6.0+
visionOS 1.0+ Beta
func strokeBorder<S>(
    _ content: S,
    lineWidth: CGFloat = 1,
    antialiased: Bool = true
) -> some View where S : ShapeStyle
See Also
Setting the stroke border characteristics
func strokeBorder<S>(S, lineWidth: CGFloat, antialiased: Bool) -> StrokeBorderShapeView<Self, S, EmptyView>
Returns a view that is the result of filling the lineWidth-sized border (aka inner stroke) of self with content. This is equivalent to insetting self by lineWidth / 2 and stroking the resulting shape with lineWidth as the line-width.
Beta
func strokeBorder(lineWidth: CGFloat, antialiased: Bool) -> some View
Returns a view that is the result of filling the lineWidth-sized border (aka inner stroke) of self with the foreground color. This is equivalent to insetting self by lineWidth / 2 and stroking the resulting shape with lineWidth as the line-width.
func strokeBorder<S>(S, style: StrokeStyle, antialiased: Bool) -> StrokeBorderShapeView<Self, S, EmptyView>
Returns a view that is the result of insetting self by style.lineWidth / 2, stroking the resulting shape with style, and then filling with content.
Beta
func strokeBorder<S>(S, style: StrokeStyle, antialiased: Bool) -> some View
Returns a view that is the result of insetting self by style.lineWidth / 2, stroking the resulting shape with style, and then filling with content.
func strokeBorder(style: StrokeStyle, antialiased: Bool) -> some View
Returns a view that is the result of insetting self by style.lineWidth / 2, stroking the resulting shape with style, and then filling with the foreground color.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is strokeBorder(_:lineWidth:antialiased:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright Â© 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


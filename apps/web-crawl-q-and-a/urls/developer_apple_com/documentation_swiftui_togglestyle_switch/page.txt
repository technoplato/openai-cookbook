https://developer.apple.com/documentation/swiftui/togglestyle/switchSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
r
P
LabelStyle
M
func labelStyle<S>(S) -> some View
Styling views that display text
S
ProgressViewStyleConfiguration
r
P
ProgressViewStyle
M
func progressViewStyle<S>(S) -> some View
S
GaugeStyleConfiguration
P
static var checkbox: CheckboxToggleStyle
P
static var button: ButtonToggleStyle
P
static var automatic: DefaultToggleStyle
Getting built-in toggle styles
r
P
ToggleStyle
M
func toggleStyle<S>(S) -> some View
Styling toggles
S
MenuStyleConfiguration
Documentation
Open Menu
Swift
Type Property
switch
A toggle style that displays a leading label and a trailing switch.
iOS 13.0+
iPadOS 13.0+
macOS 10.15+
Mac Catalyst 13.0+
watchOS 6.0+
visionOS 1.0+ Beta
static var `switch`: SwitchToggleStyle { get }
Available when Self is SwitchToggleStyle.
Discussion
Apply this style to a Toggle or to a view hierarchy that contains toggles using the toggleStyle(_:) modifier:
Toggle("Enhance Sound", isOn: $isEnhanced)
    .toggleStyle(.switch)
The style produces a label that describes the purpose of the toggle and a switch that shows the toggle’s state. The user taps or clicks the switch to change the toggle’s state. The default appearance is similar across platforms, although the way you use switches in your user interface varies a little, as described in the respective Human Interface Guidelines sections:
Platform
Appearance
Human Interface Guidelines
iOS, iPadOS
Switches
macOS
Switches
watchOS
Toggles and Switches
In iOS, iPadOS, and watchOS, the label and switch fill as much horizontal space as the toggle’s parent offers by aligning the label’s leading edge and the switch’s trailing edge with the containing view’s respective leading and trailing edges. In macOS, the style uses a minimum of horizontal space by aligning the trailing edge of the label with the leading edge of the switch. SwiftUI helps you to manage the spacing and alignment when this style appears in a Form.
SwiftUI uses this style as the default for iOS, iPadOS, and watchOS in most contexts when you don’t set a style, or when you apply the automatic style.
See Also
Getting built-in toggle styles
static var automatic: DefaultToggleStyle
The default toggle style.
Available when Self is DefaultToggleStyle.
static var button: ButtonToggleStyle
A toggle style that displays as a button with its label as the title.
Available when Self is ButtonToggleStyle.
static var checkbox: CheckboxToggleStyle
A toggle style that displays a checkbox followed by its label.
Available when Self is CheckboxToggleStyle.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is switch
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


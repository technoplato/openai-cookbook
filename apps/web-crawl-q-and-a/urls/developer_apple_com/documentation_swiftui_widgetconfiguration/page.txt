https://developer.apple.com/documentation/swiftui/widgetconfigurationSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
S
EmptyWidgetConfiguration
M
func onBackgroundURLSessionEvents(matching: String, (String, () -> Void) -> Void) -> some WidgetConfiguration
M
func onBackgroundURLSessionEvents(matching: ((String) -> Bool)?, (String, () -> Void) -> Void) -> some WidgetConfiguration
M
func backgroundTask<D, R>(BackgroundTask<D, R>, action: (D) async -> R) -> some WidgetConfiguration
Managing background tasks
M
func containerBackgroundRemovable(Bool) -> some WidgetConfiguration
M
func disfavoredLocations([WidgetLocation], for: [WidgetFamily]) -> some WidgetConfiguration
S
LimitedAvailabilityConfiguration
r
P
WidgetBundle
r
P
Widget
Making a configurable widget
Keeping a widget up to date
Creating a widget extension
Building Widgets Using WidgetKit and SwiftUI
Creating widgets
Documentation
Open Menu
Swift
Protocol
WidgetConfiguration
A type that describes a widget’s content.
iOS 14.0+
iPadOS 14.0+
macOS 11.0+
Mac Catalyst 14.0+
watchOS 9.0+
visionOS 1.0+ Beta
protocol WidgetConfiguration
Topics
Implementing a widget
var body: Self.Body
The content and behavior of this widget.
Required
associatedtype Body : WidgetConfiguration
The type of widget configuration representing the body of this configuration.
Required
Setting a name
func configurationDisplayName<S>(S) -> some WidgetConfiguration
Sets the name shown for a widget when a user adds or edits it using the specified string.
func configurationDisplayName(Text) -> some WidgetConfiguration
Sets the name shown for a widget when a user adds or edits it using the contents of a text view.
func configurationDisplayName(LocalizedStringKey) -> some WidgetConfiguration
Sets the localized name shown for a widget when a user adds or edits the widget.
Setting a description
func description(Text) -> some WidgetConfiguration
Sets the description shown for a widget when a user adds or edits it using the contents of a text view.
func description<S>(S) -> some WidgetConfiguration
Sets the description shown for a widget when a user adds or edits it using the specified string.
func description(LocalizedStringKey) -> some WidgetConfiguration
Sets the localized description shown for a widget when a user adds or edits the widget.
Setting the appearance
func supportedFamilies([WidgetFamily]) -> some WidgetConfiguration
Sets the sizes that a widget supports.
func contentMarginsDisabled() -> some WidgetConfiguration
Disable default content margins.
func disfavoredLocations([WidgetLocation], for: [WidgetFamily]) -> some WidgetConfiguration
Sets the disfavored locations for a widget.
Beta
func containerBackgroundRemovable(Bool) -> some WidgetConfiguration
A modifier that marks the background of a widget as removable.
Managing background tasks
func backgroundTask<D, R>(BackgroundTask<D, R>, action: (D) async -> R) -> some WidgetConfiguration
Runs the given action when the system provides a background task.
func onBackgroundURLSessionEvents(matching: ((String) -> Bool)?, (String, () -> Void) -> Void) -> some WidgetConfiguration
Adds an action to perform when events related to a URL session identified by a closure are waiting to be processed.
func onBackgroundURLSessionEvents(matching: String, (String, () -> Void) -> Void) -> some WidgetConfiguration
Adds an action to perform when events related to a URL session with a matching identifier are waiting to be processed.
Relationships
Conforming Types
EmptyWidgetConfiguration
LimitedAvailabilityConfiguration
See Also
Creating widgets
protocol Widget
The configuration and content of a widget to display on the Home screen or in Notification Center.
protocol WidgetBundle
A container used to expose multiple widgets from a single widget extension.
struct LimitedAvailabilityConfiguration
A type-erased widget configuration.
struct EmptyWidgetConfiguration
An empty widget configuration.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is WidgetConfiguration
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


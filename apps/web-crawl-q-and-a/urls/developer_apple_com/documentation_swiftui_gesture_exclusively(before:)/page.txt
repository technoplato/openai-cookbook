https://developer.apple.com/documentation/swiftui/gesture/exclusively(before:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
Performing the gesture
M
func updating<State>(GestureState<State>, body: (Self.Value, inout State, inout Transaction) -> Void) -> GestureStateGesture<Self, State>
M
func onChanged((Self.Value) -> Void) -> _ChangedGesture<Self>
M
func onEnded((Self.Value) -> Void) -> _EndedGesture<Self>
Value
Composing gestures
M
func simultaneously<Other>(with: Other) -> SimultaneousGesture<Self, Other>
M
func sequenced<Other>(before: Other) -> SequenceGesture<Self, Other>
S
GestureStateGesture
Deprecated gestures
S
MagnificationGesture
Deprecated
S
RotationGesture
Deprecated
Input events
Clipboard
Drag and drop
Documentation
Open Menu
Swift
Instance Method
exclusively(before:)
Combines two gestures exclusively to create a new gesture where only one gesture succeeds, giving precedence to the first gesture.
iOS 13.0+
iPadOS 13.0+
macOS 10.15+
Mac Catalyst 13.0+
tvOS 13.0+
watchOS 6.0+
visionOS 1.0+ Beta
func exclusively<Other>(before other: Other) -> ExclusiveGesture<Self, Other> where Other : Gesture
Parameters
other
A gesture you combine with your gesture, to create a new, combined gesture.
Return Value
A gesture that’s the result of combining two gestures where only one of them can succeed. SwiftUI gives precedence to the first gesture.
See Also
Composing gestures
func simultaneously<Other>(with: Other) -> SimultaneousGesture<Self, Other>
Combines a gesture with another gesture to create a new gesture that recognizes both gestures at the same time.
func sequenced<Other>(before: Other) -> SequenceGesture<Self, Other>
Sequences a gesture with another one to create a new gesture, which results in the second gesture only receiving events after the first gesture succeeds.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is exclusively(before:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


https://developer.apple.com/documentation/swiftui/uihostingconfigurationSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
C
UIOrnament
Beta
C
UIHostingOrnament
Beta
Hosting an ornament in UIKit
r
P
UITraitBridgedEnvironmentKey
Beta
Sharing configuration information
S
UIViewControllerRepresentableContext
r
P
UIViewControllerRepresentable
S
UIHostingControllerSizingOptions
C
UIHostingController
Using SwiftUI with UIKit
Displaying SwiftUI views in UIKit
UIKit integration
AppKit integration
Framework integration
Accessible navigation
Documentation
Open Menu
Swift
Structure
UIHostingConfiguration
A content configuration suitable for hosting a hierarchy of SwiftUI views.
iOS 16.0+
iPadOS 16.0+
Mac Catalyst 16.0+
tvOS 16.0+
visionOS 1.0+ Beta
struct UIHostingConfiguration<Content, Background> where Content : View, Background : View
Overview
Use a value of this type, which conforms to the UIContentConfiguration protocol, with a UICollectionViewCell or UITableViewCell to host a hierarchy of SwiftUI views in a collection or table view, respectively. For example, the following shows a stack with an image and text inside the cell:
myCell.contentConfiguration = UIHostingConfiguration {
    HStack {
        Image(systemName: "star").foregroundStyle(.purple)
        Text("Favorites")
        Spacer()
    }
}
You can also customize the background of the containing cell. The following example draws a blue background:
myCell.contentConfiguration = UIHostingConfiguration {
    HStack {
        Image(systemName: "star").foregroundStyle(.purple)
        Text("Favorites")
        Spacer()
    }
}
.background {
    Color.blue
}
When used in a list layout, certain APIs are bridged automatically, like swipe actions and separator alignment. The following example shows a trailing yellow star swipe action:
cell.contentConfiguration = UIHostingConfiguration {
    HStack {
        Image(systemName: "airplane")
        Text("Flight 123")
        Spacer()
    }
    .swipeActions {
        Button { ... } label: {
            Label("Favorite", systemImage: "star")
        }
        .tint(.yellow)
    }
}
Topics
Creating and updating a configuration
init(content: () -> Content)
Creates a hosting configuration with the given contents.
Available when Content conforms to View and Background is EmptyView.
Setting the background
func background<S>(S) -> UIHostingConfiguration<Content, _UIHostingConfigurationBackgroundView<S>>
Sets the background contents for the hosting configuration’s enclosing cell.
func background<B>(content: () -> B) -> UIHostingConfiguration<Content, B>
Sets the background contents for the hosting configuration’s enclosing cell.
Setting margins
func margins(Edge.Set, EdgeInsets) -> UIHostingConfiguration<Content, Background>
Sets the margins around the content of the configuration.
func margins(Edge.Set, CGFloat) -> UIHostingConfiguration<Content, Background>
Sets the margins around the content of the configuration.
Setting a size
func minSize(width: CGFloat?, height: CGFloat?) -> UIHostingConfiguration<Content, Background>
Sets the minimum size for the configuration.
func minSize() -> UIHostingConfiguration<Content, Background>
Sets the minimum size for the configuration.
Deprecated
Relationships
Conforms To
Sendable
UIContentConfiguration
See Also
Displaying SwiftUI views in UIKit
class UIHostingController
A UIKit view controller that manages a SwiftUI view hierarchy.
struct UIHostingControllerSizingOptions
Options for how a hosting controller tracks its content’s size.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is UIHostingConfiguration
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


https://developer.apple.com/documentation/swiftui/graphicscontext/scaleby(x:y:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
S
AnyShapeStyle
r
P
ShapeStyle
P
var backgroundStyle: AnyShapeStyle?
M
func backgroundStyle<S>(S) -> some View
M
func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View
M
func foregroundStyle<S1, S2>(S1, S2) -> some View
M
func foregroundStyle<S>(S) -> some View
Applying transforms
S
GraphicsContext.ShadowOptions
S
GraphicsContext.BlurOptions
S
GraphicsContext.FilterOptions
S
GraphicsContext.Filter
M
func addFilter(GraphicsContext.Filter, options: GraphicsContext.FilterOptions)
Filtering
S
GraphicsContext.BlendMode
Documentation
Open Menu
Swift
Instance Method
scaleBy(x:y:)
Scales subsequent drawing operations by an amount in each dimension.
iOS 15.0+
iPadOS 15.0+
macOS 12.0+
Mac Catalyst 15.0+
tvOS 15.0+
watchOS 8.0+
visionOS 1.0+ Beta
mutating func scaleBy(
    x: CGFloat,
    y: CGFloat
)
Parameters
x
The amount to scale in the horizontal direction.
y
The amount to scale in the vertical direction.
Discussion
Calling this method is equivalent to updating the context’s transform directly using the given scale factors:
transform = transform.scaledBy(x: x, y: y)
See Also
Applying transforms
func rotate(by: Angle)
Rotates subsequent drawing operations by an angle.
func translateBy(x: CGFloat, y: CGFloat)
Moves subsequent drawing operations by an amount in each dimension.
func concatenate(CGAffineTransform)
Appends the given transform to the context’s existing transform.
var transform: CGAffineTransform
The current transform matrix, defining user space coordinates.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is scaleBy(x:y:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


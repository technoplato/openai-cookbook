https://developer.apple.com/documentation/swiftui/transaction/tracksvelocitySkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
Input events
Gestures
Event handling
Scroll views
View groupings
Tables
Lists
P
var scrollTargetAnchor: UnitPoint?
Beta
P
var isContinuous: Bool
Getting information about a transaction
P
var dismissBehavior: DismissBehavior
Beta
Managing window dismissal
M
func addAnimationCompletion(criteria: AnimationCompletionCriteria, () -> Void)
Beta
P
var disablesAnimations: Bool
P
var animation: Animation?
Documentation
Open Menu
Swift
Instance Property
tracksVelocity
Whether this transaction will track the velocity of any animatable properties that change.
iOS 17.0+ Beta
iPadOS 17.0+ Beta
macOS 14.0+ Beta
Mac Catalyst 17.0+ Beta
tvOS 17.0+ Beta
watchOS 10.0+ Beta
visionOS 1.0+ Beta
var tracksVelocity: Bool { get set }
Discussion
This property can be enabled in an interactive context to track velocity during a user interaction so that when the interaction ends, an animation can use the accumulated velocities to create animations that preserve them. This tracking is mutually exclusive with an animation being used during a view change, since if there is an animation, it is responsible for managing its own velocity.
Gesture onChanged and updating callbacks automatically set this property to true.
This example shows an interaction which applies changes, tracking velocity until the final change, which applies an animation (which will start with the velocity that was tracked during the previous changes). These changes could come from a server or from an interactive control like a slider.
func receiveChange(change: ChangeInfo) {
    var transaction = Transaction()
    if change.isFinal {
        transaction.animation = .spring
    } else {
        transaction.tracksVelocity = true
    }
    withTransaction(transaction) {
        state.applyChange(change)
    }
}
See Also
Getting information about a transaction
var isContinuous: Bool
A Boolean value that indicates whether the transaction originated from an action that produces a sequence of values.
var scrollTargetAnchor: UnitPoint?
The preferred alignment of the view within a scroll view’s visible region when scrolling to a view.
Beta
subscript<K>(K.Type) -> K.Value
Accesses the transaction value associated with a custom key.
Beta
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is tracksVelocity
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


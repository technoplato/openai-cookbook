https://developer.apple.com/documentation/swiftui/contentshapekinds/hovereffectSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
S
TouchBar
M
func touchBarItemPresence(TouchBarItemPresence) -> some View
M
func touchBarCustomizationLabel(Text) -> some View
M
func touchBarItemPrincipal(Bool) -> some View
M
func touchBar<Content>(TouchBar<Content>) -> some View
M
func touchBar<Content>(content: () -> Content) -> some View
Managing Touch Bar input
func digitalCrownRotation<V>(Binding<V>, from: V, through: V, by: V.Stride?, sensitivity: DigitalCrownRotationalSensitivity, isContinuous: Bool, isHapticFeedbackEnabled: Bool) -> some View
func digitalCrownRotation<V>(detent: Binding<V>, from: V, through: V, by: V.Stride, sensitivity: DigitalCrownRotationalSensitivity, isContinuous: Bool, isHapticFeedbackEnabled: Bool, onChange: (DigitalCrownEvent) -> Void, onIdle: () -> Void) -> some View
func digitalCrownRotation<V>(detent: Binding<V>, from: V, through: V, by: V.Stride, sensitivity: DigitalCrownRotationalSensitivity, isContinuous: Bool, isHapticFeedbackEnabled: Bool, onChange: (DigitalCrownEvent) -> Void, onIdle: () -> Void) -> some View
func digitalCrownRotation<V>(Binding<V>, onChange: (DigitalCrownEvent) -> Void, onIdle: () -> Void) -> some View
func digitalCrownRotation<V>(Binding<V>, from: V, through: V, sensitivity: DigitalCrownRotationalSensitivity, isContinuous: Bool, isHapticFeedbackEnabled: Bool, onChange: (DigitalCrownEvent) -> Void, onIdle: () -> Void) -> some View
P
static let focusEffect: ContentShapeKinds
P
static let contextMenuPreview: ContentShapeKinds
P
static let dragPreview: ContentShapeKinds
P
static let interaction: ContentShapeKinds
Getting shape kinds
S
ContentShapeKinds
M
func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View
M
func contentShape<S>(S, eoFill: Bool) -> some View
Documentation
Open Menu
Swift
Type Property
hoverEffect
The kind for hover effects.
iOS 15.0+
iPadOS 15.0+
Mac Catalyst 15.0+
visionOS 1.0+ Beta
static let hoverEffect: ContentShapeKinds
Discussion
When using this kind, only the preview shape is affected. To control the shape used to hit-test and start the effect, use the interaction kind.
This kind does not affect the onHover modifier.
See Also
Getting shape kinds
static let interaction: ContentShapeKinds
The kind for hit-testing and accessibility.
static let dragPreview: ContentShapeKinds
The kind for drag and drop previews.
static let contextMenuPreview: ContentShapeKinds
The kind for context menu previews.
static let focusEffect: ContentShapeKinds
The kind for the focus effect.
static let accessibility: ContentShapeKinds
The kind for accessibility visuals and sorting.
Beta
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is hoverEffect
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright Â© 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


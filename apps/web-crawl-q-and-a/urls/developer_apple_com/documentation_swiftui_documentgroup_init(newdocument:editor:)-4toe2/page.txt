https://developer.apple.com/documentation/swiftui/documentgroup/init(newdocument:editor:)-4toe2Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
P
var documentConfiguration: DocumentConfiguration?
Beta
Accessing document configuration
P
var undoManager: UndoManager?
S
ReferenceFileDocumentConfiguration
r
P
ReferenceFileDocument
Storing document data in a class instance
S
FileDocumentConfiguration
init(editing: [PersistentModel.Type], contentType: UTType, editor: () -> Content, prepareDocument: ((ModelContext) -> Void))
init(editing: PersistentModel.Type, contentType: UTType, editor: () -> Content, prepareDocument: ((ModelContext) -> Void))
init(editing: Schema, contentType: UTType, editor: () -> Content, prepareDocument: ((ModelContext) -> Void))
Creating a document group
S
DocumentGroup
Building a document-based app using SwiftData
Building a Document-Based App with SwiftUI
Creating a document
Documents
Immersive spaces
Windows
Documentation
Open Menu
Swift
Initializer
init(newDocument:editor:)
Creates a document group for creating and editing file documents.
iOS 14.0+
iPadOS 14.0+
macOS 11.0+
Mac Catalyst 14.0+
visionOS 1.0+ Beta
init(
    newDocument: @autoclosure @escaping () -> Document,
    @ViewBuilder editor: @escaping (FileDocumentConfiguration<Document>) -> Content
)
Available when Document conforms to FileDocument and Content conforms to View.
Parameters
newDocument
The initial document to use when a user creates a new document.
editor
The editing UI for the provided document.
Discussion
Use a DocumentGroup scene to tell SwiftUI what kinds of documents your app can open when you declare your app using the App protocol. You initialize a document group scene by passing in the document model and a view capable of displaying the document’s contents. The document types you supply to DocumentGroup must conform to FileDocument or ReferenceFileDocument. SwiftUI uses the model to add document support to your app. In macOS this includes document-based menu support including the ability to open multiple documents. On iOS this includes a document browser that can navigate to the documents stored on the file system and multiwindow support:
@main
struct MyApp: App {
    var body: some Scene {
        DocumentGroup(newDocument: TextFile()) { file in
            ContentView(document: file.$document)
        }
    }
}
The document types you supply to DocumentGroup must conform to FileDocument or ReferenceFileDocument. Your app can support multiple document types by adding additional DocumentGroup scenes.
See Also
Creating a document group
init(viewing: Document.Type, viewer: (FileDocumentConfiguration<Document>) -> Content)
Creates a document group capable of viewing file documents.
Available when Document conforms to FileDocument and Content conforms to View.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is init(newDocument:editor:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


https://developer.apple.com/documentation/swiftui/view/navigationbaritems(leading:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View
Deprecated
M
func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View
Deprecated
M
func onChange<V>(of: V, perform: (V) -> Void) -> some View
Deprecated
Input and events modifiers
M
func cornerRadius(CGFloat, antialiased: Bool) -> some View
Deprecated
M
func animation(Animation?) -> some View
Deprecated
M
func mask<Mask>(Mask) -> some View
M
func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View
Deprecated
M
func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View
Deprecated
M
func navigationBarTitle<S>(S) -> some View
Deprecated
M
func navigationBarTitle(LocalizedStringKey) -> some View
Deprecated
M
func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View
Deprecated
M
func navigationBarTitle(Text) -> some View
Deprecated
Auxiliary view modifiers
M
func disableAutocorrection(Bool?) -> some View
Deprecated
Documentation
Open Menu
Swift
Instance Method
navigationBarItems(leading:)
Sets the navigation bar items for this view.
iOS 13.0–17.0 Deprecated
iPadOS 13.0–17.0 Deprecated
Mac Catalyst 13.0–17.0 Deprecated
tvOS 13.0–17.0 Deprecated
visionOS 1.0–1.0 Deprecated
func navigationBarItems<L>(leading: L) -> some View where L : View
Deprecated
Use toolbar(content:) with navigationBarLeading placement.
Parameters
leading
A view that appears on the leading edge of the title.
Discussion
Use navigationBarItems(leading:) to add navigation bar items to the leading edge of the navigation bar for this view.
This modifier only takes effect when this view is inside of and visible within a NavigationView.
On iOS 14 and later, the leading item supplements a visible back button, instead of replacing it, by default. To hide the back button, use navigationBarBackButtonHidden(_:).
The example below adds buttons to the leading edge of the button area of the navigation view:
struct FlavorView: View {
    var body: some View {
        NavigationView {
            List {
                Text("Chocolate")
                Text("Vanilla")
                Text("Strawberry")
            }
            .navigationBarTitle(Text("Today's Flavors"))
            .navigationBarItems(leading:
                HStack {
                    Button("Hours") {
                        print("Hours tapped!")
                    }


                    Button("Help") {
                        print("Help tapped!")
                    }
                }
            )
        }
    }
}
See Also
Auxiliary view modifiers
func navigationBarTitle(Text) -> some View
Sets the title in the navigation bar for this view.
Deprecated
func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View
Sets the title and display mode in the navigation bar for this view.
Deprecated
func navigationBarTitle(LocalizedStringKey) -> some View
Sets the title of this view’s navigation bar with a localized string.
Deprecated
func navigationBarTitle<S>(S) -> some View
Sets the title of this view’s navigation bar with a string.
Deprecated
func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View
Sets the title and display mode in the navigation bar for this view.
Deprecated
func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View
Sets the title and display mode in the navigation bar for this view.
Deprecated
func navigationBarItems<L, T>(leading: L, trailing: T) -> some View
Sets the navigation bar items for this view.
Deprecated
func navigationBarItems<T>(trailing: T) -> some View
Configures the navigation bar items for this view.
Deprecated
func navigationBarHidden(Bool) -> some View
Hides the navigation bar for this view.
Deprecated
func statusBar(hidden: Bool) -> some View
Sets the visibility of the status bar.
Deprecated
func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View
Adds a context menu to the view.
Deprecated
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is navigationBarItems(leading:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


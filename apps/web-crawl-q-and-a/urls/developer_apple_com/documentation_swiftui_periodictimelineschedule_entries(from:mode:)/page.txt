https://developer.apple.com/documentation/swiftui/periodictimelineschedule/entries(from:mode:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
S
PlaceholderContentView
Beta
S
ContentTransition
P
var contentTransitionAddsDrawingGroup: Bool
P
var contentTransition: ContentTransition
M
func contentTransition(ContentTransition) -> some View
S
AnyTransition
S
AsymmetricTransition
func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View
Getting the sequence of dates
M
init(from: Date, by: TimeInterval)
Creating a schedule
S
PeriodicTimelineSchedule
S
ExplicitTimelineSchedule
S
EveryMinuteTimelineSchedule
S
AnimationTimelineSchedule
Supporting types
Documentation
Open Menu
Swift
Instance Method
entries(from:mode:)
Provides a sequence of periodic dates starting from around a given date.
iOS 15.0+
iPadOS 15.0+
macOS 12.0+
Mac Catalyst 15.0+
tvOS 15.0+
watchOS 8.0+
visionOS 1.0+ Beta
func entries(
    from startDate: Date,
    mode: TimelineScheduleMode
) -> PeriodicTimelineSchedule.Entries
Discussion
A TimelineView that you create with a schedule calls this method to ask the schedule when to update its content. The method returns a sequence of equally spaced dates in increasing order that represent points in time when the timeline view should update.
The schedule defines its periodicity and phase aligment based on the parameters you pass to its init(from:by:) initializer. For example, for a startDate and interval of 10:09:30 and 60 seconds, the schedule prepares to issue dates half past each minute. The startDate that you pass to the entries(from:mode:) method then dictates the first date of the sequence as the beginning of the interval that the start date overlaps. Continuing the example above, a start date of 10:34:45 causes the first sequence entry to be 10:34:30, because that’s the start of the interval in which the start date appears.
See Also
Getting the sequence of dates
struct Entries
The sequence of dates in periodic schedule.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is entries(from:mode:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


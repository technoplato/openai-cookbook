https://developer.apple.com/documentation/swiftui/unitcurveSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
S
LinearKeyframe
Beta
S
MoveKeyframe
Beta
S
SpringKeyframe
Beta
Creating custom animations
r
P
CustomAnimation
Beta
S
AnimationContext
Beta
S
AnimationState
Beta
r
P
AnimationStateKey
Beta
M
func value(at: Double) -> Double
M
func velocity(at: Double) -> Double
Deprecated symbols
P
static let easeInEaseOut: UnitCurve
Deprecated
S
Spring
Beta
Making data animatable
r
P
Animatable
Documentation
Open Menu
Swift
Structure
UnitCurve
A function defined by a two-dimensional curve that maps an input progress in the range [0,1] to an output progress that is also in the range [0,1]. By changing the shape of the curve, the effective speed of an animation or other interpolation can be changed.
iOS 17.0+ Beta
iPadOS 17.0+ Beta
macOS 14.0+ Beta
Mac Catalyst 17.0+ Beta
tvOS 17.0+ Beta
watchOS 10.0+ Beta
visionOS 1.0+ Beta
struct UnitCurve
Overview
The horizontal (x) axis defines the input progress: a single input progress value in the range [0,1] must be provided when evaluating a curve.
The vertical (y) axis maps to the output progress: when a curve is evaluated, the y component of the point that intersects the input progress is returned.
Topics
Getting a linear curve
static let linear: UnitCurve
A linear curve.
Getting easing curves
static let easeIn: UnitCurve
A bezier curve that starts out slowly, then speeds up as it finishes.
static let easeOut: UnitCurve
A bezier curve that starts out quickly, then slows down as it approaches the end.
static let easeInOut: UnitCurve
A bezier curve that starts out slowly, speeds up over the middle, then slows down again as it approaches the end.
static let circularEaseIn: UnitCurve
A curve that starts out slowly, then speeds up as it finishes.
static let circularEaseOut: UnitCurve
A circular curve that starts out quickly, then slows down as it approaches the end.
static let circularEaseInOut: UnitCurve
A circular curve that starts out slowly, speeds up over the middle, then slows down again as it approaches the end.
Creating a general Bezier curve
static func bezier(startControlPoint: UnitPoint, endControlPoint: UnitPoint) -> UnitCurve
Creates a new curve using bezier control points.
Inverting a curve
var inverse: UnitCurve
Returns a copy of the curve with its x and y components swapped.
Getting curve characteristics
func value(at: Double) -> Double
Returns the output value (y component) of the curve at the given time.
func velocity(at: Double) -> Double
Returns the rate of change (first derivative) of the output value of the curve at the given time.
Deprecated symbols
static let easeInEaseOut: UnitCurve
A bezier curve that starts out slowly, speeds up over the middle, then slows down again as it approaches the end.
Deprecated
Relationships
Conforms To
Equatable
Hashable
Sendable
See Also
Creating custom animations
protocol CustomAnimation
A type that defines how an animatable value changes over time.
Beta
struct AnimationContext
Contextual values that a custom animation can use to manage state and access a view’s environment.
Beta
struct AnimationState
A container that stores the state for a custom animation.
Beta
protocol AnimationStateKey
A key for accessing animation state values.
Beta
struct Spring
A representation of a spring’s motion.
Beta
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is UnitCurve
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


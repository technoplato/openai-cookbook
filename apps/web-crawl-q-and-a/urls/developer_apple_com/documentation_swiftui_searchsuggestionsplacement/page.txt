https://developer.apple.com/documentation/swiftui/searchsuggestionsplacementSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View
Beta
M
func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View
Beta
M
func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View
Beta
M
func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View
Beta
M
func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View
Beta
S
DismissSearchAction
P
var dismissSearch: DismissSearchAction
M
func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View
M
func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View
M
func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View
M
func searchCompletion(String) -> some View
M
func searchCompletion<T>(T) -> some View
M
func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View
M
func searchSuggestions<S>(() -> S) -> some View
Suggesting search terms
Documentation
Open Menu
Swift
Structure
SearchSuggestionsPlacement
The ways that SwiftUI displays search suggestions.
iOS 16.0+
iPadOS 16.0+
macOS 13.0+
Mac Catalyst 16.0+
tvOS 16.0+
watchOS 9.0+
visionOS 1.0+ Beta
struct SearchSuggestionsPlacement
Overview
You can influence which modes SwiftUI displays search suggestions for by using the searchSuggestions(_:for:) modifier:
enum FruitSuggestion: String, Identifiable {
    case apple, banana, orange
    var id: Self { self }
}


@State private var text = ""
@State private var suggestions: [FruitSuggestion] = []


var body: some View {
    MainContent()
        .searchable(text: $text) {
            ForEach(suggestions) { suggestion in
                Text(suggestion.rawValue)
                    .searchCompletion(suggestion.rawValue)
            }
            .searchSuggestions(.hidden, for: .content)
        }
}
In the above example, SwiftUI only displays search suggestions in a suggestions menu. You might want to do this when you want to render search suggestions in a container, like inline with your own set of search results.
You can get the current search suggestion placement by querying the searchSuggestionsPlacement environment value in your search suggestions.
Topics
Getting placements
static var automatic: SearchSuggestionsPlacement
Search suggestions render automatically based on the surrounding context.
static var content: SearchSuggestionsPlacement
Search suggestions render in the main content of the app.
static var menu: SearchSuggestionsPlacement
Search suggestions render inside of a menu attached to the search field.
Supporting types
struct Set
An efficient set of search suggestion display modes.
Relationships
Conforms To
Equatable
Sendable
See Also
Making search suggestions
Suggesting search terms
Provide suggestions to people searching for content in your app.
func searchSuggestions<S>(() -> S) -> some View
Configures the search suggestions for this view.
func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View
Configures how to display search suggestions within this view.
func searchCompletion<T>(T) -> some View
Associates a search token with the value of this view.
func searchCompletion(String) -> some View
Associates a fully formed string with the value of this view.
func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View
Marks this view as searchable with text, tokens, and suggestions.
func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View
Marks this view as searchable with text, tokens, and suggestions.
func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View
Marks this view as searchable with text, tokens, and suggestions.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is SearchSuggestionsPlacement
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright Â© 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


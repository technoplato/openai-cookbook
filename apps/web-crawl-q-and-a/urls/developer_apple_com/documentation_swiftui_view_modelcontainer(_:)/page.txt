https://developer.apple.com/documentation/swiftui/view/modelcontainer(_:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func onAppear(perform: (() -> Void)?) -> some View
Responding to view life cycle updates
r
P
EnvironmentalModifier
S
ModifiedContent
S
EmptyModifier
r
P
ViewModifier
M
func modifier<T>(T) -> ModifiedContent<Self, T>
func modelContainer(for: [PersistentModel.Type], inMemory: Bool, isAutosaveEnabled: Bool, isUndoEnabled: Bool, onSetup: (Result<ModelContainer, Error>) -> Void) -> some View
func modelContainer(for: PersistentModel.Type, inMemory: Bool, isAutosaveEnabled: Bool, isUndoEnabled: Bool, onSetup: (Result<ModelContainer, Error>) -> Void) -> some View
M
func modelContext(ModelContext) -> some View
Beta
Configuring a model
M
func defaultAppStorage(UserDefaults) -> some View
Default storage
M
func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View
M
func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View
M
func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View
M
func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View
Documentation
Open Menu
Swift
Instance Method
modelContainer(_:)
Sets the model container and associated model context in this view’s environment.
SwiftData
SwiftUI
iOS 17.0+ Beta
iPadOS 17.0+ Beta
macOS 14.0+ Beta
tvOS 17.0+ Beta
watchOS 10.0+ Beta
func modelContainer(_ container: ModelContainer) -> some View
Parameters
container
The model container to use for this view.
Discussion
In this example, ContentView sets a model container to use for RecipesList:
struct ContentView: View {
    @State private var container = ModelContainer(...)


    var body: some Scene {
        RecipesList()
            .modelContainer(container)
    }
}
The environment’s modelContext property will be assigned a new context associated with this container. All implicit model context operations in this view, such as Query properties, will use the environment’s context.
See Also
Configuring a model
func modelContext(ModelContext) -> some View
Sets the model context in this view’s environment.
Beta
func modelContainer(for: PersistentModel.Type, inMemory: Bool, isAutosaveEnabled: Bool, isUndoEnabled: Bool, onSetup: (Result<ModelContainer, Error>) -> Void) -> some View
Sets the model container in this view for storing the provided model type, creating a new container if necessary, and also sets a model context for that container in this view’s environment.
Beta
func modelContainer(for: [PersistentModel.Type], inMemory: Bool, isAutosaveEnabled: Bool, isUndoEnabled: Bool, onSetup: (Result<ModelContainer, Error>) -> Void) -> some View
Sets the model container in this view for storing the provided model types, creating a new container if necessary, and also sets a model context for that container in this view’s environment.
Beta
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is modelContainer(_:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


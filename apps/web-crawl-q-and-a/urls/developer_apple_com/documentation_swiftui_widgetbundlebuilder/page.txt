https://developer.apple.com/documentation/swiftui/widgetbundlebuilderSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
S
EmptyWidgetConfiguration
r
P
WidgetConfiguration
S
LimitedAvailabilityConfiguration
M
static func main()
M
init()
Running a widget bundle
M
static func buildOptional((Widget & _LimitedAvailabilityWidgetMarker)?) -> some Widget
static func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7, C8, C9>(C0, C1, C2, C3, C4, C5, C6, C7, C8, C9) -> some Widget
static func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7, C8>(C0, C1, C2, C3, C4, C5, C6, C7, C8) -> some Widget
Body
P
var body: Self.Body
Implementing a widget bundle
r
P
WidgetBundle
r
P
Widget
Making a configurable widget
Keeping a widget up to date
Creating a widget extension
Documentation
Open Menu
Swift
Structure
WidgetBundleBuilder
A custom attribute that constructs a widget bundle’s body.
iOS 14.0+
iPadOS 14.0+
macOS 11.0+
Mac Catalyst 14.0+
watchOS 9.0+
visionOS 1.0+ Beta
@resultBuilder
struct WidgetBundleBuilder
Overview
Use the @WidgetBundleBuilder attribute to group multiple widgets listed in the body property of a widget bundle. For example, the following code defines a widget bundle that consists of two widgets.
@main
struct GameWidgets: WidgetBundle {
   @WidgetBundleBuilder
   var body: some Widget {
       GameStatusWidget()
       CharacterDetailWidget()
   }
}
Topics
Bundling widgets
static func buildBlock() -> some Widget
Builds an empty Widget from a block containing no statements, { }.
static func buildBlock<Content>(Content) -> some Widget
Builds a single Widget written as a child view (e..g, { MyWidget() }) through unmodified.
static func buildBlock<C0, C1>(C0, C1) -> some Widget
static func buildBlock<C0, C1, C2>(C0, C1, C2) -> some Widget
static func buildBlock<C0, C1, C2, C3>(C0, C1, C2, C3) -> some Widget
static func buildBlock<C0, C1, C2, C3, C4>(C0, C1, C2, C3, C4) -> some Widget
static func buildBlock<C0, C1, C2, C3, C4, C5>(C0, C1, C2, C3, C4, C5) -> some Widget
static func buildBlock<C0, C1, C2, C3, C4, C5, C6>(C0, C1, C2, C3, C4, C5, C6) -> some Widget
static func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7>(C0, C1, C2, C3, C4, C5, C6, C7) -> some Widget
static func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7, C8>(C0, C1, C2, C3, C4, C5, C6, C7, C8) -> some Widget
static func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7, C8, C9>(C0, C1, C2, C3, C4, C5, C6, C7, C8, C9) -> some Widget
static func buildExpression<Content>(Content) -> Content
Builds an expression within the builder.
static func buildLimitedAvailability(some Widget) -> Widget & _LimitedAvailabilityWidgetMarker
Provides support for “if” statements with #available() clauses in multi-statement closures, producing conditional content for the “then” branch, i.e. the conditionally-available branch.
static func buildOptional((Widget & _LimitedAvailabilityWidgetMarker)?) -> some Widget
Provides support for “if” statements in multi-statement closures, producing an optional widget that is visible only when the condition evaluates to true.
Relationships
Conforms To
Sendable
See Also
Implementing a widget bundle
var body: Self.Body
Declares the group of widgets that an app supports.
Required
associatedtype Body : Widget
The type of widget that represents the content of the bundle.
Required
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is WidgetBundleBuilder
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


https://developer.apple.com/documentation/swiftui/documentgroup/init(viewing:contenttype:viewer:)-9yk5vSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
S
RenameButton
Renaming a document
S
OpenDocumentAction
P
var openDocument: OpenDocumentAction
S
NewDocumentAction
P
var newDocument: NewDocumentAction
Opening a document programmatically
M
init(viewing: Schema, contentType: UTType, viewer: () -> Content)
Beta
Viewing a document backed by a persistent store
M
init(editing: [PersistentModel.Type], contentType: UTType, editor: () -> Content, prepareDocument: ((ModelContext) -> Void))
Beta
M
init(editing: PersistentModel.Type, contentType: UTType, editor: () -> Content, prepareDocument: ((ModelContext) -> Void))
Beta
M
init(editing: Schema, contentType: UTType, editor: () -> Content, prepareDocument: ((ModelContext) -> Void))
Beta
Editing a document backed by a persistent store
M
init(viewing: Document.Type, viewer: (ReferenceFileDocumentConfiguration<Document>) -> Content)
M
init(newDocument: () -> Document, editor: (ReferenceFileDocumentConfiguration<Document>) -> Content)
Documentation
Open Menu
Swift
Initializer
init(viewing:contentType:viewer:)
Instantiates a document group for viewing documents that store a specific model type.
SwiftData
SwiftUI
iOS 17.0+ Beta
iPadOS 17.0+ Beta
macOS 14.0+ Beta
init(
    viewing modelType: PersistentModel.Type,
    contentType: UTType,
    viewer: () -> Content
)
Available when Document is ModelDocument and Content conforms to View.
Parameters
modelType
The model type defining the schema used for each document.
contentType
The content type of document your app can view. It should conform to UTType.package.
viewer
The viewing UI for the provided document.
Discussion
 @main
 struct Todo: App {
     var body: some Scene {
         DocumentGroup(viewing: TodoItem.self, contentType: .todoItem) {
             ContentView()
         }
     }
 }


 extension UTType {
     static var todoItem = UTType(exportedAs: "com.myApp.todoItem")
 }
Important
If your app declares custom uniform type identifiers, include corresponding entries in the app’s Info.plist. For more information, see Defining file and data types for your app. Also, remember to specify the supported Document types in the Info.plist as well.
See Also
Viewing a document backed by a persistent store
init(viewing: Schema, contentType: UTType, viewer: () -> Content)
Instantiates a document group for creating and editing documents described by a provided Schema.
Available when Document is ModelDocument and Content conforms to View.
Beta
init(viewing: [PersistentModel.Type], contentType: UTType, viewer: () -> Content)
Instantiates a document group for viewing documents that store several model types.
Available when Document is ModelDocument and Content conforms to View.
Beta
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is init(viewing:contentType:viewer:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


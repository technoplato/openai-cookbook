https://developer.apple.com/documentation/swiftui/list/init(_:id:editactions:selection:rowcontent:)-5vo52Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View
Configuring separators
P
var defaultMinListRowHeight: CGFloat
S
ListItemTint
M
func listItemTint(ListItemTint?) -> some View
M
func listItemTint(Color?) -> some View
M
func listRowHoverEffectDisabled(Bool) -> some View
init<Data, ID, RowContent>(Binding<Data>, id: KeyPath<Data.Element, ID>, editActions: EditActions<Data>, selection: Binding<SelectionValue?>?, rowContent: (Binding<Data.Element>) -> RowContent)
M
init<Data, ID, RowContent>(Binding<Data>, id: KeyPath<Data.Element, ID>, editActions: EditActions<Data>, selection: Binding<SelectionValue>, rowContent: (Binding<Data.Element>) -> RowContent)
M
init<Data, ID, RowContent>(Binding<Data>, id: KeyPath<Data.Element, ID>, editActions: EditActions<Data>, selection: Binding<Set<SelectionValue>>?, rowContent: (Binding<Data.Element>) -> RowContent)
M
init<Data, ID, RowContent>(Binding<Data>, id: KeyPath<Data.Element, ID>, editActions: EditActions<Data>, rowContent: (Binding<Data.Element>) -> RowContent)
M
init<Data, RowContent>(Binding<Data>, editActions: EditActions<Data>, selection: Binding<Set<SelectionValue>>?, rowContent: (Binding<Data.Element>) -> RowContent)
M
init<Data, RowContent>(Binding<Data>, editActions: EditActions<Data>, selection: Binding<SelectionValue?>?, rowContent: (Binding<Data.Element>) -> RowContent)
M
init<Data, RowContent>(Binding<Data>, editActions: EditActions<Data>, selection: Binding<SelectionValue>, rowContent: (Binding<Data.Element>) -> RowContent)
M
init<Data, RowContent>(Binding<Data>, editActions: EditActions<Data>, rowContent: (Binding<Data.Element>) -> RowContent)
Listing editable data
Documentation
Open Menu
Swift
Initializer
init(_:id:editActions:selection:rowContent:)
Creates a list that computes its rows on demand from an underlying collection of identifiable data, allows to edit the collection, and optionally allowing users to select a single row.
iOS 16.0+
iPadOS 16.0+
macOS 13.0+
Mac Catalyst 16.0+
tvOS 16.0+
visionOS 1.0+ Beta
@MainActor
init<Data, ID, RowContent>(
    _ data: Binding<Data>,
    id: KeyPath<Data.Element, ID>,
    editActions: EditActions<Data>,
    selection: Binding<SelectionValue?>?,
    @ViewBuilder rowContent: @escaping (Binding<Data.Element>) -> RowContent
) where Content == ForEach<IndexedIdentifierCollection<Data, ID>, ID, EditableCollectionContent<RowContent, Data>>, Data : MutableCollection, Data : RandomAccessCollection, ID : Hashable, RowContent : View, Data.Index : Hashable
Available when SelectionValue conforms to Hashable and Content conforms to View.
Parameters
data
The identifiable data for computing the list.
id
The key path to the data model’s identifier.
editActions
The edit actions that are synthesized on data.
selection
A binding to a selected value.
rowContent
A view builder that creates the view for a single row of the list.
Discussion
The following example creates a list to display a collection of favorite foods allowing the user to delete or move elements from the collection, and select a single elements.
List(
    $foods,
    editActions: [.delete, .move],
    selection: $selectedFood
) { $food in
   HStack {
       Text(food.name)
       Toggle("Favorite", isOn: $food.isFavorite)
   }
}
Use deleteDisabled(_:) and moveDisabled(_:) to disable respectively delete or move actions on a per-row basis.
Explicit DynamicViewContent.onDelete(perform:), DynamicViewContent.onMove(perform:), or View.swipeActions(edge:allowsFullSwipe:content:) modifiers will override any synthesized action
See Also
Listing editable data
init<Data, RowContent>(Binding<Data>, editActions: EditActions<Data>, rowContent: (Binding<Data.Element>) -> RowContent)
Creates a list that computes its rows on demand from an underlying collection of identifiable data and allows to edit the collection.
Available when SelectionValue is Never and Content conforms to View.
init<Data, RowContent>(Binding<Data>, editActions: EditActions<Data>, selection: Binding<SelectionValue>, rowContent: (Binding<Data.Element>) -> RowContent)
Creates a list that computes its rows on demand from an underlying collection of identifiable data, allows to edit the collection, and requires a selection of a single row.
Available when SelectionValue conforms to Hashable and Content conforms to View.
init<Data, RowContent>(Binding<Data>, editActions: EditActions<Data>, selection: Binding<SelectionValue?>?, rowContent: (Binding<Data.Element>) -> RowContent)
Creates a list that computes its rows on demand from an underlying collection of identifiable data, allows to edit the collection, and optionally allowing users to select a single row.
Available when SelectionValue conforms to Hashable and Content conforms to View.
init<Data, RowContent>(Binding<Data>, editActions: EditActions<Data>, selection: Binding<Set<SelectionValue>>?, rowContent: (Binding<Data.Element>) -> RowContent)
Creates a list that computes its rows on demand from an underlying collection of identifiable, allows to edit the collection, and optionally allows users to select multiple rows.
Available when SelectionValue conforms to Hashable and Content conforms to View.
init<Data, ID, RowContent>(Binding<Data>, id: KeyPath<Data.Element, ID>, editActions: EditActions<Data>, rowContent: (Binding<Data.Element>) -> RowContent)
Creates a list that computes its rows on demand from an underlying collection of identifiable data and allows to edit the collection.
Available when SelectionValue is Never and Content conforms to View.
init<Data, ID, RowContent>(Binding<Data>, id: KeyPath<Data.Element, ID>, editActions: EditActions<Data>, selection: Binding<Set<SelectionValue>>?, rowContent: (Binding<Data.Element>) -> RowContent)
Creates a list that computes its rows on demand from an underlying collection of identifiable, allows to edit the collection, and optionally allows users to select multiple rows.
Available when SelectionValue conforms to Hashable and Content conforms to View.
init<Data, ID, RowContent>(Binding<Data>, id: KeyPath<Data.Element, ID>, editActions: EditActions<Data>, selection: Binding<SelectionValue>, rowContent: (Binding<Data.Element>) -> RowContent)
Creates a list that computes its rows on demand from an underlying collection of identifiable, allows to edit the collection, and requires a selection of a single row.
Available when SelectionValue conforms to Hashable and Content conforms to View.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is init(_:id:editActions:selection:rowContent:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


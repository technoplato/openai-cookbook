https://developer.apple.com/documentation/swiftui/view/accessibilityrepresentation(representation:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
Articles
Xcode library customization
Previews in Xcode
Tool support
Technology-specific views
WatchKit integration
UIKit integration
M
func accessibilityChildren<V>(children: () -> V) -> some View
M
func accessibilityElement(children: AccessibilityChildBehavior) -> some View
Creating accessible elements
Creating Accessible Views
Essentials
Accessibility fundamentals
Accessibility
System events
Documentation
Open Menu
Swift
Instance Method
accessibilityRepresentation(representation:)
Replaces one or more accessibility elements for this view with new accessibility elements.
iOS 15.0+
iPadOS 15.0+
macOS 12.0+
Mac Catalyst 15.0+
tvOS 15.0+
watchOS 8.0+
visionOS 1.0+ Beta
func accessibilityRepresentation<V>(@ViewBuilder representation: () -> V) -> some View where V : View
Parameters
representation
A hidden view that the accessibility system uses to generate accessibility elements.
Discussion
You can make controls accessible by using a custom style. For example, a custom ToggleStyle that you create inherits the accessibility features of Toggle automatically. When you can’t use the parent view’s accessibility elements, use the accessibilityRepresentation(representation:) modifier instead. This modifier replaces default accessibility elements with different accessibility elements that you provide. You use synthetic, non-visual accessibility elements to represent what the view displays.
The example below makes a custom adjustable control accessible by explicitly defining the representation of its step increments using a Slider:
var body: some View {
    VStack {
        SliderTrack(...) // Custom slider implementation.
    }
    .accessibilityRepresentation {
        Slider(value: $value, in: 0...100) {
            Text("Label")
        }
    }
}
SwiftUI hides the view that you provide in the representation closure and makes it non-interactive. The framework uses it only to generate accessibility elements.
See Also
Creating accessible elements
func accessibilityElement(children: AccessibilityChildBehavior) -> some View
Creates a new accessibility element, or modifies the AccessibilityChildBehavior of the existing accessibility element.
func accessibilityChildren<V>(children: () -> V) -> some View
Replaces the existing accessibility element’s children with one or more new synthetic accessibility elements.
struct AccessibilityChildBehavior
Defines the behavior for the child elements of the new parent element.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is accessibilityRepresentation(representation:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


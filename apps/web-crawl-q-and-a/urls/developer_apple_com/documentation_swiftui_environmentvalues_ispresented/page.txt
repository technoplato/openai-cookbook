https://developer.apple.com/documentation/swiftui/environmentvalues/ispresentedSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
Images
Text input and output
Animations
View styles
View configuration
View fundamentals
Views
Dismissing a presentation
M
func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View
Beta
M
func inspectorColumnWidth(CGFloat) -> some View
Beta
M
func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View
Beta
Presenting an inspector
S
FileDialogBrowserOptions
Beta
M
func fileDialogURLEnabled(Predicate<URL>) -> some View
Beta
M
func fileDialogMessage(LocalizedStringKey) -> some View
Beta
Documentation
Open Menu
Swift
Instance Property
isPresented
A Boolean value that indicates whether the view associated with this environment is currently presented.
iOS 15.0+
iPadOS 15.0+
macOS 12.0+
Mac Catalyst 15.0+
tvOS 15.0+
watchOS 8.0+
visionOS 1.0+ Beta
var isPresented: Bool { get }
Discussion
You can read this value like any of the other EnvironmentValues by creating a property with the Environment property wrapper:
@Environment(\.isPresented) private var isPresented
Read the value inside a view if you need to know when SwiftUI presents that view. For example, you can take an action when SwiftUI presents a view by using the onChange(of:perform:) modifier:
.onChange(of: isPresented) { isPresented in
    if isPresented {
        // Do something when first presented.
    }
}
This behaves differently than onAppear(perform:), which SwiftUI can call more than once for a given presentation, like when you navigate back to a view that’s already in the navigation hierarchy.
To dismiss the currently presented view, use dismiss.
See Also
Dismissing a presentation
var dismiss: DismissAction
An action that dismisses the current presentation.
struct DismissAction
An action that dismisses a presentation.
func interactiveDismissDisabled(Bool) -> some View
Conditionally prevents interactive dismissal of presentations like popovers, sheets, and inspectors.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is isPresented
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


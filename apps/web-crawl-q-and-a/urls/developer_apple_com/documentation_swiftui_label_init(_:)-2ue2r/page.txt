https://developer.apple.com/documentation/swiftui/label/init(_:)-2ue2rSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func fontWeight(Font.Weight?) -> some View
M
func fontDesign(Font.Design?) -> some View
M
func font(Font?) -> some View
Applying custom fonts to text
Setting a font
r
P
TextSelectability
M
func textSelection<S>(S) -> some View
Creating a label from a configuration
M
init(title: () -> Title, icon: () -> Icon)
Creating a label from a title and icon
M
init<S>(S, systemImage: String)
M
init(LocalizedStringKey, systemImage: String)
Creating a label from text and an SF Symbol
M
init<S>(S, image: String)
M
init(LocalizedStringKey, image: String)
Documentation
Open Menu
Swift
Initializer
init(_:)
Creates a label representing the configuration of a style.
iOS 14.0+
iPadOS 14.0+
macOS 11.0+
Mac Catalyst 14.0+
tvOS 14.0+
watchOS 7.0+
visionOS 1.0+ Beta
init(_ configuration: LabelStyleConfiguration)
Available when Title is LabelStyleConfiguration.Title and Icon is LabelStyleConfiguration.Icon.
Parameters
configuration
The label style to use.
Discussion
You can use this initializer within the makeBody(configuration:) method of a LabelStyle instance to create an instance of the label that’s being styled. This is useful for custom label styles that only wish to modify the current style, as opposed to implementing a brand new style.
For example, the following style adds a red border around the label, but otherwise preserves the current style:
struct RedBorderedLabelStyle: LabelStyle {
    func makeBody(configuration: Configuration) -> some View {
        Label(configuration)
            .border(Color.red)
    }
}
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is init(_:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


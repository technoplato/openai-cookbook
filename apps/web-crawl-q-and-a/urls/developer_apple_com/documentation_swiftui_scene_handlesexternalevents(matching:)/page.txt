https://developer.apple.com/documentation/swiftui/scene/handlesexternalevents(matching:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func immersionStyle(selection: Binding<ImmersionStyle>, in: ImmersionStyle...) -> some Scene
Beta
Styling the scene
M
func windowResizability(WindowResizability) -> some Scene
M
func defaultSize(width: CGFloat, height: CGFloat, depth: CGFloat, in: UnitLength) -> some Scene
Beta
M
func defaultSize(Size3D, in: UnitLength) -> some Scene
Beta
M
func defaultSize(width: CGFloat, height: CGFloat, depth: CGFloat) -> some Scene
Beta
M
func defaultSize(width: CGFloat, height: CGFloat) -> some Scene
func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some Scene
M
func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some Scene
Beta
M
func onChange<V>(of: V, initial: Bool, () -> Void) -> some Scene
Beta
Watching for changes
Body
P
var body: Self.Body
Creating a scene
r
P
Scene
Creating scenes
Documentation
Open Menu
Swift
Instance Method
handlesExternalEvents(matching:)
Specifies a modifier to indicate if this Scene can be used when creating a new Scene for the received External Event.
iOS 14.0+
iPadOS 14.0+
macOS 11.0+
Mac Catalyst 14.0+
visionOS 1.0+ Beta
func handlesExternalEvents(matching conditions: Set<String>) -> some Scene
Parameters
matching
A Set of Strings that are checked to see if they are contained in the targetContentIdenfifier. The empty Set and empty Strings never match. The String value “*” always matches.
Discussion
This modifier is only supported for WindowGroup Scene types.
For DocumentGroups, the received External Event must have a URL for the DocumentGroup to be considered. (Either via openURL, or the webPageURL property of an NSUserActivity). The UTI for the URL is implicitly matched against the DocumentGroup’s supported types.
If the modifier evaluates to true, an instance of the Scene will be used.
If the modifier evaluates to false, on macOS the Scene will not be used even if no other Scenes are available. This case is considered an error. On iOS, the first Scene specified in the body property for the App will be used.
If no modifier is set, the Scene will be used if all other WindowGroups with a modifier evaluate to false.
On platforms that only allow a single Window/Scene, this method is ignored.
See Also
Watching for changes
func onChange<V>(of: V, initial: Bool, () -> Void) -> some Scene
Adds an action to perform when the given value changes.
Beta
func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some Scene
Adds an action to perform when the given value changes.
Beta
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is handlesExternalEvents(matching:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


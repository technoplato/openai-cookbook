https://developer.apple.com/documentation/swiftui/controlgroupSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
S
GroupBox
M
func groupBoxStyle<S>(S) -> some View
Grouping inputs
S
Form
M
func formStyle<S>(S) -> some View
S
LabeledContent
M
func labeledContentStyle<S>(S) -> some View
Presenting a group of controls
M
func controlGroupStyle<S>(S) -> some View
Scroll views
Event handling
Gestures
Input events
Clipboard
Drag and drop
Documentation
Open Menu
Swift
Structure
ControlGroup
A container view that displays semantically-related controls in a visually-appropriate manner for the context
iOS 15.0+
iPadOS 15.0+
macOS 12.0+
Mac Catalyst 15.0+
tvOS 17.0+ Beta
visionOS 1.0+ Beta
struct ControlGroup<Content> where Content : View
Overview
You can provide an optional label to this view that describes its children. This view may be used in different ways depending on the surrounding context. For example, when you place the control group in a toolbar item, SwiftUI uses the label when the group is moved to the toolbar’s overflow menu.
ContentView()
    .toolbar(id: "items") {
        ToolbarItem(id: "media") {
            ControlGroup {
                MediaButton()
                ChartButton()
                GraphButton()
            } label: {
                Label("Plus", systemImage: "plus")
            }
        }
    }
Topics
Creating a control group
init(content: () -> Content)
Creates a new ControlGroup with the specified children
init<C, L>(content: () -> C, label: () -> L)
Creates a new control group with the specified content and a label.
Available when Content conforms to View.
init<C, S>(S, content: () -> C)
Creates a new control group with the specified content that generates its label from a string.
Available when Content conforms to View.
init<C>(LocalizedStringKey, content: () -> C)
Creates a new control group with the specified content that generates its label from a localized string key.
Available when Content conforms to View.
Creating a control group with an image
init<C>(LocalizedStringKey, image: ImageResource, content: () -> C)
Creates a new control group with the specified content that generates its label from a localized string key and image resource.
Available when Content conforms to View.
Beta
init<C, S>(S, image: ImageResource, content: () -> C)
Creates a new control group with the specified content that generates its label from a string and image name.
Available when Content conforms to View.
Beta
init<C>(LocalizedStringKey, systemImage: String, content: () -> C)
Creates a new control group with the specified content that generates its label from a localized string key and image name.
Available when Content conforms to View.
init<C, S>(S, systemImage: String, content: () -> C)
Creates a new control group with the specified content that generates its label from a string and image name.
Available when Content conforms to View.
Creating a configured control group
init(ControlGroupStyleConfiguration)
Creates a control group based on a style configuration.
Available when Content is ControlGroupStyleConfiguration.Content.
Supporting types
struct LabeledControlGroupContent
A view that represents the body of a control group with a specified label.
Relationships
Conforms To
Sendable
View
See Also
Presenting a group of controls
func controlGroupStyle<S>(S) -> some View
Sets the style for control groups within this view.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is ControlGroup
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


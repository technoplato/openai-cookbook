https://developer.apple.com/documentation/swiftui/progressview/init(_:value:total:)-7halzSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
E
ControlSize
P
var controlSize: ControlSize
M
func controlSize(ControlSize) -> some View
Sizing controls
S
SensoryFeedback
Beta
M
func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View
Beta
M
func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View
init(timerInterval: ClosedRange<Date>, countsDown: Bool, label: () -> Label, currentValueLabel: () -> CurrentValueLabel)
M
init<V>(LocalizedStringKey, value: V?, total: V)
M
init<V>(value: V?, total: V)
M
init(Progress)
Creating a determinate progress view
M
init<S>(S)
M
init(LocalizedStringKey)
M
init(label: () -> Label)
M
init()
Documentation
Open Menu
Swift
Initializer
init(_:value:total:)
Creates a progress view for showing determinate progress that generates its label from a string.
iOS 14.0+
iPadOS 14.0+
macOS 11.0+
Mac Catalyst 14.0+
tvOS 14.0+
watchOS 7.0+
visionOS 1.0+ Beta
init<S, V>(
    _ title: S,
    value: V?,
    total: V = 1.0
) where Label == Text, CurrentValueLabel == EmptyView, S : StringProtocol, V : BinaryFloatingPoint
Available when Label conforms to View and CurrentValueLabel conforms to View.
Parameters
title
The string that describes the task in progress.
value
The completed amount of the task to this point, in a range of 0.0 to total, or nil if the progress is indeterminate.
total
The full amount representing the complete scope of the task, meaning the task is complete if value equals total. The default value is 1.0.
Discussion
If the value is non-nil, but outside the range of 0.0 through total, the progress view pins the value to those limits, rounding to the nearest possible bound. A value of nil represents indeterminate progress, in which case the progress view ignores total.
This initializer creates a Text view on your behalf, and treats the title similar to init(verbatim:). See Text for more information about localizing strings. To initialize a determinate progress view with a localized string key, use the corresponding initializer that takes a LocalizedStringKey instance.
See Also
Creating a determinate progress view
init(Progress)
Creates a progress view for visualizing the given progress instance.
Available when Label conforms to View and CurrentValueLabel conforms to View.
init<V>(value: V?, total: V)
Creates a progress view for showing determinate progress.
Available when Label conforms to View and CurrentValueLabel conforms to View.
init<V>(LocalizedStringKey, value: V?, total: V)
Creates a progress view for showing determinate progress that generates its label from a localized string.
Available when Label conforms to View and CurrentValueLabel conforms to View.
init<V>(value: V?, total: V, label: () -> Label)
Creates a progress view for showing determinate progress, with a custom label.
Available when Label conforms to View and CurrentValueLabel conforms to View.
init<V>(value: V?, total: V, label: () -> Label, currentValueLabel: () -> CurrentValueLabel)
Creates a progress view for showing determinate progress, with a custom label.
Available when Label conforms to View and CurrentValueLabel conforms to View.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is init(_:value:total:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright Â© 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


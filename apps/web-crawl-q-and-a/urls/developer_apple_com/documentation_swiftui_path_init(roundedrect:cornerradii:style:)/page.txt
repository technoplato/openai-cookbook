https://developer.apple.com/documentation/swiftui/path/init(roundedrect:cornerradii:style:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func addRoundedRect(in: CGRect, cornerSize: CGSize, style: RoundedCornerStyle, transform: CGAffineTransform)
M
func addRelativeArc(center: CGPoint, radius: CGFloat, startAngle: Angle, delta: Angle, transform: CGAffineTransform)
M
func addRects([CGRect], transform: CGAffineTransform)
M
func addRect(CGRect, transform: CGAffineTransform)
M
func addQuadCurve(to: CGPoint, control: CGPoint)
M
func addPath(Path, transform: CGAffineTransform)
M
func addLines([CGPoint])
func addArc(center: CGPoint, radius: CGFloat, startAngle: Angle, endAngle: Angle, clockwise: Bool, transform: CGAffineTransform)
M
init(roundedRect: CGRect, cornerSize: CGSize, style: RoundedCornerStyle)
M
init(roundedRect: CGRect, cornerRadius: CGFloat, style: RoundedCornerStyle)
M
init(ellipseIn: CGRect)
M
init(CGRect)
M
init?(String)
M
init(CGPath)
M
init(CGMutablePath)
M
init((inout Path) -> ())
Documentation
Open Menu
Swift
Initializer
init(roundedRect:cornerRadii:style:)
Creates a path as the given rounded rectangle, which may have uneven corner radii.
iOS 16.0+
iPadOS 16.0+
macOS 13.0+
Mac Catalyst 16.0+
tvOS 16.0+
watchOS 9.0+
visionOS 1.0+ Beta
init(
    roundedRect rect: CGRect,
    cornerRadii: RectangleCornerRadii,
    style: RoundedCornerStyle = .continuous
)
Parameters
rect
A rectangle, specified in user space coordinates.
cornerRadii
The radius of each corner of the rectangle, specified in user space coordinates.
style
The corner style. Defaults to the continous style if not specified.
Discussion
This is a convenience function that creates a path of a rounded rectangle. Using this function is more efficient than creating a path and adding a rounded rectangle to it.
See Also
Creating a path
init()
Creates an empty path.
init((inout Path) -> ())
Creates an empty path, then executes a closure to add its initial elements.
init(CGMutablePath)
Creates a path from a copy of a mutable shape path.
init(CGPath)
Creates a path from an immutable shape path.
init?(String)
Initializes from the result of a previous call to Path.stringRepresentation. Fails if the string does not describe a valid path.
init(CGRect)
Creates a path containing a rectangle.
init(ellipseIn: CGRect)
Creates a path as an ellipse within the given rectangle.
init(roundedRect: CGRect, cornerRadius: CGFloat, style: RoundedCornerStyle)
Creates a path containing a rounded rectangle.
init(roundedRect: CGRect, cornerSize: CGSize, style: RoundedCornerStyle)
Creates a path containing a rounded rectangle.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is init(roundedRect:cornerRadii:style:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright Â© 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


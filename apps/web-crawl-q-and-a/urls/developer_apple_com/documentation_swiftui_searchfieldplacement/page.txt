https://developer.apple.com/documentation/swiftui/searchfieldplacementSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View
Scoping a search operation
Limiting search scope
S
SearchSuggestionsPlacement
M
func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View
M
func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View
M
func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View
static func navigationBarDrawer(displayMode: SearchFieldPlacement.NavigationBarDrawerDisplayMode) -> SearchFieldPlacement
M
func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View
Beta
M
func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View
Beta
M
func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View
Beta
M
func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View
M
func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View
M
func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View
M
func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View
M
func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View
Documentation
Open Menu
Swift
Structure
SearchFieldPlacement
The placement of a search field in a view hierarchy.
iOS 15.0+
iPadOS 15.0+
macOS 12.0+
Mac Catalyst 15.0+
tvOS 15.0+
watchOS 8.0+
visionOS 1.0+ Beta
struct SearchFieldPlacement
Overview
You can give a preferred placement to any of the searchable modifiers, like searchable(text:placement:prompt:):
var body: some View {
    NavigationView {
        PrimaryView()
        SecondaryView()
        Text("Select a primary and secondary item")
    }
    .searchable(text: $text, placement: .sidebar)
}
Depending on the containing view hierachy, SwiftUI might not be able to fulfill your request.
Topics
Getting a search field placement
static let automatic: SearchFieldPlacement
SwiftUI places the search field automatically.
static let navigationBarDrawer: SearchFieldPlacement
The search field appears in the navigation bar.
static func navigationBarDrawer(displayMode: SearchFieldPlacement.NavigationBarDrawerDisplayMode) -> SearchFieldPlacement
The search field appears in the navigation bar using the specified display mode.
static let sidebar: SearchFieldPlacement
The search field appears in the sidebar of a navigation view.
static let toolbar: SearchFieldPlacement
The search field appears in the toolbar.
Supporting types
struct NavigationBarDrawerDisplayMode
A mode that determines when to display a search field that appears in a navigation bar.
Relationships
Conforms To
Sendable
See Also
Searching your app’s data model
Adding a search interface to your app
Present an interface that people can use to search for content in your app.
Performing a search operation
Update search results based on search text and optional tokens that you store.
func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View
Marks this view as searchable, which configures the display of a search field.
func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View
Marks this view as searchable, which configures the display of a search field.
func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View
Marks this view as searchable, which configures the display of a search field.
func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View
Marks this view as searchable with text and tokens.
func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View
Marks this view as searchable with text and tokens.
func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View
Marks this view as searchable with text and tokens.
func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View
Marks this view as searchable, which configures the display of a search field.
Beta
func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View
Marks this view as searchable, which configures the display of a search field.
Beta
func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View
Marks this view as searchable, which configures the display of a search field.
Beta
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is SearchFieldPlacement
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


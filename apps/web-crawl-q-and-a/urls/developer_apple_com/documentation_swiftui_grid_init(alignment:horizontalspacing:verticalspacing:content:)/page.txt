https://developer.apple.com/documentation/swiftui/grid/init(alignment:horizontalspacing:verticalspacing:content:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func overlay<V>(alignment: Alignment, content: () -> V) -> some View
M
func background<S>(in: S, fillStyle: FillStyle) -> some View
M
func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View
M
func background<S>(in: S, fillStyle: FillStyle) -> some View
M
func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View
M
func background(ignoresSafeAreaEdges: Edge.Set) -> some View
M
func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View
init(alignment: Alignment, horizontalSpacing: CGFloat?, verticalSpacing: CGFloat?, content: () -> Content)
Creating a grid
S
Grid
Statically arranging views in two dimensions
S
PinnedScrollableViews
S
LazyVStack
S
LazyHStack
Creating performant scrollable stacks
Grouping data with lazy stack views
Documentation
Open Menu
Swift
Initializer
init(alignment:horizontalSpacing:verticalSpacing:content:)
Creates a grid with the specified spacing, alignment, and child views.
iOS 16.0+
iPadOS 16.0+
macOS 13.0+
Mac Catalyst 16.0+
tvOS 16.0+
watchOS 9.0+
visionOS 1.0+ Beta
init(
    alignment: Alignment = .center,
    horizontalSpacing: CGFloat? = nil,
    verticalSpacing: CGFloat? = nil,
    @ViewBuilder content: () -> Content
)
Parameters
alignment
The guide for aligning the child views within the space allocated for a given cell. The default is center.
horizontalSpacing
The horizontal distance between each cell, given in points. The value is nil by default, which results in a default distance between cells that’s appropriate for the platform.
verticalSpacing
The vertical distance between each cell, given in points. The value is nil by default, which results in a default distance between cells that’s appropriate for the platform.
content
A closure that creates the grid’s rows.
Discussion
Use this initializer to create a Grid. Provide a content closure that defines the rows of the grid, and optionally customize the spacing between cells and the alignment of content within each cell. The following example customizes the spacing between cells:
Grid(horizontalSpacing: 30, verticalSpacing: 30) {
    ForEach(0..<5) { row in
        GridRow {
            ForEach(0..<5) { column in
                Text("(\(column), \(row))")
            }
        }
    }
}
You can list rows and the cells within rows directly, or you can use a ForEach structure to generate either, as the example above does:
By default, the grid’s alignment value applies to all of the cells in the grid. However, you can also change the alignment for particular cells or groups of cells:
Override the vertical alignment for the cells in a row by specifying a VerticalAlignment parameter to the corresponding row’s init(alignment:content:) initializer.
Override the horizontal alignment for the cells in a column by adding a gridColumnAlignment(_:) view modifier to exactly one of the cells in the column, and specifying a HorizontalAlignment parameter.
Specify a custom alignment anchor for a particular cell by using the gridCellAnchor(_:) modifier on the cell’s view.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is init(alignment:horizontalSpacing:verticalSpacing:content:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


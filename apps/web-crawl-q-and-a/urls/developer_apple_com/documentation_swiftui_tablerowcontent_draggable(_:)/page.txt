https://developer.apple.com/documentation/swiftui/tablerowcontent/draggable(_:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
Input events
Gestures
Event handling
Scroll views
View groupings
S
TableOutlineGroupContent
Beta
S
DisclosureTableRow
func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> ModifiedContent<Self, _ContextMenuPreviewTableRowModifier<M, P>>
Managing interaction
TableRowValue
Defining the row value
TableRowBody
P
var tableRowBody: Self.TableRowBody
Getting the row body
r
P
TableRowContent
S
TableRow
Documentation
Open Menu
Swift
Instance Method
draggable(_:)
Activates this row as the source of a drag and drop operation.
iOS 17.0+ Beta
iPadOS 17.0+ Beta
macOS 14.0+ Beta
Mac Catalyst 17.0+ Beta
visionOS 1.0+ Beta
func draggable<T>(_ payload: @autoclosure @escaping () -> T) -> some TableRowContent<Self.TableRowValue> where T : Transferable
Parameters
payload
A closure that returns a single instance or a value conforming to Transferable that represents the draggable data from this view.
Return Value
A row that activates this row as the source of a drag and drop operation.
Discussion
Applying the draggable(_:) modifier adds the appropriate gestures for drag and drop to this row.
See Also
Managing interaction
func dropDestination<T>(for: T.Type, action: ([T]) -> Void) -> some TableRowContent<Self.TableRowValue>
Defines the entire row as a destination of a drag and drop operation that handles the dropped content with a closure that you specify.
Beta
func onHover(perform: (Bool) -> Void) -> some TableRowContent<Self.TableRowValue>
Adds an action to perform when the pointer moves onto or away from the entire row.
Beta
func itemProvider((() -> NSItemProvider?)?) -> ModifiedContent<Self, ItemProviderTableRowModifier>
Provides a closure that vends the drag representation for a particular data element.
struct ItemProviderTableRowModifier
A table row modifier that associates an item provider with some base row content.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is draggable(_:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright Â© 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


https://developer.apple.com/documentation/swiftui/scrollviewproxy/scrollto(_:anchor:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
P
var horizontalScrollIndicatorVisibility: ScrollIndicatorVisibility
M
func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View
M
func scrollIndicatorsFlash(trigger: some Equatable) -> some View
Beta
M
func scrollIndicatorsFlash(onAppear: Bool) -> some View
Beta
Showing scroll indicators
S
ScrollTransitionConfiguration
Beta
E
ScrollTransitionPhase
func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View
func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View
Performing scrolling
S
ScrollViewProxy
S
ScrollViewReader
S
ScrollView
Creating a scroll view
Scroll views
View groupings
Tables
Documentation
Open Menu
Swift
Instance Method
scrollTo(_:anchor:)
Scans all scroll views contained by the proxy for the first with a child view with identifier id, and then scrolls to that view.
iOS 14.0+
iPadOS 14.0+
macOS 11.0+
Mac Catalyst 14.0+
tvOS 14.0+
watchOS 7.0+
visionOS 1.0+ Beta
func scrollTo<ID>(
    _ id: ID,
    anchor: UnitPoint? = nil
) where ID : Hashable
Parameters
id
The identifier of a child view to scroll to.
anchor
The alignment behavior of the scroll action.
Discussion
If anchor is nil, this method finds the container of the identified view, and scrolls the minimum amount to make the identified view wholly visible.
If anchor is non-nil, it defines the points in the identified view and the scroll view to align. For example, setting anchor to top aligns the top of the identified view to the top of the scroll view. Similarly, setting anchor to bottom aligns the bottom of the identified view to the bottom of the scroll view, and so on.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is scrollTo(_:anchor:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright Â© 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


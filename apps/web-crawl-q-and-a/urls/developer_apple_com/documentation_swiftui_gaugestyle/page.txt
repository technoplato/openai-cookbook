https://developer.apple.com/documentation/swiftui/gaugestyleSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
r
P
MenuStyle
S
MenuStyleConfiguration
Styling toggles
M
func toggleStyle<S>(S) -> some View
r
P
ToggleStyle
S
ToggleStyleConfiguration
Styling indicators
M
func gaugeStyle<S>(S) -> some View
Body
Supporting types
S
DefaultGaugeStyle
S
CircularGaugeStyle
S
AccessoryCircularGaugeStyle
S
AccessoryCircularCapacityGaugeStyle
S
LinearGaugeStyle
Documentation
Open Menu
Swift
Protocol
GaugeStyle
Defines the implementation of all gauge instances within a view hierarchy.
iOS 16.0+
iPadOS 16.0+
macOS 13.0+
Mac Catalyst 16.0+
watchOS 7.0+
visionOS 1.0+ Beta
protocol GaugeStyle
Overview
To configure the style for all the Gauge instances in a view hierarchy, use the gaugeStyle(_:) modifier. For example, you can configure a gauge to use the circular style:
Gauge(value: batteryLevel, in: 0...100) {
    Text("Battery Level")
}
.gaugeStyle(.circular)
Topics
Getting the automatic style
static var automatic: DefaultGaugeStyle
The default gauge view style in the current context of the view being styled.
Available when Self is DefaultGaugeStyle.
Getting circular gauge styles
static var circular: CircularGaugeStyle
A gauge style that displays an open ring with a marker that appears at a point along the ring to indicate the gauge’s current value.
Available when Self is CircularGaugeStyle.
static var accessoryCircular: AccessoryCircularGaugeStyle
A gauge style that displays an open ring with a marker that appears at a point along the ring to indicate the gauge’s current value.
Available when Self is AccessoryCircularGaugeStyle.
static var accessoryCircularCapacity: AccessoryCircularCapacityGaugeStyle
A gauge style that displays a closed ring that’s partially filled in to indicate the gauge’s current value.
Available when Self is AccessoryCircularCapacityGaugeStyle.
Getting linear gauge styles
static var linear: LinearGaugeStyle
A gauge style that displays a bar with a marker that appears at a point along the bar to indicate the gauge’s current value.
Available when Self is LinearGaugeStyle.
static var linearCapacity: LinearCapacityGaugeStyle
A gauge style that displays a bar that fills from leading to trailing edges as the gauge’s current value increases.
Available when Self is LinearCapacityGaugeStyle.
static var accessoryLinear: AccessoryLinearGaugeStyle
A gauge style that displays bar with a marker that appears at a point along the bar to indicate the gauge’s current value.
Available when Self is AccessoryLinearGaugeStyle.
static var accessoryLinearCapacity: AccessoryLinearCapacityGaugeStyle
A gauge style that displays bar that fills from leading to trailing edges as the gauge’s current value increases.
Available when Self is AccessoryLinearCapacityGaugeStyle.
Creating custom gauge styles
func makeBody(configuration: Self.Configuration) -> Self.Body
Creates a view representing the body of a gauge.
Required
typealias Configuration
The properties of a gauge instance.
associatedtype Body : View
A view representing the body of a gauge.
Required
Supporting types
struct DefaultGaugeStyle
The default gauge view style in the current context of the view being styled.
struct CircularGaugeStyle
A gauge style that displays an open ring with a marker that appears at a point along the ring to indicate the gauge’s current value.
struct AccessoryCircularGaugeStyle
A gauge style that displays an open ring with a marker that appears at a point along the ring to indicate the gauge’s current value.
struct AccessoryCircularCapacityGaugeStyle
A gauge style that displays a closed ring that’s partially filled in to indicate the gauge’s current value.
struct LinearGaugeStyle
A gauge style that displays a bar with a marker that appears at a point along the bar to indicate the gauge’s current value.
struct LinearCapacityGaugeStyle
A gauge style that displays bar that fills from leading to trailing edges as the gauge’s current value increases.
struct AccessoryLinearGaugeStyle
A gauge style that displays bar with a marker that appears at a point along the bar to indicate the gauge’s current value.
struct AccessoryLinearCapacityGaugeStyle
A gauge style that displays bar that fills from leading to trailing edges as the gauge’s current value increases.
Relationships
Conforming Types
AccessoryCircularCapacityGaugeStyle
AccessoryCircularGaugeStyle
AccessoryLinearCapacityGaugeStyle
AccessoryLinearGaugeStyle
CircularGaugeStyle
DefaultGaugeStyle
LinearCapacityGaugeStyle
LinearGaugeStyle
See Also
Styling indicators
func gaugeStyle<S>(S) -> some View
Sets the style for gauges within this view.
struct GaugeStyleConfiguration
The properties of a gauge instance.
func progressViewStyle<S>(S) -> some View
Sets the style for progress views in this view.
protocol ProgressViewStyle
A type that applies standard interaction behavior to all progress views within a view hierarchy.
struct ProgressViewStyleConfiguration
The properties of a progress view instance.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is GaugeStyle
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


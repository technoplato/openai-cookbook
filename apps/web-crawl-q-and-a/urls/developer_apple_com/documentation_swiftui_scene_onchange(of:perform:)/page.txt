https://developer.apple.com/documentation/swiftui/scene/onchange(of:perform:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
App extensions
Search
Toolbars
Modal presentations
Navigation
Documents
Immersive spaces
Deprecated symbols
M
func modelContainer(for: PersistentModel.Type, inMemory: Bool, isAutosaveEnabled: Bool, isUndoEnabled: Bool, onSetup: (Result<ModelContainer, Error>) -> Void) -> some Scene
Beta
M
func modelContainer(for: [PersistentModel.Type], inMemory: Bool, isAutosaveEnabled: Bool, isUndoEnabled: Bool, onSetup: (Result<ModelContainer, Error>) -> Void) -> some Scene
Beta
M
func modelContainer(ModelContainer) -> some Scene
Beta
M
func modelContext(ModelContext) -> some Scene
Beta
Configuring a data model
M
func windowToolbarStyle<S>(S) -> some Scene
M
func windowStyle<S>(S) -> some Scene
Documentation
Open Menu
Swift
Instance Method
onChange(of:perform:)
Adds an action to perform when the given value changes.
iOS 14.0–17.0 Deprecated
iPadOS 14.0–17.0 Deprecated
macOS 11.0–14.0 Deprecated
Mac Catalyst 14.0–17.0 Deprecated
tvOS 14.0–17.0 Deprecated
watchOS 7.0–10.0 Deprecated
visionOS 1.0–1.0 Deprecated
func onChange<V>(
    of value: V,
    perform action: @escaping (V) -> Void
) -> some Scene where V : Equatable
Deprecated
Use onChange(of:initial:_:) or onChange(of:initial:_:) instead. The trailing closure in each case takes either zero or two input parameters, compared to this method which takes one.
Be aware that the replacements have slightly different behvavior. This modifier’s closure captures values that represent the state before the change. The new modifiers capture values that correspond to the new state. The new behavior makes it easier to perform updates that rely on values other than the one that caused the modifier’s closure to run.
Parameters
value
The value to check when determining whether to run the closure. The value must conform to the Equatable protocol.
action
A closure to run when the value changes. The closure provides a single newValue parameter that indicates the changed value.
Return Value
A scene that triggers an action in response to a change.
Discussion
Use this modifier to trigger a side effect when a value changes, like the value associated with an Environment value or a Binding. For example, you can clear a cache when you notice that a scene moves to the background:
struct MyScene: Scene {
    @Environment(\.scenePhase) private var scenePhase
    @StateObject private var cache = DataCache()


    var body: some Scene {
        WindowGroup {
            MyRootView()
        }
        .onChange(of: scenePhase) { newScenePhase in
            if newScenePhase == .background {
                cache.empty()
            }
        }
    }
}
The system may call the action closure on the main actor, so avoid long-running tasks in the closure. If you need to perform such tasks, detach an asynchronous background task:
.onChange(of: scenePhase) { newScenePhase in
    if newScenePhase == .background {
        Task.detached(priority: .background) {
            // ...
        }
    }
}
The system passes the new value into the closure. If you need the old value, capture it in the closure.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is onChange(of:perform:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


https://developer.apple.com/documentation/swiftui/shaderlibrarySkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
Lists
Custom layout
Layout adjustments
Layout fundamentals
View layout
S
Anchor
S
UnitPoint3D
S
ShaderFunction
Beta
S
Shader
Beta
M
func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View
Beta
M
func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View
Beta
M
func colorEffect(Shader, isEnabled: Bool) -> some View
Beta
Accessing Metal shaders
S
PhysicalMetricsConverter
Beta
S
PhysicalMetric
Beta
Documentation
Open Menu
Swift
Structure
ShaderLibrary
A Metal shader library.
iOS 17.0+ Beta
iPadOS 17.0+ Beta
macOS 14.0+ Beta
Mac Catalyst 17.0+ Beta
tvOS 17.0+ Beta
visionOS 1.0+ Beta
@dynamicMemberLookup
struct ShaderLibrary
Topics
Getting the default shader library
static let `default`: ShaderLibrary
The default shader library of the main (i.e. app) bundle.
static func bundle(Bundle) -> ShaderLibrary
Returns the default shader library of the specified bundle.
Creating a shader library
init(url: URL)
Creates a new Metal shader library from the contents of url, which must be the location of precompiled Metal library. Functions compiled from the returned library will only be cached as long as the returned library exists.
init(data: Data)
Creates a new Metal shader library from data, which must be the contents of precompiled Metal library. Functions compiled from the returned library will only be cached as long as the returned library exists.
Access shader functions
static subscript(dynamicMember _: String) -> ShaderFunction
Returns a new shader function representing the stitchable MSL function called name in the default shader library.
Subscripts
subscript(dynamicMember _: String) -> ShaderFunction
Returns a new shader function representing the stitchable MSL function in the library called name.
Relationships
Conforms To
Equatable
Sendable
See Also
Accessing Metal shaders
func colorEffect(Shader, isEnabled: Bool) -> some View
Returns a new view that applies shader to self as a filter effect on the color of each pixel.
Beta
func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View
Returns a new view that applies shader to self as a geometric distortion effect on the location of each pixel.
Beta
func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View
Returns a new view that applies shader to self as a filter on the raster layer created from self.
Beta
struct Shader
A reference to a function in a Metal shader library, along with its bound uniform argument values.
Beta
struct ShaderFunction
A reference to a function in a Metal shader library.
Beta
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is ShaderLibrary
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright Â© 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


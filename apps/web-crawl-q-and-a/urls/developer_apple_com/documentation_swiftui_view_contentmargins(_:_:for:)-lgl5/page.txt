https://developer.apple.com/documentation/swiftui/view/contentmargins(_:_:for:)-lgl5Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
S
HorizontalAlignment
S
VerticalAlignment
S
DepthAlignment
Beta
r
P
AlignmentID
S
ViewDimensions
Setting margins
M
func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View
Beta
M
func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View
Beta
func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View
func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View
Reacting to interface characteristics
P
var isLuminanceReduced: Bool
P
var displayScale: CGFloat
P
var pixelLength: CGFloat
P
var horizontalSizeClass: UserInterfaceSizeClass?
P
var verticalSizeClass: UserInterfaceSizeClass?
E
UserInterfaceSizeClass
Documentation
Open Menu
Swift
Instance Method
contentMargins(_:_:for:)
Configures the content margin for a provided placement.
iOS 17.0+ Beta
iPadOS 17.0+ Beta
macOS 14.0+ Beta
Mac Catalyst 17.0+ Beta
tvOS 17.0+ Beta
watchOS 10.0+ Beta
visionOS 1.0+ Beta
func contentMargins(
    _ edges: Edge.Set = .all,
    _ insets: EdgeInsets,
    for placement: ContentMarginPlacement = .automatic
) -> some View
Parameters
edges
The edges to add the margins to.
insets
The amount of margins to add.
placement
Where the margins should be added.
Discussion
Use this modifier to customize the content margins of different kinds of views. For example, you can use this modifier to customize the margins of scrollable views like ScrollView. In the following example, the scroll view will automatically inset its content by the safe area plus an additional 20 points on the leading and trailing edge.
ScrollView(.horizontal) {
    // ...
}
.contentMargins(.horizontal, 20.0)
You can provide a ContentMarginPlacement to target specific parts of a view to customize. For example, provide a ContentMargingPlacement/scrollContent placement to inset the content of a TextEditor without affecting the insets of its scroll indicators.
TextEditor(text: $text)
    .contentMargins(.horizontal, 20.0, for: .scrollContent)
Similarly, you can customize the insets of scroll indicators separately from scroll content. Consider doing this when applying a custom clip shape that may clip the indicators.
ScrollView {
    // ...
}
.clipShape(.rect(cornerRadius: 20.0))
.contentMargins(10.0, for: .scrollIndicators)
When applying multiple contentMargins modifiers, modifiers with the same placement will override modifiers higher up in the view hierarchy.
See Also
Setting margins
func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View
Configures the content margin for a provided placement.
Beta
func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View
Configures the content margin for a provided placement.
Beta
struct ContentMarginPlacement
The placement of margins.
Beta
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is contentMargins(_:_:for:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright Â© 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


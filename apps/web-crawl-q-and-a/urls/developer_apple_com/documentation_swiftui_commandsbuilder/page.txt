https://developer.apple.com/documentation/swiftui/commandsbuilderSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
S
SidebarCommands
Getting built-in command groups
S
CommandGroupPlacement
M
static func buildExpression<Content>(Content) -> Content
M
static func buildLimitedAvailability<C>(C) -> some Commands
M
static func buildIf<C>(C?) -> C?
M
static func buildEither<T, F>(second: F) -> _ConditionalContent<T, F>
static func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7, C8, C9>(C0, C1, C2, C3, C4, C5, C6, C7, C8, C9) -> some Commands
static func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7, C8>(C0, C1, C2, C3, C4, C5, C6, C7, C8) -> some Commands
S
CommandGroup
S
CommandMenu
r
P
Commands
M
func commandsReplaced<Content>(content: () -> Content) -> some Scene
M
func commandsRemoved() -> some Scene
M
func commands<Content>(content: () -> Content) -> some Scene
Defining commands
M
func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View
Documentation
Open Menu
Swift
Structure
CommandsBuilder
Constructs command sets from multi-expression closures. Like ViewBuilder, it supports up to ten expressions in the closure body.
iOS 14.0+
iPadOS 14.0+
macOS 11.0+
Mac Catalyst 14.0+
visionOS 1.0+ Beta
@resultBuilder
struct CommandsBuilder
Topics
Building content
static func buildBlock() -> EmptyCommands
Builds an empty command set from a block containing no statements.
static func buildBlock<C>(C) -> C
Passes a single command group written as a child group through modified.
static func buildBlock<C0, C1>(C0, C1) -> some Commands
static func buildBlock<C0, C1, C2>(C0, C1, C2) -> some Commands
static func buildBlock<C0, C1, C2, C3>(C0, C1, C2, C3) -> some Commands
static func buildBlock<C0, C1, C2, C3, C4>(C0, C1, C2, C3, C4) -> some Commands
static func buildBlock<C0, C1, C2, C3, C4, C5>(C0, C1, C2, C3, C4, C5) -> some Commands
static func buildBlock<C0, C1, C2, C3, C4, C5, C6>(C0, C1, C2, C3, C4, C5, C6) -> some Commands
static func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7>(C0, C1, C2, C3, C4, C5, C6, C7) -> some Commands
static func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7, C8>(C0, C1, C2, C3, C4, C5, C6, C7, C8) -> some Commands
static func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7, C8, C9>(C0, C1, C2, C3, C4, C5, C6, C7, C8, C9) -> some Commands
Building conditionally
static func buildEither<T, F>(first: T) -> _ConditionalContent<T, F>
Provides support for “if” statements in multi-statement closures, producing conditional content for the “then” branch.
static func buildEither<T, F>(second: F) -> _ConditionalContent<T, F>
Provides support for “if-else” statements in multi-statement closures, producing conditional content for the “else” branch.
static func buildIf<C>(C?) -> C?
Provides support for “if” statements in multi-statement closures, producing an optional value that is visible only when the condition evaluates to true.
static func buildLimitedAvailability<C>(C) -> some Commands
Provides support for “if” statements with #available() clauses in multi-statement closures, producing conditional content for the “then” branch, i.e. the conditionally-available branch.
static func buildExpression<Content>(Content) -> Content
Builds an expression within the builder.
Relationships
Conforms To
Sendable
See Also
Defining commands
func commands<Content>(content: () -> Content) -> some Scene
Adds commands to the scene.
func commandsRemoved() -> some Scene
Removes all commands defined by the modified scene.
func commandsReplaced<Content>(content: () -> Content) -> some Scene
Replaces all commands defined by the modified scene with the commands from the builder.
protocol Commands
Conforming types represent a group of related commands that can be exposed to the user via the main menu on macOS and key commands on iOS.
struct CommandMenu
Command menus are stand-alone, top-level containers for controls that perform related, app-specific commands.
struct CommandGroup
Groups of controls that you can add to existing command menus.
struct CommandGroupPlacement
The standard locations that you can place new command groups relative to.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is CommandsBuilder
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


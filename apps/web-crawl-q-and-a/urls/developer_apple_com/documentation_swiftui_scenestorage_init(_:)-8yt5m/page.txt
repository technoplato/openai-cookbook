https://developer.apple.com/documentation/swiftui/scenestorage/init(_:)-8yt5mSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
Drawing and graphics
Shapes
Menus and commands
Controls and indicators
Images
Text input and output
Animations
M
init(String)
M
init(String)
M
init(String)
M
init(String)
M
init(String)
M
init<R>(String)
M
init(String)
Storing an optional value
Documentation
Open Menu
Swift
Initializer
init(_:)
Creates a property that can save and restore an Optional string, transforming it to an Optional RawRepresentable data type.
iOS 15.0+
iPadOS 15.0+
macOS 12.0+
Mac Catalyst 15.0+
tvOS 15.0+
watchOS 8.0+
visionOS 1.0+ Beta
init<R>(_ key: String) where Value == R?, R : RawRepresentable, R.RawValue == String
Parameters
key
a key used to save and restore the value.
Discussion
Defaults to nil if there is no restored value
A common usage is with enumerations:
enum MyEnum: String {
    case a
    case b
    case c
}
struct MyView: View {
    @SceneStorage("MyEnumValue") private var value: MyEnum?
    var body: some View { ... }
}
See Also
Storing an optional value
init(String)
Creates a property that can save and restore an Optional string.
Available when Value conforms to ExpressibleByNilLiteral.
init<R>(String)
Creates a property that can save and restore an Optional integer, transforming it to an Optional RawRepresentable data type.
init(String)
Creates a property that can save and restore an Optional double.
Available when Value conforms to ExpressibleByNilLiteral.
init(String)
Creates a property that can save and restore an Optional boolean.
Available when Value conforms to ExpressibleByNilLiteral.
init(String)
Creates a property that can save and restore an Optional data.
Available when Value conforms to ExpressibleByNilLiteral.
init(String)
Creates a property that can save and restore an Optional URL.
Available when Value conforms to ExpressibleByNilLiteral.
init(String)
Creates a property that can save and restore an Optional integer.
Available when Value conforms to ExpressibleByNilLiteral.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is init(_:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright Â© 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


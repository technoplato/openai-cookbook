https://developer.apple.com/documentation/realitykit/blendtreeanimationSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func repeated(count: TimeInterval) -> Self
P
var fillMode: AnimationFillMode
P
var repeatMode: AnimationRepeatMode
Repeating Animation Playback
M
func trimmed(start: TimeInterval?, end: TimeInterval?, duration: TimeInterval?) -> Self
P
var trimEnd: TimeInterval?
P
var trimStart: TimeInterval?
init(BlendTreeNode, name: String, isAdditive: Bool, bindTarget: BindTarget?, blendLayer: Int32, repeatMode: AnimationRepeatMode, fillMode: AnimationFillMode, trimStart: TimeInterval?, trimEnd: TimeInterval?, trimDuration: TimeInterval?, offset: TimeInterval, delay: TimeInterval, speed: Float)
S
OrbitAnimation
S
SampledAnimation
S
FromToByAnimation
Animating an Entity
P
var defaultAnimationClock: CMClockOrTimebase
M
func playAnimation(named: String, transitionDuration: TimeInterval, startsPaused: Bool, recursive: Bool) -> AnimationPlaybackController
Deprecated
M
func playAnimation(AnimationResource, transitionDuration: TimeInterval, startsPaused: Bool) -> AnimationPlaybackController
M
func stopAllAnimations(recursive: Bool)
Documentation
Open Menu
Swift
Structure
BlendTreeAnimation
A collection of animations on the same property that the framework blends to a single animation.
iOS 15.0+
iPadOS 15.0+
macOS 12.0+
Mac Catalyst 15.0+
visionOS 1.0+ Beta
struct BlendTreeAnimation<Value> where Value : AnimatableData
Overview
This structure provides a way to form a single animation by mixing several other animations together. You define a source node for each animation, and a weight, which determines how much each individual animation takes effect in the resulting animation.
To create the blended animation, you define a blend tree that sprouts from root, which consists of one or more blend-tree nodes (BlendTreeNode). Each node may be one of the following conforming types:
BlendTreeBlendNode, which branches the tree for every element in sources
BlendTreeSourceNode, which defines one of the animations to blend via its source property
Because source nodes reference no other nodes, they represent leaf nodes in the tree.
Blending Two Skeletal Movements to a Single Movement
The following animation plays a sampling of the animations named anim1 and anim2. To fine-tune the interplay between the two animations, the code sets a blend weight for each animation. The weight of 0.25 for anim1 determines that the first animation’s behavior is 25% prominent in the final result. The anim2 weight is 0.75, as the cumulative blend weight across all animations in the tree needs to equal 1. This determines that the second animation influences 75% of the visual behavior of the blended animation.
let anim1 = FromToByAnimation<JointTransforms>(
    name: "anim1",
    from: JointTransforms([Transform(scale: SIMD3<Float>(1, 2, 3),
    rotation: simd_quatf(ix: 5, iy: 6, iz: 7, r: 8),
    translation: SIMD3<Float>(10, 20, 30))]),
    to: JointTransforms([Transform(scale: SIMD3<Float>(11, 21, 31),
    rotation: simd_quatf(ix: 50, iy: 60, iz: 70, r: 80),
    translation: SIMD3<Float>(100, 200, 300))]),
    duration: 1.0)


let anim2 = FromToByAnimation<JointTransforms>(
    name: "anim2",
    from: JointTransforms([Transform(scale: SIMD3<Float>(10, 20, 30),
    rotation: simd_quatf(ix: 4, iy: 5, iz: 5, r: 7),
    translation: SIMD3<Float>(100, 200, 300))]),
    to: JointTransforms([Transform(scale: SIMD3<Float>(110, 210, 310),
    rotation: simd_quatf(ix: 500, iy: 60, iz: 70, r: 80),
    translation: SIMD3<Float>(1000, 2000, 3000))]),
    duration: 10.0)


let blendTree = BlendTreeAnimation<JointTransforms>(
    blend(
        BlendTreeSourceNode(
            source: anim1,
            name: "anim1",
            weight: .value(0.25)),
        BlendTreeSourceNode(
            source: anim2,
            name: "anim2",
            weight: .value(0.75)),
        name: "blend"),
    name: "blendTree",
    bindTarget: .parameter("bar")
)
Tip
To modify the weights for each frame, create a source node with a dynamic BlendWeight, such as with the BlendWeight.bindTarget(_:defaultWeight:) or BlendWeight.parameter(_:defaultWeight:) enumeration cases.
Topics
Creating an Animation
init(BlendTreeNode, name: String, isAdditive: Bool, bindTarget: BindTarget?, blendLayer: Int32, repeatMode: AnimationRepeatMode, fillMode: AnimationFillMode, trimStart: TimeInterval?, trimEnd: TimeInterval?, trimDuration: TimeInterval?, offset: TimeInterval, delay: TimeInterval, speed: Float)
Creates a unique animation from a combination of other animations in the form of a tree.
Configuring the Animation
var root: BlendTreeNode
The first node in a tree of animations.
var name: String
A textual name for the animation.
var bindTarget: BindTarget
A textual name that identifies the particular property that animates.
var blendLayer: Int32
The order in which the framework composites the animation.
var isAdditive: Bool
A Boolean value that indicates whether the animation builds on the current state of the target entity or resets the state before running.
Timing the Animation
var speed: Float
A factor that increases or decreases the animation’s rate of playback.
var delay: TimeInterval
An amount of time that lapses before the animation plays.
var duration: TimeInterval
The total playback time of the animation.
var offset: TimeInterval
The time, in seconds, at which the animation begins within the duration.
var trimDuration: TimeInterval?
An optional duration that overrides the calculated duration.
var trimStart: TimeInterval?
The optional time, in seconds, at which the source animation plays.
var trimEnd: TimeInterval?
The optional time, in seconds, at which the source animation stops.
func trimmed(start: TimeInterval?, end: TimeInterval?, duration: TimeInterval?) -> Self
Edits the animation duration according to the specified time.
Repeating Animation Playback
var repeatMode: AnimationRepeatMode
An option that determines how the animation repeats.
var fillMode: AnimationFillMode
An option that determines which data displays outside of the normal duration.
func repeated(count: TimeInterval) -> Self
Repeats an animation the number of times specified by an irrational number.
func repeated(count: Int) -> Self
Repeats an animation the number of times specified by a whole number.
func repeatingForever() -> Self
Repeats the animation infinitely.
Default Implementations
API Reference
AnimationDefinition Implementations
Relationships
Conforms To
AnimationDefinition
See Also
Animating an Entity
struct FromToByAnimation
An animation that starts, stops, or increments by a specific value.
struct SampledAnimation
An animation that cycles through a series of frames at a constant interval.
struct OrbitAnimation
An animation that revolves an entity around its origin.
protocol BlendTreeNode
An interface for a node that’s a member of a blend tree.
struct BlendTreeBlendNode
A source node for an animation that mixes several animations to form a single animation.
struct BlendTreeInvalidNode
A blend tree node that’s internal only or sources from an invalid definition.
struct BlendTreeSourceNode
A blend node that contains an animation.
enum BlendWeight
A numerical representation of the impact an animation has on a scene or entity.
enum TweenMode
Options that determine whether an animation switches between frames gradually or abruptly.
var bindableValues: BindableValuesReference
struct BindPath
The components of a target’s path that refer to the animation properties of a nested scene or entity.
enum BindTarget
A reference to a particular scene, entity, or property that animates.
protocol BindableData
An opaque base protocol for bindable data objects.
struct BindableValue
The value of a bindable target.
struct BindableValuesReference
A reference to a bindable value of an animation.
struct ParameterSet
Represents a reference to the parameters for a particular entity.
var parameters: Entity.ParameterSet
Represents a reference to the parameters for a particular entity.
struct InternalBindPath
A bind target for framework-provided properties.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is BlendTreeAnimation
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


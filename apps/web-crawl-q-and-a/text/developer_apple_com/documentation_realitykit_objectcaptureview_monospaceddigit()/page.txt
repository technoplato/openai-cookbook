https://developer.apple.com/documentation/realitykit/objectcaptureview/monospaceddigit()Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View
M
func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View
M
func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View
M
func navigationDocument(URL) -> some View
M
func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View
M
func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View
M
func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View
func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View
M
func monospaced(Bool) -> some View
M
func modifier<T>(T) -> ModifiedContent<Self, T>
M
func minimumScaleFactor(CGFloat) -> some View
M
func menuStyle<S>(S) -> some View
M
func menuOrder(MenuOrder) -> some View
M
func menuIndicator(Visibility) -> some View
M
func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View
M
func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View
Documentation
Open Menu
Swift
Instance Method
monospacedDigit()
Modifies the fonts of all child views to use fixed-width digits, if possible, while leaving other characters proportionally spaced.
RealityKit
SwiftUI
iOS 15.0+
iPadOS 15.0+
macOS 12.0+
Mac Catalyst 15.0+
tvOS 15.0+
watchOS 8.0+
visionOS 1.0+ Beta
func monospacedDigit() -> some View
Return Value
A view whose child views’ fonts use fixed-width numeric characters, while leaving other characters proportionally spaced.
Discussion
Using fixed-width digits allows you to easily align numbers of the same size in a table-like arrangement. This feature is also known as “tabular figures” or “tabular numbers.”
This modifier only affects numeric characters, and leaves all other characters unchanged.
The following example shows the effect of monospacedDigit() on multiple child views. The example consists of two VStack views inside an HStack. Each VStack contains two Button views, with the second VStack applying the monospacedDigit() modifier to its contents. As a result, the digits in the buttons in the trailing VStack are the same width, which in turn gives the buttons equal widths.
var body: some View {
    HStack(alignment: .top) {
        VStack(alignment: .leading) {
            Button("Delete 111 messages") {}
            Button("Delete 222 messages") {}
        }
        VStack(alignment: .leading) {
            Button("Delete 111 messages") {}
            Button("Delete 222 messages") {}
        }
        .monospacedDigit()
    }
    .padding()
    .navigationTitle("monospacedDigit() Child Views")
}
If a child view’s base font doesn’t support fixed-width digits, the font remains unchanged.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is monospacedDigit()
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


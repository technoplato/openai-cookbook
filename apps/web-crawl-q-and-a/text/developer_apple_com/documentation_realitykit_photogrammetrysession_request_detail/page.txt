https://developer.apple.com/documentation/realitykit/photogrammetrysession/request/detailSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
P
var hashValue: Int
Comparing Values
RawRepresentable Implementations
Equatable Implementations
Default Implementations
E
case custom
Beta
Enumeration Cases
E
case bounds
E
case modelEntity(detail: PhotogrammetrySession.Request.Detail, geometry: PhotogrammetrySession.Request.Geometry?)
E
case modelFile(url: URL, detail: PhotogrammetrySession.Request.Detail, geometry: PhotogrammetrySession.Request.Geometry?)
Specifying the Output
M
init(modelFile: URL)
Creating the Request
E
PhotogrammetrySession.Request
Creating Requests
Documentation
Open Menu
Swift
Enumeration
PhotogrammetrySession.Request.Detail
Supported levels of detail for a request.
iOS 17.0+ Beta
iPadOS 17.0+ Beta
macOS 12.0+
Mac Catalyst 15.0+
enum Detail
Overview
On iOS, only one detail level – .reduced – is currently supported. This level is optimized for generation and viewing entirely on mobile devices.
On macOS, RealityKit object creation can generate models at different levels of detail. Higher levels of detail may take longer to create, require more memory and processing power to generate, and create objects with more complex geometry and texture requirements.
Set a Level of Complexity
Each detail level corresponds to an object of a specific size and complexity. Here’s the expected final size of the generated object from each detail level.
Detail Level
Triangles
Estimated File Size
.preview
<25k
≈5MB
.reduced
<50k
≈10MB
.medium
<100k
≈30MB
.full
<250k
≈100MB
.raw
<30M
Varies
.custom
Varies
Varies
Create Texture Maps
Each detail level produces a 3D object with texture maps. The higher the complexity level, the larger the generated texture maps, and the more memory the system requires to display those objects in an AR scene.
RealityKit creates five texture maps at the .full detail level: a single diffuse map, normal map, ambient occlusion map, roughness map, and displacement map. For .preview, .reduced, and .medium detail levels, it produces just the single diffuse, normal and ambient occlusion maps.
When producing a model at the .raw detail level, only diffuse texture maps are created, but RealityKit may create up to 16 diffuse maps, each covering different parts of the model. Raw models are produced at the highest resolution possible from the source images, so they don’t benefit from having the other types of texture maps, which are used to supplement a low-resolution model with data from a higher-resolution version of the same model.
Raw models aren’t suitable for use in an AR scene and you should only use this setting if you plan to export the model to a 3D software package.
Custom detail level can be used to specify several parameters of the output mesh and textures to provide more control over the produced assets than the preset levels.
Here are the texture map sizes generated for each detail level and the amount of texture memory the uncompressed textures use at runtime.
Detail Level
Texture Size
Texture Memory Required
.preview
1024 x 1024
10.666667 MB
.reduced
2048 x 2048
42.666667 MB
.medium
4096 x 4096
170.666667 MB
.full
8192 x 8192
853.33333 MB
.raw
8192 x 8192 (multiple)
Varies
.custom
Varies
Varies
Topics
Specifying a Level of Detail
case preview
A fast, low-quality object for previewing the final result.
case reduced
A mobile-quality object with low resource requirements.
case medium
A medium-quality object with moderate resource requirements.
case full
A high-quality object with significant resource requirements.
case raw
The raw-created object at the highest possible resolution.
Using Enumeration Raw Values
var rawValue: Int
The corresponding value of the raw type.
typealias RawValue
The datatype used for raw values.
init?(rawValue: Int)
Initializes a visualization mode from a raw string value.
Comparing Values
var hashValue: Int
The hashed value.
Available when Self conforms to Hashable and RawValue conforms to Hashable.
func hash(into: inout Hasher)
Hashes the enumeration value by feeding it into the given hash function.
Available when Self conforms to Hashable and RawValue conforms to Hashable.
static func != (Self, Self) -> Bool
Indicates whether two enumeration values aren’t equal.
Enumeration Cases
case custom
Specifies that the specific CustomDetailSpecification set in the customDetailSpecification should be used. The CustomDetailSpecification will be applied to every .custom Detail request in this session. It has no effect on the other levels.
Beta
Default Implementations
API Reference
Equatable Implementations
API Reference
RawRepresentable Implementations
Relationships
Conforms To
Equatable
Hashable
RawRepresentable
See Also
Specifying the Output
case modelFile(url: URL, detail: PhotogrammetrySession.Request.Detail, geometry: PhotogrammetrySession.Request.Geometry?)
An object-creation request saved to a USDZ file or a folder (for OBJ output).
case modelEntity(detail: PhotogrammetrySession.Request.Detail, geometry: PhotogrammetrySession.Request.Geometry?)
An object-creation request stored in-memory for immediate display.
case bounds
An object-creation request that returns a box the same size as the created model.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is PhotogrammetrySession.Request.Detail
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


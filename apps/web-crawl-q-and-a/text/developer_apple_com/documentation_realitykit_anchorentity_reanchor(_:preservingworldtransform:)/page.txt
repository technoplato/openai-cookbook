https://developer.apple.com/documentation/realitykit/anchorentity/reanchor(_:preservingworldtransform:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
Collision detection
Body and face tracking
Transforms: Position, Orientation, and Scale
Runtime modifications
r
P
RealityCoordinateSpace
Beta
Animation
Audio
P
var anchorIdentifier: UUID?
S
AnchoringComponent
P
var anchoring: AnchoringComponent
Configuring the Anchor
M
convenience init(world: SIMD3<Float>)
M
convenience init(world: float4x4)
M
convenience init(raycastResult: ARRaycastResult)
M
convenience init(plane: AnchoringComponent.Target.Alignment, classification: AnchoringComponent.Target.Classification, minimumBounds: SIMD2<Float>)
Documentation
Open Menu
Swift
Instance Method
reanchor(_:preservingWorldTransform:)
Changes the entity’s anchoring, preserving either the world transform or the local transform.
iOS 13.0+
iPadOS 13.0+
macOS 10.15+
Mac Catalyst 14.0+
visionOS 1.0+ Beta
visionOS 1.0+ Beta
@MainActor
func reanchor(
    _ target: AnchoringComponent.Target,
    preservingWorldTransform: Bool = true
)
Parameters
target
Describes how the entity should be anchored in AR.
Discussion
preservingWorldTransform: A Boolean you set to true to preserve the current world space position, or false to use the position relative to the previous anchor for the new anchor.
See Also
Configuring the Anchor
var anchoring: AnchoringComponent
struct AnchoringComponent
A description of how virtual content can be anchored to the real world.
var anchorIdentifier: UUID?
The identifier of the AR anchor with which the anchor entity is associated, or nil if it isn’t currently anchored.
protocol HasAnchoring
An interface that enables anchoring of virtual content to a real-world object in an AR scene.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is reanchor(_:preservingWorldTransform:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


https://developer.apple.com/documentation/realitykit/loadrequest/contains(where:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func tryLast(where: (Self.Output) throws -> Bool) -> Publishers.TryLastWhere<Self>
M
func last(where: (Self.Output) -> Bool) -> Publishers.LastWhere<Self>
M
func last() -> Publishers.Last<Self>
M
func tryFirst(where: (Self.Output) throws -> Bool) -> Publishers.TryFirstWhere<Self>
M
func first(where: (Self.Output) -> Bool) -> Publishers.FirstWhere<Self>
M
func first() -> Publishers.First<Self>
Selecting Specific Elements
func prepend(Self.Output...) -> Publishers.Concatenate<Publishers.Sequence<[Self.Output], Self.Failure>, Self>
func append(Self.Output...) -> Publishers.Concatenate<Self, Publishers.Sequence<[Self.Output], Self.Failure>>
M
func contains(Self.Output) -> Publishers.Contains<Self>
Applying Matching Criteria to Elements
M
func tryMin(by: (Self.Output, Self.Output) throws -> Bool) -> Publishers.TryComparison<Self>
M
func min(by: (Self.Output, Self.Output) -> Bool) -> Publishers.Comparison<Self>
M
func min() -> Publishers.Comparison<Self>
M
func tryMax(by: (Self.Output, Self.Output) throws -> Bool) -> Publishers.TryComparison<Self>
M
func max(by: (Self.Output, Self.Output) -> Bool) -> Publishers.Comparison<Self>
M
func max() -> Publishers.Comparison<Self>
Documentation
Open Menu
Swift
Instance Method
contains(where:)
Publishes a Boolean value upon receiving an element that satisfies the predicate closure.
RealityKit
Combine
iOS 13.0+
iPadOS 13.0+
macOS 10.15+
Mac Catalyst 13.0+
tvOS 13.0+
watchOS 6.0+
visionOS 1.0+ Beta
func contains(where predicate: @escaping (Self.Output) -> Bool) -> Publishers.ContainsWhere<Self>
Parameters
predicate
A closure that takes an element as its parameter and returns a Boolean value that indicates whether the element satisfies the closure’s comparison logic.
Return Value
A publisher that emits the Boolean value true when the upstream publisher emits a matching value.
Discussion
Use Publisher/contains(where:) to find the first element in an upstream that satisfies the closure you provide. This operator consumes elements produced from the upstream publisher until the upstream publisher produces a matching element.
This operator is useful when the upstream publisher produces elements that don’t conform to Equatable.
In the example below, the Publisher/contains(where:) operator tests elements against the supplied closure and emits true for the first elements that’s greater than 4, and then finishes normally.
let numbers = [-1, 0, 10, 5]
numbers.publisher
    .contains {$0 > 4}
    .sink { print("\($0)") }


// Prints: "true"
See Also
Applying Matching Criteria to Elements
func contains(Self.Output) -> Publishers.Contains<Self>
Publishes a Boolean value upon receiving an element equal to the argument.
Available when Output conforms to Equatable.
func tryContains(where: (Self.Output) throws -> Bool) -> Publishers.TryContainsWhere<Self>
Publishes a Boolean value upon receiving an element that satisfies the throwing predicate closure.
func allSatisfy((Self.Output) -> Bool) -> Publishers.AllSatisfy<Self>
Publishes a single Boolean value that indicates whether all received elements pass a given predicate.
func tryAllSatisfy((Self.Output) throws -> Bool) -> Publishers.TryAllSatisfy<Self>
Publishes a single Boolean value that indicates whether all received elements pass a given error-throwing predicate.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is contains(where:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


https://developer.apple.com/documentation/realitykit/physicsmasspropertiesSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
Physics simulation
Physics interaction
Designing Scene Hierarchies for Efficient Physics Simulation
Handling Different-Sized Objects in Physics Simulations
S
PhysicsBodyComponent
C
PhysicsMaterialResource
S
PhysicsMotionComponent
E
PhysicsBodyMode
Default Implementations
Equatable Implementations
E
PhysicsSimulationEvents
Beta
E
ShapeResourceError
Beta
Entity compliance
r
P
HasPhysicsBody
r
P
HasPhysicsMotion
Documentation
Open Menu
Swift
Structure
PhysicsMassProperties
Mass properties of a physics body.
iOS 13.0+
iPadOS 13.0+
macOS 10.15+
Mac Catalyst 13.0+
visionOS 1.0+ Beta
struct PhysicsMassProperties
Topics
Using Default Mass Properties
static let `default`: PhysicsMassProperties
The default mass properties, equivalent to a unit sphere with a mass of 1 kilogram.
Creating Custom Mass Properties
init()
Creates a mass properties instance with default settings.
init(mass: Float, inertia: SIMD3<Float>, centerOfMass: (position: SIMD3<Float>, orientation: simd_quatf))
Creates a mass properties instance with the given settings.
init(shape: ShapeResource, density: Float)
Creates the mass properties for a solid shape with the specified density.
init(shape: ShapeResource, mass: Float)
Creates the mass properties for a solid shape with the specified mass.
Getting Mass Properties
var mass: Float
The mass in kilograms.
var inertia: SIMD3<Float>
The inertia in kilograms per square meter.
var centerOfMass: (position: SIMD3<Float>, orientation: simd_quatf)
The position of the center of mass and the orientation of the principal axes.
Comparing Mass Properties
static func == (PhysicsMassProperties, PhysicsMassProperties) -> Bool
Indicates whether two physics mass properties are equal.
static func != (Self, Self) -> Bool
Indicates whether two physics mass properties are not equal.
Default Implementations
API Reference
Equatable Implementations
Relationships
Conforms To
Equatable
See Also
Physics interaction
Designing Scene Hierarchies for Efficient Physics Simulation
Configure your RealityKit scenes to avoid performance bottlenecks.
Handling Different-Sized Objects in Physics Simulations
Set up a scene hierarchy for accurate physics simulations.
struct PhysicsBodyComponent
A component that defines an entity’s behavior in physics body simulations.
class PhysicsMaterialResource
Material properties, like friction, of a physically simulated object.
struct PhysicsMotionComponent
A component that controls the motion of the body in physics simulations.
enum PhysicsBodyMode
The ways that a physics body can move in response to physical forces.
enum PhysicsSimulationEvents
Beta
enum ShapeResourceError
Beta
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is PhysicsMassProperties
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


https://developer.apple.com/documentation/realitykit/objectcaptureview/persistentsystemoverlays(_:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func previewDevice(PreviewDevice?) -> some View
M
func previewContext<C>(C) -> some View
M
func presentationDragIndicator(Visibility) -> some View
M
func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View
M
func presentationDetents(Set<PresentationDetent>) -> some View
M
func presentationCornerRadius(CGFloat?) -> some View
M
func presentationContentInteraction(PresentationContentInteraction) -> some View
func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View
func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View
func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View
func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View
func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View
M
func paletteSelectionEffect(PaletteSelectionEffect) -> some View
M
func padding(Edge.Set, CGFloat?) -> some View
M
func padding(CGFloat) -> some View
M
func padding(EdgeInsets) -> some View
M
func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View
M
func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View
M
func overlay<V>(alignment: Alignment, content: () -> V) -> some View
M
func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View
Documentation
Open Menu
Swift
Instance Method
persistentSystemOverlays(_:)
Sets the preferred visibility of the non-transient system views overlaying the app.
RealityKit
SwiftUI
iOS 16.0+
iPadOS 16.0+
macOS 13.0+
Mac Catalyst 16.0+
tvOS 16.0+
watchOS 9.0+
visionOS 1.0+ Beta
func persistentSystemOverlays(_ visibility: Visibility) -> some View
Parameters
visibility
A value that indicates the visibility of the non-transient system views overlaying the app.
Discussion
Use this modifier if you would like to customise the immersive experience of your app by hiding or showing system overlays that may affect user experience. The following example hides every persistent system overlay.
struct ImmersiveView: View {
    var body: some View {
        Text("Maximum immersion")
            .persistentSystemOverlays(.hidden)
    }
}
Note that this modifier only sets a preference and, ultimately the system will decide if it will honour it or not.
These non-transient system views include:
The Home indicator
The SharePlay indicator
The Multi-task indicator and Picture-in-picture on iPad
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is persistentSystemOverlays(_:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright Â© 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


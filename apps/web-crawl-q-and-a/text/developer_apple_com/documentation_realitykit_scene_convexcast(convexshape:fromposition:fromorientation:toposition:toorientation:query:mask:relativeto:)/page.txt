https://developer.apple.com/documentation/realitykit/scene/convexcast(convexshape:fromposition:fromorientation:toposition:toorientation:query:mask:relativeto:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
static func != (Self, Self) -> Bool
static func == (Scene, Scene) -> Bool
Comparing Scenes
r
P
EventSource
r
P
Event
E
CollisionEvents
E
AudioEvents
func subscribe<E>(to: E.Type, on: (EventSource)?, componentType: (Component.Type)?, (E) -> Void) -> Cancellable
func publisher<E>(for: E.Type, on: (EventSource)?, componentType: (Component.Type)?) -> Scene.Publisher<E>
func convexCast(convexShape: ShapeResource, fromPosition: SIMD3<Float>, fromOrientation: simd_quatf, toPosition: SIMD3<Float>, toOrientation: simd_quatf, query: CollisionCastQueryType, mask: CollisionGroup, relativeTo: Entity?) -> [CollisionCastHit]
M
func raycast(from: SIMD3<Float>, to: SIMD3<Float>, query: CollisionCastQueryType, mask: CollisionGroup, relativeTo: Entity?) -> [CollisionCastHit]
M
func raycast(origin: SIMD3<Float>, direction: SIMD3<Float>, length: Float, query: CollisionCastQueryType, mask: CollisionGroup, relativeTo: Entity?) -> [CollisionCastHit]
Detecting Intersections
M
func performQuery(EntityQuery) -> QueryResult<Entity>
S
QueryPredicate
M
func findEntity(named: String) -> Entity?
Finding Entities
S
Scene.AnchorCollection
Documentation
Open Menu
Swift
Instance Method
convexCast(convexShape:fromPosition:fromOrientation:toPosition:toOrientation:query:mask:relativeTo:)
Performs a convex shape cast against all the geometry in the scene.
iOS 13.0+
iPadOS 13.0+
macOS 10.15+
Mac Catalyst 13.0+
visionOS 1.0+ Beta
@MainActor
func convexCast(
    convexShape: ShapeResource,
    fromPosition: SIMD3<Float>,
    fromOrientation: simd_quatf,
    toPosition: SIMD3<Float>,
    toOrientation: simd_quatf,
    query: CollisionCastQueryType = .all,
    mask: CollisionGroup = .all,
    relativeTo referenceEntity: Entity? = nil
) -> [CollisionCastHit]
Parameters
convexShape
The convex shape to cast.
Return Value
An array of collision cast hit results. Each hit indicates where the convex shape, starting at a given point and traveling in a given direction, collides with entities in the scene. To retrieve the hit entity from a returned CollisionCastHit, use the entity property.
Discussion
fromPosition: The starting position of convexShape relative to referenceEntity.
fromOrientation: The starting orientation of convexShape relative to referenceEntity.
toPosition: The ending position of convexShape relative to referenceEntity.
toOrientation: The ending orientation of convexShape relative to referenceEntity.
query: The query type.
mask: A collision mask that you can use to prevent collisions with certain objects.
referenceEntity: An entity that defines the frame of reference. The method returns results relative to this entity. Set to nil to use the world space origin (0, 0, 0).
For objects that intersect the convex shape at its starting position and orientation, the returned collision cast hit result’s position is (0, 0, 0) and the normal points in the opposite direction of the sweep.
See Also
Detecting Intersections
func raycast(origin: SIMD3<Float>, direction: SIMD3<Float>, length: Float, query: CollisionCastQueryType, mask: CollisionGroup, relativeTo: Entity?) -> [CollisionCastHit]
Performs a convex ray cast against all the geometry in the scene for a ray of a given origin, direction, and length.
func raycast(from: SIMD3<Float>, to: SIMD3<Float>, query: CollisionCastQueryType, mask: CollisionGroup, relativeTo: Entity?) -> [CollisionCastHit]
Performs a convex ray cast against all the geometry in the scene for a ray between two end points.
struct CollisionCastHit
A hit result of a collision cast.
enum CollisionCastQueryType
The kinds of ray and convex shape cast queries that you can make.
struct CollisionGroup
A bitmask used to define the collision group to which an entity belongs.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is convexCast(convexShape:fromPosition:fromOrientation:toPosition:toOrientation:query:mask:relativeTo:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


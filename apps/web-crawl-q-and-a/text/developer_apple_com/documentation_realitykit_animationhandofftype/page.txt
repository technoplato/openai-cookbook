https://developer.apple.com/documentation/realitykit/animationhandofftypeSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
r
P
BlendTreeNode
S
BlendTreeAnimation
Blend Trees
S
InternalBindPath
S
ParameterSet
S
BindableValuesReference
S
BindableValue
S
AnimationGroup
S
AnimationFillMode
r
P
AnimationDefinition
S
OrbitAnimation
S
AnimationView
S
AnimationTimingFunction
S
FromToByAnimation
S
SampledAnimation
Documentation
Open Menu
Swift
Structure
AnimationHandoffType
visionOS 1.0+ Beta
struct AnimationHandoffType
Topics
Operators
static func == (AnimationHandoffType, AnimationHandoffType) -> Bool
Returns a Boolean value indicating whether two values are equal.
Type Properties
static var compose: AnimationHandoffType
Adds in the new animation with existing animations and starts the new animation immediately. This type is used for additive animations. If the new animation is not additive then compose will add in the new animation and replace the existing animation.
static var `default`: AnimationHandoffType
Provides the default behavior to ensure backward compatibility. The default behavior is to perform a compose handoff if the layerId in the playAnimation() call is set to a non-zero value. If the layerId is set to 0 then a snapshot-and-replace (with applyToAllLayers = true) handoff is performed instead.
static var stop: AnimationHandoffType
Stops the specified animation.
Type Methods
static func replace(applyToAllLayers: Bool) -> AnimationHandoffType
Keeps playing the current animation during the transition time and uses the value from that animation as the blend value for the transition to the new animation.
static func snapshotAndReplace(applyToAllLayers: Bool) -> AnimationHandoffType
Immediately stops the current animation and uses the current value of that animation as the blend value for the transition to the new animation.
Default Implementations
API Reference
Equatable Implementations
Relationships
Conforms To
Equatable
See Also
Animation definitions
struct SampledAnimation
An animation that cycles through a series of frames at a constant interval.
struct FromToByAnimation
An animation that starts, stops, or increments by a specific value.
struct AnimationTimingFunction
The pacing of an animation transition.
struct AnimationView
An animation that represents a variation of another animation.
struct OrbitAnimation
An animation that revolves an entity around its origin.
protocol AnimationDefinition
The configuration, including target object, timeframe, and visual semantics, of an animation.
struct AnimationFillMode
Options that determine which animation frames display outside of the normal duration.
struct AnimationGroup
A collection of animations that play simultaneously.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is AnimationHandoffType
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright Â© 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


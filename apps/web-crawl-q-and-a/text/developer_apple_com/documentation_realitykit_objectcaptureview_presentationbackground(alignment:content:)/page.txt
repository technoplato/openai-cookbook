https://developer.apple.com/documentation/realitykit/objectcaptureview/presentationbackground(alignment:content:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func replaceDisabled(Bool) -> some View
M
func renameAction(() -> Void) -> some View
M
func renameAction(FocusState<Bool>.Binding) -> some View
M
func refreshable(action: () async -> Void) -> some View
M
func redacted(reason: RedactionReasons) -> some View
M
func projectionEffect(ProjectionTransform) -> some View
M
func progressViewStyle<S>(S) -> some View
func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View
func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View
M
func presentationBackground<S>(S) -> some View
M
func preferredColorScheme(ColorScheme?) -> some View
M
func preference<K>(key: K.Type, value: K.Value) -> some View
M
func position(x: CGFloat, y: CGFloat) -> some View
M
func position(CGPoint) -> some View
M
func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View
M
func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View
M
func pickerStyle<S>(S) -> some View
Documentation
Open Menu
Swift
Instance Method
presentationBackground(alignment:content:)
Sets the presentation background of the enclosing sheet to a custom view.
RealityKit
SwiftUI
iOS 16.4+
iPadOS 16.4+
macOS 13.3+
Mac Catalyst 16.4+
tvOS 16.4+
watchOS 9.4+
visionOS 1.0+ Beta
func presentationBackground<V>(
    alignment: Alignment = .center,
    @ViewBuilder content: () -> V
) -> some View where V : View
Parameters
alignment
The alignment that the modifier uses to position the implicit ZStack that groups the background views. The default is Alignment/center.
content
The view to use as the background of the presentation.
Discussion
The following example uses a yellow view as the sheet background:
struct ContentView: View {
    @State private var showSettings = false


    var body: some View {
        Button("View Settings") {
            showSettings = true
        }
        .sheet(isPresented: $showSettings) {
            SettingsView()
                .presentationBackground {
                    Color.yellow
                }
        }
    }
}
The presentationBackground(alignment:content:) modifier differs from the View/background(alignment:content:) modifier in several key ways. A presentation background:
Automatically fills the entire presentation.
Allows views behind the presentation to show through translucent areas of the content.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is presentationBackground(alignment:content:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright Â© 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


https://developer.apple.com/documentation/realitykit/orbitanimationSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func trimmed(start: TimeInterval?, end: TimeInterval?, duration: TimeInterval?) -> Self
P
var trimEnd: TimeInterval?
P
var trimStart: TimeInterval?
P
var trimDuration: TimeInterval?
P
var offset: TimeInterval
P
var duration: TimeInterval
P
var delay: TimeInterval
init(name: String, duration: TimeInterval, axis: SIMD3<Float>, startTransform: Transform, spinClockwise: Bool, orientToPath: Bool, rotationCount: Float, bindTarget: BindTarget?, blendLayer: Int32, repeatMode: AnimationRepeatMode, fillMode: AnimationFillMode, isAdditive: Bool, trimStart: TimeInterval?, trimEnd: TimeInterval?, trimDuration: TimeInterval?, offset: TimeInterval, delay: TimeInterval, speed: Float)
S
SampledAnimation
S
FromToByAnimation
Animating an Entity
P
var defaultAnimationClock: CMClockOrTimebase
M
func playAnimation(named: String, transitionDuration: TimeInterval, startsPaused: Bool, recursive: Bool) -> AnimationPlaybackController
Deprecated
M
func playAnimation(AnimationResource, transitionDuration: TimeInterval, startsPaused: Bool) -> AnimationPlaybackController
M
func stopAllAnimations(recursive: Bool)
M
func playAnimation(AnimationResource, transitionDuration: TimeInterval, blendLayerOffset: Int, separateAnimatedValue: Bool, startsPaused: Bool, clock: CMClockOrTimebase?) -> AnimationPlaybackController
Documentation
Open Menu
Swift
Structure
OrbitAnimation
An animation that revolves an entity around its origin.
iOS 15.0+
iPadOS 15.0+
macOS 12.0+
Mac Catalyst 15.0+
visionOS 1.0+ Beta
struct OrbitAnimation
Overview
This class moves an entity in a circular path by gradually adjusting its local transform. The animation sets the entity’s initial position with startTransform and rotates it around the point (0, 0, 0). The axis specifies which cartesian axis around which to rotate. The full orbit completes after duration lapses.
If the target entity contains child entities, the target entity orbits the children.
Revolve an Entity Around its Origin
The following code turns a model in a half circle, orbiting around the x-axis for 5 seconds.
let orbit = OrbitAnimation(name: "orbit",
    duration: 10.0,
    axis: SIMD3<Float>(x: 1.0, y: 0.0, z: 0.0),
    startTransform: Transform(scale: simd_float3(10,10,10),
    rotation: simd_quatf(ix: 10, iy: 20, iz: 20, r: 100),
    translation: simd_float3(11, 2, 3)),
    spinClockwise: false,
    orientToPath: true,
    rotationCount: 100.0,
    bindTarget: nil)


// Create an animation clip for just the second half of the orbit.
let trimmed = orbit.trimmed(start: 5.0, end: 10.0)
Topics
Creating an Animation
init(name: String, duration: TimeInterval, axis: SIMD3<Float>, startTransform: Transform, spinClockwise: Bool, orientToPath: Bool, rotationCount: Float, bindTarget: BindTarget?, blendLayer: Int32, repeatMode: AnimationRepeatMode, fillMode: AnimationFillMode, isAdditive: Bool, trimStart: TimeInterval?, trimEnd: TimeInterval?, trimDuration: TimeInterval?, offset: TimeInterval, delay: TimeInterval, speed: Float)
Creates an animation that revolves an entity around its origin.
Configuring the Animation
var startTransform: Transform
The pose of the orbiting object at the start of the animation.
var axis: SIMD3<Float>
A 3D vector that points in the direction of the axis around which to rotate.
var name: String
A textual name for the animation.
var bindTarget: BindTarget
A textual name that identifies the particular property that animates.
var blendLayer: Int32
The order in which the framework composites the animation.
var rotationCount: Float
The number of times to rotate the target entity before stopping.
var spinClockwise: Bool
A Boolean value that indicates whether the object orbits the center point in the clockwise direction.
var orientToPath: Bool
A Boolean value that indicates whether the orbiting object updates its orientation during the animation to orient itself along the rotation path.
var additive: Bool
A Boolean value that indicates whether the animation builds on the current state of the target entity or resets the state before running.
Timing the Animation
var speed: Float
A factor that changes the animation’s rate of playback.
var delay: TimeInterval
An amount of time that lapses before the animation plays.
var duration: TimeInterval
The elapsed time for one complete rotation.
var offset: TimeInterval
The time, in seconds, at which the animation begins within the duration.
var trimDuration: TimeInterval?
An optional duration that overrides the calculated duration.
var trimStart: TimeInterval?
The optional time, in seconds, at which the animation plays.
var trimEnd: TimeInterval?
The optional time, in seconds, at which the animation stops.
func trimmed(start: TimeInterval?, end: TimeInterval?, duration: TimeInterval?) -> Self
Edits the animation duration according to the specified time.
Repeating Animation Playback
var repeatMode: AnimationRepeatMode
An option that determines how the animation repeats.
var fillMode: AnimationFillMode
An option that determines which data displays outside of the normal duration.
func repeated(count: TimeInterval) -> Self
Repeats an animation the number of times specified by an irrational number.
func repeated(count: Int) -> Self
Repeats an animation the number of times specified by a whole number.
func repeatingForever() -> Self
Repeats the animation infinitely.
Default Implementations
API Reference
AnimationDefinition Implementations
Relationships
Conforms To
AnimationDefinition
See Also
Animating an Entity
struct FromToByAnimation
An animation that starts, stops, or increments by a specific value.
struct SampledAnimation
An animation that cycles through a series of frames at a constant interval.
struct BlendTreeAnimation
A collection of animations on the same property that the framework blends to a single animation.
protocol BlendTreeNode
An interface for a node that’s a member of a blend tree.
struct BlendTreeBlendNode
A source node for an animation that mixes several animations to form a single animation.
struct BlendTreeInvalidNode
A blend tree node that’s internal only or sources from an invalid definition.
struct BlendTreeSourceNode
A blend node that contains an animation.
enum BlendWeight
A numerical representation of the impact an animation has on a scene or entity.
enum TweenMode
Options that determine whether an animation switches between frames gradually or abruptly.
var bindableValues: BindableValuesReference
struct BindPath
The components of a target’s path that refer to the animation properties of a nested scene or entity.
enum BindTarget
A reference to a particular scene, entity, or property that animates.
protocol BindableData
An opaque base protocol for bindable data objects.
struct BindableValue
The value of a bindable target.
struct BindableValuesReference
A reference to a bindable value of an animation.
struct ParameterSet
Represents a reference to the parameters for a particular entity.
var parameters: Entity.ParameterSet
Represents a reference to the parameters for a particular entity.
struct InternalBindPath
A bind target for framework-provided properties.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is OrbitAnimation
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


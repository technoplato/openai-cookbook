https://developer.apple.com/documentation/realitykit/physicallybasedmaterial/specular-swift.propertySkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
T
PhysicallyBasedMaterial.TextureCoordinateTransform
S
MaterialParameterTypes.TextureCoordinateTransform
P
var secondaryTextureCoordinateTransform: PhysicallyBasedMaterial.TextureCoordinateTransform
P
var textureCoordinateTransform: PhysicallyBasedMaterial.TextureCoordinateTransform
Modifying Texture Coordinates
S
PhysicallyBasedMaterial.EmissiveColor
P
var emissiveColor: PhysicallyBasedMaterial.EmissiveColor
Creating Highlights
S
PhysicallyBasedMaterial.AmbientOcclusion
P
var ambientOcclusion: PhysicallyBasedMaterial.AmbientOcclusion
Using Ambient Occlusion
E
PhysicallyBasedMaterial.Blending
P
var blending: PhysicallyBasedMaterial.Blending
Handling Entity Transparency
S
PhysicallyBasedMaterial.Normal
Documentation
Open Menu
Swift
Instance Property
specular
The specular highlight applied to the entity.
iOS 15.0+
iPadOS 15.0+
macOS 12.0+
Mac Catalyst 15.0+
visionOS 1.0+ Beta
var specular: PhysicallyBasedMaterial.Specular { get set }
Discussion
In Physically Based Rendering (PBR), specular highlights primarily come from the object’s roughness value. RealityKit automatically renders materials that have a low roughness value with specular highlights based on the environment lighting and the shape of the entity. As a result, for most materials, you won’t need to specify a specular value when using PhysicallyBasedMaterial.
For some types of dielectric (nonmetallic) materials, like facet-cut glass or gems, PBR algorithms don’t create bright enough specular highlights using just roughness. To accurately simulate those types of materials, use the specular property to specify additional specular for the entity.
The following example demonstrates how to specify specular using a single value for the entire material:
material.specular = .init(floatLiteral: 0.8)
This example shows how to specify specular using a UV-mapped image texture:
if let specularResource = try? TextureResource.load(named:"entity_specular") {
    let specularMap = MaterialParameters.Texture(specularResource)
    material.specular = .init(texture: specularMap)
}
See Also
Creating Highlights
struct Specular
An object that defines the specular highlights of an entity.
var sheen: PhysicallyBasedMaterial.SheenColor?
The intensity of an entity’s sheen.
struct SheenColor
An object that defines the color of an entity’s sheen.
var clearcoat: PhysicallyBasedMaterial.Clearcoat
The transparent highlights that simulate a clear, shiny coating on an entity.
struct Clearcoat
An object that defines the intensity of an entity’s clear, shiny coating.
var clearcoatRoughness: PhysicallyBasedMaterial.ClearcoatRoughness
The degree to which an entity’s clear, shiny coating scatters light to create soft highlights.
struct ClearcoatRoughness
An object that defines the degree to which an entity’s clear, shiny coating scatters light to create soft highlights.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is specular
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


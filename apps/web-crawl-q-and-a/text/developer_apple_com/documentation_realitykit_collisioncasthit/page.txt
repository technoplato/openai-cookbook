https://developer.apple.com/documentation/realitykit/collisioncasthitSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
r
P
SynchronizationService
P
var synchronizationService: (SynchronizationService)?
Synchronizing Entities Between Devices
S
CollisionGroup
E
CollisionCastQueryType
Equatable Implementations
Default Implementations
M
func convexCast(convexShape: ShapeResource, fromPosition: SIMD3<Float>, fromOrientation: simd_quatf, toPosition: SIMD3<Float>, toOrientation: simd_quatf, query: CollisionCastQueryType, mask: CollisionGroup, relativeTo: Entity?) -> [CollisionCastHit]
M
func raycast(from: SIMD3<Float>, to: SIMD3<Float>, query: CollisionCastQueryType, mask: CollisionGroup, relativeTo: Entity?) -> [CollisionCastHit]
M
func raycast(origin: SIMD3<Float>, direction: SIMD3<Float>, length: Float, query: CollisionCastQueryType, mask: CollisionGroup, relativeTo: Entity?) -> [CollisionCastHit]
Detecting Intersections
M
func performQuery(EntityQuery) -> QueryResult<Entity>
S
QueryPredicate
M
func findEntity(named: String) -> Entity?
Finding Entities
Documentation
Open Menu
Swift
Structure
CollisionCastHit
A hit result of a collision cast.
iOS 13.0+
iPadOS 13.0+
macOS 10.15+
Mac Catalyst 13.0+
visionOS 1.0+ Beta
struct CollisionCastHit
Overview
You get a collection of collision cast hits from either the raycast(origin:direction:length:query:mask:relativeTo:) method, or the convexCast(convexShape:fromPosition:fromOrientation:toPosition:toOrientation:query:mask:relativeTo:) method. Each hit indicates where the ray or the convex shape, starting at a given point and traveling in a given direction, hit a particular entity in the scene.
The frame of reference for the position and normal of the hit depends on the reference entity parameter passed to the method that generated the hit. Pass nil as the reference to use world space.
Topics
Getting the Entity
var entity: Entity
The entity that was hit.
Characterizing the Collision Cast Hit
var position: SIMD3<Float>
The position of the hit.
var normal: SIMD3<Float>
The normal of the hit.
var distance: Float
The distance from the ray origin to the hit, or the convex shape travel distance.
Comparing Collision Cast Hits
static func == (CollisionCastHit, CollisionCastHit) -> Bool
Indicates whether two cast hits are equal.
static func != (Self, Self) -> Bool
Indicates whether two cast queries are not equal.
Structures
struct TriangleHit
Information returned when ray intersects a triangle mesh.
Beta
Instance Properties
var shapeIndex: Int
The index of the shape that was hit.
Beta
var triangleHit: CollisionCastHit.TriangleHit?
Optional triangle hit information. Only set when ray touches or intersects a triangle mesh.
Beta
Default Implementations
API Reference
Equatable Implementations
Relationships
Conforms To
Equatable
See Also
Detecting Intersections
func raycast(origin: SIMD3<Float>, direction: SIMD3<Float>, length: Float, query: CollisionCastQueryType, mask: CollisionGroup, relativeTo: Entity?) -> [CollisionCastHit]
Performs a convex ray cast against all the geometry in the scene for a ray of a given origin, direction, and length.
func raycast(from: SIMD3<Float>, to: SIMD3<Float>, query: CollisionCastQueryType, mask: CollisionGroup, relativeTo: Entity?) -> [CollisionCastHit]
Performs a convex ray cast against all the geometry in the scene for a ray between two end points.
func convexCast(convexShape: ShapeResource, fromPosition: SIMD3<Float>, fromOrientation: simd_quatf, toPosition: SIMD3<Float>, toOrientation: simd_quatf, query: CollisionCastQueryType, mask: CollisionGroup, relativeTo: Entity?) -> [CollisionCastHit]
Performs a convex shape cast against all the geometry in the scene.
enum CollisionCastQueryType
The kinds of ray and convex shape cast queries that you can make.
struct CollisionGroup
A bitmask used to define the collision group to which an entity belongs.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is CollisionCastHit
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright Â© 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


https://developer.apple.com/documentation/realitykit/entity/childcollection/starts(with:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func prefix(through: Self.Index) -> Self.SubSequence
M
func prefix(Int) -> Self.SubSequence
subscript(Int) -> Entity
Selecting Entities
M
func randomElement<T>(using: inout T) -> Self.Element?
M
func randomElement() -> Self.Element?
M
func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?
func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool
func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool
M
func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool
M
func elementsEqual<OtherSequence>(OtherSequence) -> Bool
Comparing Collections
M
func replaceAll<S>(S, preservingWorldTransforms: Bool)
M
func replaceAll([Entity], preservingWorldTransforms: Bool)
Replacing Entities
M
func removeAll(keepCapacity: Bool, preservingWorldTransforms: Bool)
M
func removeAll(preservingWorldTransforms: Bool)
Documentation
Open Menu
Swift
Instance Method
starts(with:)
Returns a Boolean value indicating whether the initial elements of the sequence are the same as the elements in another sequence.
RealityKit
Swift
iOS 13.0+
iPadOS 13.0+
macOS 10.15+
Mac Catalyst 13.0+
visionOS 1.0+ Beta
func starts<PossiblePrefix>(with possiblePrefix: PossiblePrefix) -> Bool where PossiblePrefix : Sequence, Self.Element == PossiblePrefix.Element
Available when Element conforms to Equatable.
Parameters
possiblePrefix
A sequence to compare to this sequence.
Return Value
true if the initial elements of the sequence are the same as the elements of possiblePrefix; otherwise, false. If possiblePrefix has no elements, the return value is true.
Overview
This example tests whether one countable range begins with the elements of another countable range.
let a = 1...3
let b = 1...10


print(b.starts(with: a))
// Prints "true"
Passing a sequence with no elements or an empty collection as possiblePrefix always results in true.
print(b.starts(with: []))
// Prints "true"
Complexity: O(m), where m is the lesser of the length of the sequence and the length of possiblePrefix.
See Also
Comparing Collections
func elementsEqual<OtherSequence>(OtherSequence) -> Bool
Returns a Boolean value indicating whether this sequence and another sequence contain the same elements in the same order.
Available when Element conforms to Equatable.
func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool
Returns a Boolean value indicating whether this sequence and another sequence contain equivalent elements in the same order, using the given predicate as the equivalence test.
func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool
Returns a Boolean value indicating whether the initial elements of the sequence are equivalent to the elements in another sequence, using the given predicate as the equivalence test.
func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool
Returns a Boolean value indicating whether the sequence precedes another sequence in a lexicographical (dictionary) ordering, using the given predicate to compare elements.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is starts(with:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright Â© 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


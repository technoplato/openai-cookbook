https://developer.apple.com/documentation/coreml/mlshapedarray/3763182-allsatisfy

Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
P
var endIndex: Int
P
var startIndex: Int
Finding an Index in a Shaped Array
M
func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (MLShapedArraySlice<Scalar>, MLShapedArraySlice<Scalar>) -> Bool) -> Bool
M
func starts<PossiblePrefix>(with: PossiblePrefix, by: (MLShapedArraySlice<Scalar>, PossiblePrefix.Element) -> Bool) -> Bool
M
func elementsEqual<OtherSequence>(OtherSequence) -> Bool
M
func elementsEqual<OtherSequence>(OtherSequence, by: (MLShapedArraySlice<Scalar>, OtherSequence.Element) -> Bool) -> Bool
func difference<C>(from: C, by: (C.Element, MLShapedArraySlice<Scalar>) -> Bool) -> CollectionDifference<MLShapedArraySlice<Scalar>>
func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<MLShapedArraySlice<Scalar>>) -> R) -> R?
Inspecting a Slice of a Shaped Array
P
var lazy: LazySequence<MLShapedArray<Scalar>>
P
var publisher: Publishers.Sequence<MLShapedArray<Scalar>, Never>
P
var last: MLShapedArraySlice<Scalar>?
P
var first: MLShapedArraySlice<Scalar>?
Inspecting a Shaped Array’s Scalars
Shaped Array Collection Operations
T
MLShapedArray.ArrayLiteralElement
Documentation
Open Menu
Swift
Instance Method
allSatisfy(_:)
Returns a Boolean value indicating whether every element of a sequence satisfies a given predicate.
iOS 15.0+
iPadOS 15.0+
macOS 12.0+
Mac Catalyst 15.0+
tvOS 15.0+
watchOS 8.0+
visionOS 1.0+ Beta
Xcode 13.0+
func allSatisfy(_ predicate: (MLShapedArraySlice<Scalar>) throws -> Bool) rethrows -> Bool
Parameters
predicate
A closure that takes an element of the sequence as its argument and returns a Boolean value that indicates whether the passed element satisfies a condition.
Return Value
true if the sequence contains only elements that satisfy predicate; otherwise, false.
Discussion
The following code uses this method to test whether all the names in an array have at least five characters:
let names = ["Sofia", "Camilla", "Martina", "Mateo", "Nicolás"]
let allHaveAtLeastFive = names.allSatisfy({ $0.count >= 5 })
// allHaveAtLeastFive == true
If the sequence is empty, this method returns true.
Complexity: O(n), where n is the length of the sequence.
See Also
Inspecting a Slice of a Shaped Array
func contains<C>(C) -> Bool
Returns a Boolean value indicating whether the collection contains the given sequence.
func contains(where: (MLShapedArraySlice<Scalar>) -> Bool) -> Bool
Returns a Boolean value indicating whether the sequence contains an element that satisfies the given predicate.
func contains(MLShapedArraySlice<Scalar>) -> Bool
Returns a Boolean value indicating whether the sequence contains the given element.
subscript<R>(R) -> MLShapedArraySlice<Scalar>
Accesses the contiguous subrange of the collection’s elements specified by a range expression.
func makeIterator() -> IndexingIterator<MLShapedArray<Scalar>>
Returns an iterator over the elements of the collection.
func forEach((MLShapedArraySlice<Scalar>) -> Void)
Calls the given closure on each element in the sequence in the same order as a for-in loop.
func enumerated() -> EnumeratedSequence<MLShapedArray<Scalar>>
Returns a sequence of pairs (n, x), where n represents a consecutive integer starting at zero and x represents an element of the sequence.
func randomElement() -> MLShapedArraySlice<Scalar>?
Returns a random element of the collection.
func randomElement<T>(using: inout T) -> MLShapedArraySlice<Scalar>?
Returns a random element of the collection, using the given generator as a source for randomness.
func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<MLShapedArraySlice<Scalar>>) -> R) -> R?
Executes a closure on the sequence’s contiguous storage.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is allSatisfy(_:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


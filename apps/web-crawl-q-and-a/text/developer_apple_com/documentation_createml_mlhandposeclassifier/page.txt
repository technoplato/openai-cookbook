https://developer.apple.com/documentation/createml/mlhandposeclassifier

Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
Saving a Hand Pose Classifier
M
func predictions(from: [URL]) throws -> [[(label: String, confidence: Double)]]
M
func prediction(from: URL) throws -> [(label: String, confidence: Double)]
Testing a Hand Pose Classifier
M
func evaluation(on: MLHandPoseClassifier.DataSource) throws -> MLClassifierMetrics
P
var validationMetrics: MLClassifierMetrics
P
var trainingMetrics: MLClassifierMetrics
init(trainingData: MLHandPoseClassifier.DataSource, parameters: MLHandPoseClassifier.ModelParameters) throws
static func restoreTrainingSession(sessionParameters: MLTrainingSessionParameters) throws -> MLTrainingSession<MLHandPoseClassifier>
static func makeTrainingSession(trainingData: MLHandPoseClassifier.DataSource, parameters: MLHandPoseClassifier.ModelParameters, sessionParameters: MLTrainingSessionParameters) throws -> MLTrainingSession<MLHandPoseClassifier>
static func train(trainingData: MLHandPoseClassifier.DataSource, parameters: MLHandPoseClassifier.ModelParameters, sessionParameters: MLTrainingSessionParameters) throws -> MLJob<MLHandPoseClassifier>
Documentation
Open Menu
Swift
Structure
MLHandPoseClassifier
A task that creates a hand pose classification model by training with images of people’s hands that you provide.
iOS 15.0+
iPadOS 15.0+
macOS 12.0+
Mac Catalyst 15.0+
visionOS 1.0+ Beta
struct MLHandPoseClassifier
Topics
Training a Hand Pose Classifier Asynchronously
static func train(trainingData: MLHandPoseClassifier.DataSource, parameters: MLHandPoseClassifier.ModelParameters, sessionParameters: MLTrainingSessionParameters) throws -> MLJob<MLHandPoseClassifier>
Begins an asynchronous hand pose classifier’s training session.
static func makeTrainingSession(trainingData: MLHandPoseClassifier.DataSource, parameters: MLHandPoseClassifier.ModelParameters, sessionParameters: MLTrainingSessionParameters) throws -> MLTrainingSession<MLHandPoseClassifier>
Creates an asynchronous hand pose classifier’s training session.
static func resume(MLTrainingSession<MLHandPoseClassifier>) throws -> MLJob<MLHandPoseClassifier>
Begins or continues an asynchronous hand pose classifier’s training session.
static func restoreTrainingSession(sessionParameters: MLTrainingSessionParameters) throws -> MLTrainingSession<MLHandPoseClassifier>
Recreates an asynchronous hand pose classifier’s training session by restoring its saved state from the file system.
Creating a Hand Pose Classifier from a Checkpoint
init(checkpoint: MLCheckpoint) throws
Creates a hand pose classifier from a training session checkpoint.
Training a Hand Pose Classifier Synchronously
init(trainingData: MLHandPoseClassifier.DataSource, parameters: MLHandPoseClassifier.ModelParameters) throws
Creates a hand pose classifier by starting a synchronous training session.
Evaluating a Hand Pose Classifier
var trainingMetrics: MLClassifierMetrics
Measurements of the hand pose classifier’s performance on the training dataset.
var validationMetrics: MLClassifierMetrics
Measurements of the hand pose classifier’s performance on the validation dataset.
func evaluation(on: MLHandPoseClassifier.DataSource) throws -> MLClassifierMetrics
Generates metrics that describe the hand pose classifier’s performance with a dataset of labeled images.
Testing a Hand Pose Classifier
func prediction(from: URL) throws -> [(label: String, confidence: Double)]
Generates a hand pose prediction for an image.
func predictions(from: [URL]) throws -> [[(label: String, confidence: Double)]]
Generates an array of hand pose predictions for each image in a URL array.
Saving a Hand Pose Classifier
func write(to: URL, metadata: MLModelMetadata?) throws
Exports the hand pose classifier as a Core ML model file to a file system URL.
func write(toFile: String, metadata: MLModelMetadata?) throws
Exports the hand pose classifier as a Core ML model file to a file system path.
Inspecting a Hand Pose Classifier Model
var model: MLModel
The underlying Core ML model of the hand pose classifier stored in memory.
let modelParameters: MLHandPoseClassifier.ModelParameters
The hand pose model’s configuration parameters.
Describing a Hand Pose Classifier
var description: String
A text representation of the hand pose classifier.
var debugDescription: String
A text representation of the hand pose classifier suitable for debugging.
var playgroundDescription: Any
A description of the hand pose classifier that’s viewable in a playground.
Supporting Types
enum DataSource
A hand pose classifier dataset that contains annotated images or hand joint location data.
struct ModelParameters
A set of parameters that affect the training process of a hand pose classifier task.
Default Implementations
API Reference
CustomDebugStringConvertible Implementations
API Reference
CustomPlaygroundDisplayConvertible Implementations
API Reference
CustomStringConvertible Implementations
Relationships
Conforms To
CustomDebugStringConvertible
CustomPlaygroundDisplayConvertible
CustomStringConvertible
Sendable
See Also
Image Models
Creating an Image Classifier Model
Train a machine learning model to classify images, and add it to your Core ML app.
struct MLImageClassifier
A model you train to classify images.
struct MLObjectDetector
A model you train to classify one or more objects within an image.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is MLHandPoseClassifier
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


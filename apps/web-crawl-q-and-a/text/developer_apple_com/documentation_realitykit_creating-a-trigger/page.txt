https://developer.apple.com/documentation/realitykit/creating-a-triggerSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
Runtime Events
Content synchronization
Postprocessing effects
Physics simulation
Collision detection
Body and face tracking
Transforms: Position, Orientation, and Scale
Building Custom Behaviors
Bringing a Reality Composer Scene to Life
Behaviors
Building Custom Behaviors
Selecting an Anchor for a Reality Composer Scene
Anchors
Improving the Accessibility of RealityKit Apps
Adding Procedural Assets to a Scene
Documentation
Open Menu
Swift
Article
Creating a Trigger
Define when and how a behavior fires.
Overview
Reality Composer supports five types of triggers: Tap, Scene Start, Proximity To Camera, Collide, and Notification. In Reality Composer’s Behavior pane, you click or tap inside the dashed box representing a trigger to specify the set of conditions or events that cause that trigger’s behavior to fire.
Respond to Taps and Touches
Select the Tap trigger when you want a behavior to fire in response to the user tapping a specific object or objects. After adding a tap trigger to the behavior, select the object or objects in your scene that you want the user to interact with. If you accidentally select an object that you don’t want, click or tap it a second time to deselect it. When you’re finished making your selection, press the Done button. To make further changes to the affected objects, press the Choose button to return to selection mode.
Tip
You can only use tap triggers for detecting single taps with one finger. To detect more complex scenarios, such as double-taps, long presses, or multiple-finger taps, use a notification trigger and then use Gesture Recognizers or SwiftUI gesture detection. For more information, see Fire a Behavior from Code.
Fire a Behavior Immediately
Select the Scene Start trigger if you want a behavior to fire as soon as your scene is loaded and displayed to the user. You would commonly used this type of trigger to set the starting state; for example, to hide objects you don’t want visible at first, or to initiate animations to run immediately.
Fire Behaviors when the User Is Near an Object
Select the Proximity To Camera trigger if you want a behavior to fire whenever the camera—and, therefore, the user—gets close to specific objects in your scene. Specify how close the user must get by using the Distance slider on the trigger. If you then select the trigger, a green sphere is displayed around the affected objects to represent the specified distance. You can also drag the sphere to change the distance visually.
Respond to Object Collisions
Select the Collide trigger if you want a behavior to fire whenever specific objects collide with other objects in your scene, or when objects collide with detected real-world surfaces.
Note
The target of a collide trigger must participate in your scene’s physics simulation. If you select an object that does not participate, Reality Composer prompts you to enable it.
Fire a Behavior from Code
Select a Notification trigger to fire a behavior from code you write in Xcode. Notification triggers are a good option when none of the other trigger types meet your needs. When you create a notification trigger, Xcode automatically generates the code needed to activate the behavior.
To trigger a notification, call the post() function on the generated notification. If, for example, your scene has a Notification trigger called SpinBox, as shown in the figure below, trigger that behavior from your code like this:
myScene.notifications.spinBox.post() 
See Also
Behaviors
Bringing a Reality Composer Scene to Life
Add animation and handle user input by using behaviors, triggers, and actions.
API Reference
Building Custom Behaviors
Create custom behaviors to control objects in your scene.
Adding Interactivity to Behaviors
Define what a behavior does by using actions.
Current page is Creating a Trigger
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


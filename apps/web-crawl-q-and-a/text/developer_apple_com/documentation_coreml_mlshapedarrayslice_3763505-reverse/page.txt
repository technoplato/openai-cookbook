https://developer.apple.com/documentation/coreml/mlshapedarrayslice/3763505-reverse

Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func trimPrefix(while: (MLShapedArraySlice<Scalar>) -> Bool)
M
func trimPrefix<Prefix>(Prefix)
M
func suffix(from: Int) -> MLShapedArraySlice<Scalar>
M
func suffix(Int) -> MLShapedArraySlice<Scalar>
M
func prefix(while: (MLShapedArraySlice<Scalar>) -> Bool) -> MLShapedArraySlice<Scalar>
M
func prefix(through: Int) -> MLShapedArraySlice<Scalar>
M
func prefix(upTo: Int) -> MLShapedArraySlice<Scalar>
func max(by: (MLShapedArraySlice<Scalar>, MLShapedArraySlice<Scalar>) -> Bool) -> MLShapedArraySlice<Scalar>?
func min(by: (MLShapedArraySlice<Scalar>, MLShapedArraySlice<Scalar>) -> Bool) -> MLShapedArraySlice<Scalar>?
func withContiguousMutableStorageIfAvailable<R>((inout UnsafeMutableBufferPointer<MLShapedArraySlice<Scalar>>) -> R) -> R?
M
func removeLast(Int)
M
func removeFirst(Int)
M
func removeLast() -> MLShapedArraySlice<Scalar>
M
func removeFirst() -> MLShapedArraySlice<Scalar>
M
func popLast() -> MLShapedArraySlice<Scalar>?
M
func popFirst() -> MLShapedArraySlice<Scalar>?
M
func sort(by: (MLShapedArraySlice<Scalar>, MLShapedArraySlice<Scalar>) -> Bool)
M
func sort<S, Comparator>(using: S)
Documentation
Open Menu
Swift
Instance Method
reverse()
Reverses the elements of the collection in place.
iOS 15.0+
iPadOS 15.0+
macOS 12.0+
Mac Catalyst 15.0+
tvOS 15.0+
watchOS 8.0+
visionOS 1.0+ Beta
Xcode 13.0+
mutating func reverse()
Discussion
The following example reverses the elements of an array of characters:
var characters: [Character] = ["C", "a", "f", "é"]
characters.reverse()
print(characters)
// Prints "["é", "f", "a", "C"]"
Complexity: O(n), where n is the number of elements in the collection.
See Also
Modifying a Shaped Array Slice
subscript(Range<Int>) -> MLShapedArraySlice<Scalar>
Accesses a slice with a range in the shaped array’s first dimension.
func swapAt(Int, Int)
Exchanges the values at the specified indices of the collection.
func partition(by: (MLShapedArraySlice<Scalar>) -> Bool) -> Int
Reorders the elements of the collection such that all the elements that match the given predicate are after all the elements that don’t match.
func sort<Comparator>(using: Comparator)
Reorders a shaped array slice by sorting its slices with a comparator.
func sort<S, Comparator>(using: S)
Reorders a shaped array slice by sorting its slices with a sequence of comparators.
func sort(by: (MLShapedArraySlice<Scalar>, MLShapedArraySlice<Scalar>) -> Bool)
Sorts the collection in place, using the given predicate as the comparison between elements.
func popFirst() -> MLShapedArraySlice<Scalar>?
Removes and returns the first element of the collection.
func popLast() -> MLShapedArraySlice<Scalar>?
Removes and returns the last element of the collection.
func removeFirst() -> MLShapedArraySlice<Scalar>
Removes and returns the first element of the collection.
func removeLast() -> MLShapedArraySlice<Scalar>
Removes and returns the last element of the collection.
func removeFirst(Int)
Removes the specified number of elements from the beginning of the collection.
func removeLast(Int)
Removes the given number of elements from the end of the collection.
func shuffle()
Shuffles the collection in place.
func shuffle<T>(using: inout T)
Shuffles the collection in place, using the given generator as a source for randomness.
func withContiguousMutableStorageIfAvailable<R>((inout UnsafeMutableBufferPointer<MLShapedArraySlice<Scalar>>) -> R) -> R?
Executes a closure on the collection’s contiguous storage.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is reverse()
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


https://developer.apple.com/documentation/createmlcomponents/transformer

Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func appending<Other>(Other) -> PreprocessingSupervisedTemporalEstimator<TransformerToTemporalAdaptor<Self>, Other>
M
func adaptedAsUpdatableEstimator() -> TransformerToUpdatableEstimatorAdaptor<Self>
M
func adaptedAsTemporal() -> TransformerToTemporalAdaptor<Self>
M
func adaptedAsRandomTransformer() -> some RandomTransformer<Self.Input, Self.Output>
Beta
M
func adaptedAsEstimator() -> TransformerToEstimatorAdaptor<Self>
M
func adaptedAsAnnotatedPredictionTransformer<Annotation>(annotationType: Annotation.Type) -> some Transformer<AnnotatedPrediction<Self.Input, Annotation>, AnnotatedPrediction<Self.Output, Annotation>>
Beta
M
func adaptedAsAnnotatedFeatureTransformer<Annotation>(annotationType: Annotation.Type) -> some Transformer<AnnotatedFeature<Self.Input, Annotation>, AnnotatedFeature<Self.Output, Annotation>>
func appending<Other>(Other) -> ComposedTemporalTransformer<TransformerToTemporalAdaptor<Self>, Other>
Protocols
S
ColumnConcatenator
E
ColumnSelection
S
ColumnSelectorTransformer
S
ColumnSelector
r
P
SupervisedTabularEstimator
r
P
TabularEstimator
r
P
TabularTransformer
Documentation
Open Menu
Swift
Protocol
Transformer
A transformer that takes an input and produces an output.
iOS 16.0+
iPadOS 16.0+
macOS 13.0+
Mac Catalyst 16.0+
tvOS 16.0+
visionOS 1.0+ Beta
protocol Transformer<Input, Output>
Topics
Associating the Types
associatedtype Input
The input type.
Required
associatedtype Output
The output type.
Required
Appending
func appending<Other>(Other) -> ComposedTransformer<Self, Other>
Composes this transformer with another transformer.
func appending<Other>(Other) -> ComposedTemporalTransformer<TransformerToTemporalAdaptor<Self>, Other>
Composes this transformer with a temporal transformer.
Transforming and Predicting
func callAsFunction<S>(S, eventHandler: EventHandler?) async throws -> [Self.Output]
Performs the transformation on a sequence of inputs.
func callAsFunction(Self.Input, eventHandler: EventHandler?) async throws -> Self.Output
Performs the transformation on a single input.
func prediction<S, Label>(from: S) async throws -> [ClassificationDistribution<Label>]
Performs a prediction from a sequence of inputs.
func prediction<Label>(from: Self.Input) async throws -> ClassificationDistribution<Label>
Performs a prediction from a single input.
Exporting
func export(to: URL) throws
Exports this transformer as a CoreML model.
Instance Methods
func adaptedAsAnnotatedFeatureTransformer<Annotation>(annotationType: Annotation.Type) -> some Transformer<AnnotatedFeature<Self.Input, Annotation>, AnnotatedFeature<Self.Output, Annotation>>
Returns an annotated-feature transformer that transforms the features using this transformer while leaving the annotations unchanged.
Beta
func adaptedAsAnnotatedPredictionTransformer<Annotation>(annotationType: Annotation.Type) -> some Transformer<AnnotatedPrediction<Self.Input, Annotation>, AnnotatedPrediction<Self.Output, Annotation>>
Returns an annotated-prediction transformer that transforms the predictions using this transformer while leaving the annotations unchanged.
Beta
func adaptedAsEstimator() -> TransformerToEstimatorAdaptor<Self>
Exposes this transformer as a trivial estimator.
func adaptedAsRandomTransformer() -> some RandomTransformer<Self.Input, Self.Output>
Returns a random transformer wrapping a transformer.
Beta
func adaptedAsTemporal() -> TransformerToTemporalAdaptor<Self>
Exposes this transformer as a temporal transformer.
func adaptedAsUpdatableEstimator() -> TransformerToUpdatableEstimatorAdaptor<Self>
Exposes this transformer as a trivial estimator.
func appending<Other>(Other) -> PreprocessingSupervisedTemporalEstimator<TransformerToTemporalAdaptor<Self>, Other>
Composes this transformer with a supervised temporal estimator.
func appending<Other>(Other) -> PreprocessingTemporalEstimator<TransformerToTemporalAdaptor<Self>, Other>
Composes this transformer with a temporal estimator.
func appending<Other>(Other) -> PreprocessingUpdatableSupervisedTemporalEstimator<TransformerToTemporalAdaptor<Self>, Other>
Composes this transformer with an updatable supervised temporal estimator.
func appending<Other>(Other) -> PreprocessingUpdatableEstimator<Self, Other>
Composes this transformer with an updatable estimator.
func appending<Other, Annotation>(Other) -> some Transformer<AnnotatedFeature<Self.Input, Annotation>, Other.Output>
Composes this transformer with an annotated-feature transformer.
Beta
func appending<Other, Annotation>(Other) -> some Transformer<Self.Input, AnnotatedPrediction<Other.Output, Annotation>>
Composes this transformer with a prediction-only transformer.
Beta
func appending<Other>(Other) -> PreprocessingUpdatableSupervisedEstimator<Self, Other>
Composes this transformer with an updatable supervised estimator.
func appending<Other>(Other) -> PreprocessingEstimator<Self, Other>
Composes this transformer with an estimator.
func appending<Other, Annotation>(Other) -> some Transformer<Self.Input, AnnotatedFeature<Other.Output, Annotation>>
Composes this transformer with a feature-only transformer.
Beta
func appending<Other, Annotation>(Other) -> some Transformer<AnnotatedPrediction<Self.Input, Annotation>, Other.Output>
Composes this transformer with an annotated-feature transformer.
Beta
func appending<Other>(Other) -> PreprocessingSupervisedEstimator<Self, Other>
Composes this transformer with a supervised estimator.
func appending<Other>(Other) -> PreprocessingUpdatableTemporalEstimator<TransformerToTemporalAdaptor<Self>, Other>
Composes this transformer with an updatable temporal estimator.
func applied(to: Self.Input, eventHandler: EventHandler?) async throws -> Self.Output
Performs the transformation on a single input.
Required Default implementations provided.
func export(to: URL, metadata: ModelMetadata) throws
Exports this transformer as a CoreML model with userInfo.
Beta
func prediction<S, Annotation>(from: S, eventHandler: EventHandler?) async throws -> [AnnotatedPrediction<Self.Output, Annotation>]
Performs a prediction on a sequence of annotated inputs.
Beta
Relationships
Inherited By
Classifier
ImageFeatureExtractor
Regressor
TabularTransformer
Conforming Types
AudioConvertingTransformer
AudioReader
ColumnConcatenator
ColumnSelectorTransformer
ComposedTabularTransformer
ComposedTransformer
FullyConnectedNetworkClassifierModel
FullyConnectedNetworkMultiLabelClassifierModel
FullyConnectedNetworkRegressorModel
HumanBodyActionPeriodPredictor
HumanBodyPoseExtractor
HumanHandPoseExtractor
ImageBlur
ImageColorTransformer
ImageCropper
ImageExposureAdjuster
ImageFeaturePrint
ImageFlipper
ImageReader
ImageRotator
ImageScaler
ImputeTransformer
JointsSelector
LinearRegressorModel
LinearTransformer
LogisticRegressionClassifierModel
MLModelClassifierAdaptor
MLModelImageFeatureExtractor
MLModelRegressorAdaptor
MLModelTransformerAdaptor
MaxAbsScaler.Transformer
Conforms when Element conforms to BinaryFloatingPoint, Decodable, and Encodable.
MinMaxScaler.Transformer
Conforms when Element conforms to BinaryFloatingPoint, Decodable, and Encodable.
NormalizationScaler.Transformer
Conforms when Element conforms to BinaryFloatingPoint, Decodable, and Encodable.
OneHotEncoder.Transformer
Conforms when Category conforms to Comparable, Decodable, Encodable, and Hashable.
OptionalUnwrapper
OrdinalEncoder.Transformer
Conforms when Category conforms to Comparable, Decodable, Encodable, and Hashable.
PoseSelector
RandomImageNoiseGenerator
Reshaper
RobustScaler.Transformer
Conforms when Element conforms to BinaryFloatingPoint, Decodable, and Encodable.
StandardScaler.Transformer
Conforms when Element conforms to BinaryFloatingPoint, Decodable, and Encodable.
TreeClassifierModel
TreeRegressorModel
VideoReader
See Also
Protocols
protocol TemporalTransformer
A transformer that takes an asynchronous input sequence of temporal features and produces an asynchronous output sequence.
protocol Estimator
An estimator that creates a transformer by fitting to a data set.
protocol TemporalEstimator
An estimator that creates a transformer by fitting to a sequence of temporal features.
protocol SupervisedEstimator
An estimator that creates a transformer by fitting to a data set.
protocol SupervisedTemporalEstimator
An estimator that creates a transformer by fitting to a sequence of annotated temporal features.
protocol UpdatableEstimator
An estimator that can be incrementally updated.
protocol UpdatableSupervisedEstimator
A supervised estimator that can be incrementally updated.
protocol UpdatableSupervisedTemporalEstimator
A supervised temporal estimator that can be incrementally updated.
protocol UpdatableTemporalEstimator
A temporal estimator that can be incrementally updated.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is Transformer
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


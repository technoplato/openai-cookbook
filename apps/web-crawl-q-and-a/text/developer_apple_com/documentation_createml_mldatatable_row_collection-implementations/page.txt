https://developer.apple.com/documentation/createml/mldatatable/row/collection-implementations

Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func makeIterator() -> IndexingIterator<Self>
M
func index(after: Int) -> Int
M
func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?
M
func index(Self.Index, offsetBy: Int) -> Self.Index
M
func formIndex(after: inout Self.Index)
M
func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool
M
func formIndex(inout Self.Index, offsetBy: Int)
Default Implementations
T
MLDataTable.Row.Value
T
MLDataTable.Row.Keys
T
MLDataTable.Row.Key
Type Aliases
subscript<T>(MLDataTable.Row.Key, T.Type) -> T?
subscript(MLDataTable.Row.Key) -> MLDataTable.Row.Value?
Subscripts
Documentation
Open Menu
Collection Implementations
Topics
Instance Properties
var count: Int
The number of elements in the collection.
var endIndex: Int
The collection’s “past the end” position—that is, the position one greater than the last valid subscript argument.
var first: Self.Element?
The first element of the collection.
var indices: DefaultIndices<Self>
The indices that are valid for subscripting the collection, in ascending order.
Available when Indices is DefaultIndices<Self>.
var isEmpty: Bool
A Boolean value indicating whether the collection is empty.
var startIndex: Int
The position of the first element in a nonempty collection.
var underestimatedCount: Int
A value less than or equal to the number of elements in the collection.
Instance Methods
func distance(from: Self.Index, to: Self.Index) -> Int
Returns the distance between two indices.
func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence
Returns a subsequence by skipping elements while predicate returns true and returning the remaining elements.
func dropFirst(Int) -> Self.SubSequence
Returns a subsequence containing all but the given number of initial elements.
func dropLast(Int) -> Self.SubSequence
Returns a subsequence containing all but the specified number of final elements.
func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?
Returns the first index in which an element of the collection satisfies the given predicate.
func formIndex(inout Self.Index, offsetBy: Int)
Offsets the given index by the specified distance.
func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool
Offsets the given index by the specified distance, or so that it equals the given limiting index.
func formIndex(after: inout Self.Index)
Replaces the given index with its successor.
func index(Self.Index, offsetBy: Int) -> Self.Index
Returns an index that is the specified distance from the given index.
func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?
Returns an index that is the specified distance from the given index, unless that distance is beyond a given limiting index.
func index(after: Int) -> Int
Returns the position immediately after the given index.
func makeIterator() -> IndexingIterator<Self>
Returns an iterator over the elements of the collection.
Available when Iterator is IndexingIterator<Self>.
func map<T>((Self.Element) throws -> T) rethrows -> [T]
Returns an array containing the results of mapping the given closure over the sequence’s elements.
func prefix(Int) -> Self.SubSequence
Returns a subsequence, up to the specified maximum length, containing the initial elements of the collection.
func prefix(through: Self.Index) -> Self.SubSequence
Returns a subsequence from the start of the collection through the specified position.
func prefix(upTo: Self.Index) -> Self.SubSequence
Returns a subsequence from the start of the collection up to, but not including, the specified position.
func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence
Returns a subsequence containing the initial elements until predicate returns false and skipping the remaining elements.
func randomElement() -> Self.Element?
Returns a random element of the collection.
func randomElement<T>(using: inout T) -> Self.Element?
Returns a random element of the collection, using the given generator as a source for randomness.
func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]
Returns the longest possible subsequences of the collection, in order, that don’t contain elements satisfying the given predicate.
func suffix(Int) -> Self.SubSequence
Returns a subsequence, up to the given maximum length, containing the final elements of the collection.
func suffix(from: Self.Index) -> Self.SubSequence
Returns a subsequence from the specified position to the end of the collection.
func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence
Subscripts
subscript<R>(R) -> Self.SubSequence
Accesses the contiguous subrange of the collection’s elements specified by a range expression.
subscript(Int) -> (MLDataTable.Row.Key, MLDataTable.Row.Value)
Accesses the element at the specified position.
subscript((UnboundedRange_) -> ()) -> Self.SubSequence
subscript(Range<Self.Index>) -> Slice<Self>
Accesses a contiguous subrange of the collection’s elements.
Available when SubSequence is Slice<Self>.
Type Aliases
typealias Index
A type that represents a position in the collection.
typealias Indices
A type that represents the indices that are valid for subscripting the collection, in ascending order.
typealias Iterator
A type that provides the collection’s iteration interface and encapsulates its iteration state.
typealias SubSequence
A collection representing a contiguous subrange of this collection’s elements. The subsequence shares indices with the original collection.
Current page is Collection Implementations
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


https://developer.apple.com/documentation/realitykit/arview/renderoptions-swift.structSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
P
var isEmpty: Bool
Testing for Membership in a Render Option Set
P
let rawValue: UInt
T
ARView.RenderOptions.RawValue
M
init(rawValue: UInt)
T
ARView.RenderOptions.ArrayLiteralElement
T
ARView.RenderOptions.Element
P
var renderOptions: ARView.RenderOptions
P
var automaticallyConfigureSession: Bool
P
var session: ARSession
Configuring the AR Session
C
Scene
P
var scene: Scene
Working with the Scene
M
convenience init(frame: CGRect, cameraMode: ARView.CameraMode)
Deprecated
Documentation
Open Menu
Swift
Structure
ARView.RenderOptions
The available rendering options that you use to selectively disable certain rendering effects.
iOS 13.0+
iPadOS 13.0+
macOS 10.15+
Mac Catalyst 14.0+
struct RenderOptions
Overview
RealityKit applies effects to the render make the AR experience more immersive. You can selectively disable any of these effects by adding one or more options from the ARView.RenderOptions set to the view’s renderOptions property.
When you initialize a new ARView instance, RealityKit automatically disables certain effects for you, depending on the device hardware. You can change the view’s renderOptions to suit your app’s needs, but be sure to consider your app’s GPU utilization when doing so, as described in Improving the Performance of a RealityKit App.
Topics
Disabling Rendering Effects
static let disableCameraGrain: ARView.RenderOptions
Disable the image noise effect.
static let disableHDR: ARView.RenderOptions
Disable the high dynamic range post-processing effect.
static let disableGroundingShadows: ARView.RenderOptions
Disable rendering of ambient occlusion and shadows that ground objects in an AR scene.
static let disableMotionBlur: ARView.RenderOptions
Disable the motion blur for all virtual content.
static let disableDepthOfField: ARView.RenderOptions
Disable the depth of field effect for all virtual content.
static let disableFaceOcclusions: ARView.RenderOptions
Disable automatic face occlusion.
Deprecated
static let disablePersonOcclusion: ARView.RenderOptions
Disable person segmentation.
static let disableAREnvironmentLighting: ARView.RenderOptions
Disable lighting from environment probes.
static let disableAutomaticLighting: ARView.RenderOptions
Disable automatic updates of the scene lighting.
Deprecated
Creating an Option Set
init()
Creates an empty option set.
Available when RawValue conforms to FixedWidthInteger.
init<S>(S)
Creates a new set from a finite sequence of items.
init(arrayLiteral: Self.Element...)
Creates a set containing the elements of the given array literal.
Available when ArrayLiteralElement is Self.Element.
typealias Element
The element type of the option set.
typealias ArrayLiteralElement
The type of the elements of an array literal.
init(rawValue: UInt)
Creates a new option set from the given raw value.
typealias RawValue
The raw type that can be used to represent all values of the conforming type.
let rawValue: UInt
The corresponding value of the raw type.
Testing for Membership in a Render Option Set
var isEmpty: Bool
A Boolean value that indicates whether the set has no elements.
func contains(Self) -> Bool
Returns a Boolean value that indicates whether a given element is a member of the option set.
Available when Self is Self.Element.
Adding and Removing Options
func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)
Adds the given element to the option set if it is not already a member.
Available when Self is Self.Element.
func update(with: Self.Element) -> Self.Element?
Inserts the given element into the set.
Available when Self is Self.Element.
func remove(Self.Element) -> Self.Element?
Removes the given element and all elements subsumed by it.
Available when Self is Self.Element.
func subtract(Self)
Removes the elements of the given set from this set.
func subtracting(Self) -> Self
Returns a new set containing the elements of this set that do not occur in the given set.
Combining Options
func union(Self) -> Self
Returns a new option set of the elements contained in this set, in the given set, or in both.
func formUnion(Self)
Inserts the elements of another set into this option set.
Available when RawValue conforms to FixedWidthInteger.
func intersection(Self) -> Self
Returns a new option set with only the elements contained in both this set and the given set.
func formIntersection(Self)
Removes all elements of this option set that are not also present in the given set.
Available when RawValue conforms to FixedWidthInteger.
func symmetricDifference(Self) -> Self
Returns a new option set with the elements contained in this set or in the given set, but not in both.
func formSymmetricDifference(Self)
Replaces this set with a new set containing all elements contained in either this set or the given set, but not in both.
Available when RawValue conforms to FixedWidthInteger.
Comparing Options
static func != (Self, Self) -> Bool
func isSubset(of: Self) -> Bool
Returns a Boolean value that indicates whether the set is a subset of another set.
func isStrictSubset(of: Self) -> Bool
Returns a Boolean value that indicates whether this set is a strict subset of the given set.
func isSuperset(of: Self) -> Bool
Returns a Boolean value that indicates whether the set is a superset of the given set.
func isStrictSuperset(of: Self) -> Bool
Returns a Boolean value that indicates whether this set is a strict superset of the given set.
func isDisjoint(with: Self) -> Bool
Returns a Boolean value that indicates whether the set has no members in common with the given set.
Type Properties
static let disableFaceMesh: ARView.RenderOptions
Disables generation of the face entity with the default occluision material. (By default, ARKit detects users and hides virtual objects behind a user’s face.)
Default Implementations
API Reference
Equatable Implementations
API Reference
OptionSet Implementations
API Reference
SetAlgebra Implementations
Relationships
Conforms To
Equatable
ExpressibleByArrayLiteral
OptionSet
RawRepresentable
SetAlgebra
See Also
Configuring the AR Session
var session: ARSession
The AR session that supports the view’s rendering.
var automaticallyConfigureSession: Bool
An indication of whether to use an automatically configured AR session.
var renderOptions: ARView.RenderOptions
The render options that configure the view’s AR session.
var renderCallbacks: ARView.RenderCallbacks
A container that holds the view’s render callbacks.
struct RenderCallbacks
A container that holds the view’s render callbacks.
Current page is ARView.RenderOptions
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


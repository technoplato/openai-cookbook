https://developer.apple.com/documentation/realitykit/arview/debugoptions-swift.struct/init(arrayliteral:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
static func != (Self, Self) -> Bool
Comparing Options
M
func formSymmetricDifference(Self)
M
func symmetricDifference(Self) -> Self
M
func formIntersection(Self)
M
func intersection(Self) -> Self
M
func formUnion(Self)
M
init<S>(S)
M
init()
Creating a Debug Option Set
P
static let showSceneUnderstanding: ARView.DebugOptions
P
static let showFeaturePoints: ARView.DebugOptions
P
static let showWorldOrigin: ARView.DebugOptions
P
static let showAnchorGeometry: ARView.DebugOptions
P
static let showAnchorOrigins: ARView.DebugOptions
Documentation
Open Menu
Swift
Initializer
init(arrayLiteral:)
Creates a set containing the elements of the given array literal.
RealityKit
Swift
iOS 13.0+
iPadOS 13.0+
macOS 10.15+
Mac Catalyst 13.0+
visionOS 1.0+ Beta
init(arrayLiteral: Self.Element...)
Available when ArrayLiteralElement is Self.Element.
Parameters
arrayLiteral
A list of elements of the new set.
Overview
Do not call this initializer directly. It is used by the compiler when you use an array literal. Instead, create a new set using an array literal as its value by enclosing a comma-separated list of values in square brackets. You can use an array literal anywhere a set is expected by the type context.
Here, a set of strings is created from an array literal holding only strings:
let ingredients: Set = ["cocoa beans", "sugar", "cocoa butter", "salt"]
if ingredients.isSuperset(of: ["sugar", "salt"]) {
    print("Whatever it is, it's bound to be delicious!")
}
// Prints "Whatever it is, it's bound to be delicious!"
See Also
Creating a Debug Option Set
init()
Creates an empty option set.
Available when RawValue conforms to FixedWidthInteger.
init<S>(S)
Creates a new set from a finite sequence of items.
typealias Element
The element type of the option set.
typealias ArrayLiteralElement
The type of the elements of an array literal.
init(rawValue: Int)
Create a debug options enumeration from a raw value.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is init(arrayLiteral:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright Â© 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


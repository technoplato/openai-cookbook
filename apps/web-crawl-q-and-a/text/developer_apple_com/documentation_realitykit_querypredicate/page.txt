https://developer.apple.com/documentation/realitykit/querypredicateSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func publisher<E>(for: E.Type, on: (EventSource)?, componentType: (Component.Type)?) -> Scene.Publisher<E>
M
func subscribe<E>(to: E.Type, on: (EventSource)?, (E) -> Void) -> Cancellable
M
func publisher<E>(for: E.Type, on: (EventSource)?) -> Scene.Publisher<E>
Getting and Sending Events
r
P
SynchronizationService
P
var synchronizationService: (SynchronizationService)?
Synchronizing Entities Between Devices
func convexCast(convexShape: ShapeResource, fromPosition: SIMD3<Float>, fromOrientation: simd_quatf, toPosition: SIMD3<Float>, toOrientation: simd_quatf, query: CollisionCastQueryType, mask: CollisionGroup, relativeTo: Entity?) -> [CollisionCastHit]
func raycast(from: SIMD3<Float>, to: SIMD3<Float>, query: CollisionCastQueryType, mask: CollisionGroup, relativeTo: Entity?) -> [CollisionCastHit]
func raycast(origin: SIMD3<Float>, direction: SIMD3<Float>, length: Float, query: CollisionCastQueryType, mask: CollisionGroup, relativeTo: Entity?) -> [CollisionCastHit]
M
func findEntity(named: String) -> Entity?
Finding Entities
S
Scene.AnchorCollection
M
func removeAnchor(HasAnchoring)
M
func addAnchor(HasAnchoring)
P
var anchors: Scene.AnchorCollection
Adding and Removing Anchors
T
Scene.ID
Documentation
Open Menu
Swift
Structure
QueryPredicate
An object that defines the criteria for an entity query.
iOS 15.0+
iPadOS 15.0+
macOS 12.0+
Mac Catalyst 15.0+
visionOS 1.0+ Beta
struct QueryPredicate<Value>
Overview
Query predicates specify the entities an EntityQuery returns from a scene. Predicates describe entities based on which components they contain, or on the entity’s relationship to other entities in the scene. For example, you can build a predicate to retrieve the model entities from a scene.
let modelPredicate = QueryPredicate.has(ModelComponent.self)
Create Compound Predicates
You can combine predicates using Swift’s logical operators to create compound predicates. QueryPredicate supports Swift’s logical AND (&&), logical OR (||), and logical NOT (!) operators. The following code shows how to build a compound predicate that returns all entities that are either model entities or anchor entities.
let orPredicate = QueryPredicate.has(ModelComponent.self) ||
QueryPredicate.has(AnchorComponent.self) ```


Use parentheses to control the order of operations when combining
predicates. For example, you can create a query that returns any entity that
has both a model component and a physics body component, or any entity that
has only an anchor component.


```swift
let multiPredicate: QueryPredicate<Entity> =
.has(ModelComponent.self) && .has(PhysicsBodyComponent.self)
                          || .has(AnchorComponent.self)
Topics
Creating Predicates
static func has<T>(T.Type) -> QueryPredicate<Entity>
Creates a new predicate that describes entities that have a specific component.
Comparing Predicates
func ! <Value>(QueryPredicate<Value>) -> QueryPredicate<Value>
Returns a predicate which evaluates to true if operand evaluates to false.
func && <Value>(QueryPredicate<Value>, QueryPredicate<Value>) -> QueryPredicate<Value>
Returns a predicate which evaluates to true if left AND right evaluate to true.
func || <Value>(QueryPredicate<Value>, QueryPredicate<Value>) -> QueryPredicate<Value>
Returns a predicate which evaluates to true if left OR right evaluates to true.
See Also
Finding Entities
func findEntity(named: String) -> Entity?
Searches the scene’s anchor entity hierarchies for an entity with the given name.
func performQuery(EntityQuery) -> QueryResult<Entity>
Returns all entities of the scene which pass the QueryPredicate of the query.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is QueryPredicate
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


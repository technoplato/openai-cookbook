https://developer.apple.com/documentation/realitykit/videomaterialSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
r
P
Material
Material fundamentals
S
ShaderGraphMaterial
Beta
S
CustomMaterial
Modifying RealityKit Rendering Using Custom Materials
Custom materials
C
VideoPlaybackController
Video materials
S
PhysicallyBasedMaterial
Applying Realistic Material and Lighting Effects to Entities
Realistic materials
S
OcclusionMaterial
Object Occlusion
S
UnlitMaterial
S
SimpleMaterial
Documentation
Open Menu
Swift
Structure
VideoMaterial
A material that supports animated textures.
iOS 14.0+
iPadOS 14.0+
macOS 11.0+
Mac Catalyst 14.0+
visionOS 1.0+ Beta
struct VideoMaterial
Overview
In RealityKit, a material is an object that defines the surface properties of a rendered 3D object. A VideoMaterial is a material that maps a movie file on to the surface of an entity. Video materials are unlit, which means that scene lighting doesn’t affect them. Video materials support transparency if the source video’s file format also supports transparency.
Video materials use an AVPlayer instance to control movie playback. You can use any movie file format that AVPlayer supports to create a video material. To control playback of the material’s video, use the avPlayer property, which offers methods like play() and pause().
The following code demonstrates how to create and start playing a video material using a movie file from your application bundle.
// Create a URL that points to the movie file.
if let url = Bundle.main.url(forResource: "MyMovie", withExtension: "mp4") {


    // Create an AVPlayer instance to control playback of that movie.
    let player = AVPlayer(url: url)


    // Instantiate and configure the video material.
    let material = VideoMaterial(avPlayer: player)


    // Configure audio playback mode.
    material.controller.audioInputMode = .spatial


    // Create a new model entity using the video material.
    let modelEntity = ModelEntity(mesh: cube, materials: [material])


    // Start playing the video.
    player.play()
}
To see an example of using a video texture in RealityKit, see Creating a game with scene understanding.
Topics
Creating a Video Material
init(avPlayer: AVPlayer)
Creates a new video material.
Controlling Playback
var avPlayer: AVPlayer?
The material’s video playback controller.
var controller: VideoPlaybackController
An object that configures framework-specific video options.
Defining Material Types
typealias Parameters
The parameter type that custom materials uses for properties the framework passes to shader functions.
class VideoPlaybackController
An object that controls the playback of video for a video material.
Instance Properties
var triangleFillMode: VideoMaterial.TriangleFillMode
The object that controls how RealityKit draws triangles.
Type Aliases
typealias TriangleFillMode
Default Implementations
API Reference
Material Implementations
Relationships
Conforms To
Material
See Also
Video materials
class VideoPlaybackController
An object that controls the playback of video for a video material.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is VideoMaterial
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


https://developer.apple.com/documentation/createml/mldatavalue/sequencetype/prefix(through:)

Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
ExpressibleByArrayLiteral Implementations
Equatable Implementations
CustomStringConvertible Implementations
CustomDebugStringConvertible Implementations
T
MLDataValue.SequenceType.SubSequence
T
MLDataValue.SequenceType.Iterator
T
MLDataValue.SequenceType.Indices
func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]
func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]
M
func prefix(Int) -> Self.SubSequence
M
func map<T>((Self.Element) throws -> T) rethrows -> [T]
M
func makeIterator() -> IndexingIterator<Self>
M
func index(of: Self.Element) -> Self.Index?
M
func formIndex(after: inout Self.Index)
M
func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool
M
func formIndex(inout Self.Index, offsetBy: Int)
M
func firstRange<C>(of: C) -> Range<Self.Index>?
Documentation
Open Menu
Swift
Instance Method
prefix(through:)
Returns a subsequence from the start of the collection through the specified position.
Create ML
Swift
iOS 15.0+
iPadOS 15.0+
macOS 10.14+
Mac Catalyst 15.0+
tvOS 16.0+
visionOS 1.0+ Beta
func prefix(through position: Self.Index) -> Self.SubSequence
Parameters
position
The index of the last element to include in the resulting subsequence. position must be a valid index of the collection that is not equal to the endIndex property.
Return Value
A subsequence up to, and including, the given position.
Discussion
The resulting subsequence includes the element at the position specified by the through parameter. The following example searches for the index of the number 40 in an array of integers, and then prints the prefix of the array up to, and including, that index:
let numbers = [10, 20, 30, 40, 50, 60]
if let i = numbers.firstIndex(of: 40) {
    print(numbers.prefix(through: i))
}
// Prints "[10, 20, 30, 40]"
Using the prefix(through:) method is equivalent to using a partial closed range as the collection’s subscript. The subscript notation is preferred over prefix(through:).
if let i = numbers.firstIndex(of: 40) {
    print(numbers[...i])
}
// Prints "[10, 20, 30, 40]"
Complexity
O(1)
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is prefix(through:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


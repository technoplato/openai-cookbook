https://developer.apple.com/documentation/realitykit/realityviewcontent/body/environment(_:_:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
Default Implementations
T
RealityView.DefaultPlaceholder
T
RealityView.Body
T
RealityView.AttachmentContent
Type Aliases
S
RealityViewEntityCollection
S
RealityViewAttachmentContent
func subscribe<E>(to: E.Type, on: (EventSource)?, componentType: (Component.Type)?, (E) -> Void) -> EventSubscription
Working with content
P
var body: some View
M
init<A, P>(make: (inout RealityViewContent, RealityViewAttachments) async -> Void, update: ((inout RealityViewContent, RealityViewAttachments) -> Void)?, placeholder: () -> P, attachments: () -> A)
M
init<P>(make: (inout RealityViewContent) async -> Void, update: ((inout RealityViewContent) -> Void)?, placeholder: () -> P)
M
init<A>(make: (inout RealityViewContent, RealityViewAttachments) async -> Void, update: ((inout RealityViewContent, RealityViewAttachments) -> Void)?, attachments: () -> A)
M
init(make: (inout RealityViewContent) async -> Void, update: ((inout RealityViewContent) -> Void)?)
Creating a reality view
S
RealityView
Beta
Documentation
Open Menu
Swift
Instance Method
environment(_:_:)
Sets the environment value of the specified key path to the given value.
RealityKit
SwiftUI
iOS 13.0+
iPadOS 13.0+
macOS 10.15+
Mac Catalyst 13.0+
tvOS 13.0+
watchOS 6.0+
visionOS 1.0+ Beta
func environment<V>(
    _ keyPath: WritableKeyPath<EnvironmentValues, V>,
    _ value: V
) -> some View
Parameters
keyPath
A key path that indicates the property of the EnvironmentValues structure to update.
value
The new value to set for the item specified by keyPath.
Return Value
A view that has the given value set in its environment.
Discussion
Use this modifier to set one of the writable properties of the EnvironmentValues structure, including custom values that you create. For example, you can set the value associated with the EnvironmentValues/truncationMode key:
MyView()
    .environment(\.truncationMode, .head)
You then read the value inside MyView or one of its descendants using the Environment property wrapper:
struct MyView: View {
    @Environment(\.truncationMode) var truncationMode: Text.TruncationMode


    var body: some View { ... }
}
SwiftUI provides dedicated view modifiers for setting most environment values, like the View/truncationMode(_:) modifier which sets the EnvironmentValues/truncationMode value:
MyView()
    .truncationMode(.head)
Prefer the dedicated modifier when available, and offer your own when defining custom environment values, as described in EnvironmentKey.
The View/environment(_:_:) modifier affects the given view, as well as that view’s descendant views. It has no effect outside the view hierarchy on which you call it.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is environment(_:_:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


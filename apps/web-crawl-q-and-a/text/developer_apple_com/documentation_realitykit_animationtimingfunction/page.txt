https://developer.apple.com/documentation/realitykit/animationtimingfunctionSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
Bindable Animation Targets
S
AnimationHandoffType
Beta
S
AnimationGroup
S
AnimationFillMode
r
P
AnimationDefinition
S
OrbitAnimation
S
AnimationView
static func cubicBezier(controlPoint1: SIMD2<Float>, controlPoint2: SIMD2<Float>) -> AnimationTimingFunction
S
FromToByAnimation
S
SampledAnimation
Animation definitions
C
AnimationResource
Animation resources
E
AnimationRepeatMode
E
AnimationEvents
C
AnimationPlaybackController
Documentation
Open Menu
Swift
Structure
AnimationTimingFunction
The pacing of an animation transition.
iOS 13.0+
iPadOS 13.0+
macOS 10.15+
Mac Catalyst 13.0+
visionOS 1.0+ Beta
struct AnimationTimingFunction
Overview
Use an animation timing function to control the pace of an animation transition when you call one of an entity’s animated move methods, like move(to:relativeTo:duration:timingFunction:). If you omit a timing function from the call, the method uses the default timing function.
Topics
Creating Timing Functions
static var `default`: AnimationTimingFunction
A timing function that produces the default curve for the transition.
static var easeIn: AnimationTimingFunction
A timing function that produces a gradual starting transition.
static var easeInOut: AnimationTimingFunction
A timing function that produces a gradual starting and ending transition.
static var easeOut: AnimationTimingFunction
A timing function that produces a gradual ending transition.
static var linear: AnimationTimingFunction
A timing function that produces a linear transition.
static func cubicBezier(controlPoint1: SIMD2<Float>, controlPoint2: SIMD2<Float>) -> AnimationTimingFunction
Creates a timing function that accelerates and then decelerates towards the target value with the cubic bezier shape specified by two control points.
Comparing Timing Functions
static func == (AnimationTimingFunction, AnimationTimingFunction) -> Bool
Indicates whether two animation timing functions are equal.
static func != (Self, Self) -> Bool
Indicates whether two animation timing functions are not equal.
func hash(into: inout Hasher)
Hashes the essential components of the timing function by feeding them into the given hash function.
var hashValue: Int
The hashed value of the timing function.
Default Implementations
API Reference
Equatable Implementations
Relationships
Conforms To
Equatable
Hashable
See Also
Animation definitions
struct SampledAnimation
An animation that cycles through a series of frames at a constant interval.
struct FromToByAnimation
An animation that starts, stops, or increments by a specific value.
struct AnimationView
An animation that represents a variation of another animation.
struct OrbitAnimation
An animation that revolves an entity around its origin.
protocol AnimationDefinition
The configuration, including target object, timeframe, and visual semantics, of an animation.
struct AnimationFillMode
Options that determine which animation frames display outside of the normal duration.
struct AnimationGroup
A collection of animations that play simultaneously.
struct AnimationHandoffType
Beta
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is AnimationTimingFunction
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


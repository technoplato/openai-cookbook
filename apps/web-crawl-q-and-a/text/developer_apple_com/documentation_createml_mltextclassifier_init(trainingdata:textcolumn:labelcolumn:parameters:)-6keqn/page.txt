https://developer.apple.com/documentation/createml/mltextclassifier/init(trainingdata:textcolumn:labelcolumn:parameters:)-6keqn

Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
Saving a Text Classifier
M
func predictionsWithConfidence(from: MLDataColumn<String>) throws -> MLDataColumn<[String : Double]>
M
func predictions(from: MLDataColumn<String>) throws -> MLDataColumn<String>
M
func predictionsWithConfidence(from: [String]) throws -> [[String : Double]]
M
func predictionWithConfidence(from: String) throws -> [String : Double]
M
func predictions(from: [String]) throws -> [String]
M
func prediction(from: String) throws -> String
init(trainingData: MLDataTable, textColumn: String, labelColumn: String, parameters: MLTextClassifier.ModelParameters) throws
init(trainingData: DataFrame, textColumn: String, labelColumn: String, parameters: MLTextClassifier.ModelParameters) throws
M
init(trainingData: [String : [String]], parameters: MLTextClassifier.ModelParameters) throws
Creating and Training a Text Classifier
S
MLTextClassifier
Creating a text classifier model
Text Models
S
MLStyleTransfer
S
MLHandActionClassifier
S
MLActionClassifier
Documentation
Open Menu
Swift
Initializer
init(trainingData:textColumn:labelColumn:parameters:)
Creates a text classifier.
iOS 16.0+
iPadOS 16.0+
macOS 13.0+
Mac Catalyst 16.0+
visionOS 1.0+ Beta
init(
    trainingData: DataFrame,
    textColumn: String,
    labelColumn: String,
    parameters: MLTextClassifier.ModelParameters = ModelParameters(validation: .split(strategy: .automatic))
) throws
Parameters
trainingData
A data frame specifying the training data.
textColumn
The name of the text column in the provided trainingData.
labelColumn
The name of the label column in the provided trainingData.
parameters
Model training parameters.
See Also
Creating and Training a Text Classifier
init(trainingData: [String : [String]], parameters: MLTextClassifier.ModelParameters) throws
Creates a text classifier.
init(trainingData: MLTextClassifier.DataSource, parameters: MLTextClassifier.ModelParameters) throws
Creates a text classifier.
enum DataSource
A data source for a text classifier.
struct ModelParameters
Parameters that specify model training parameters and validation data.
let modelParameters: MLTextClassifier.ModelParameters
The configuration parameters that the text classifier used for training during initialization.
init(trainingData: MLDataTable, textColumn: String, labelColumn: String, parameters: MLTextClassifier.ModelParameters) throws
Creates a text classifier.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is init(trainingData:textColumn:labelColumn:parameters:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright Â© 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


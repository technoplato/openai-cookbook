https://developer.apple.com/documentation/realitykit/scene/publisher/allsatisfy(_:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func output<R>(in: R) -> Publishers.Output<Self>
M
func output(at: Int) -> Publishers.Output<Self>
M
func tryLast(where: (Self.Output) throws -> Bool) -> Publishers.TryLastWhere<Self>
M
func last(where: (Self.Output) -> Bool) -> Publishers.LastWhere<Self>
M
func last() -> Publishers.Last<Self>
M
func tryFirst(where: (Self.Output) throws -> Bool) -> Publishers.TryFirstWhere<Self>
M
func first(where: (Self.Output) -> Bool) -> Publishers.FirstWhere<Self>
func prepend(Self.Output...) -> Publishers.Concatenate<Publishers.Sequence<[Self.Output], Self.Failure>, Self>
func append(Self.Output...) -> Publishers.Concatenate<Self, Publishers.Sequence<[Self.Output], Self.Failure>>
M
func tryContains(where: (Self.Output) throws -> Bool) -> Publishers.TryContainsWhere<Self>
M
func contains(where: (Self.Output) -> Bool) -> Publishers.ContainsWhere<Self>
M
func contains(Self.Output) -> Publishers.Contains<Self>
Applying Matching Criteria to Elements
M
func tryMin(by: (Self.Output, Self.Output) throws -> Bool) -> Publishers.TryComparison<Self>
M
func min(by: (Self.Output, Self.Output) -> Bool) -> Publishers.Comparison<Self>
M
func min() -> Publishers.Comparison<Self>
M
func tryMax(by: (Self.Output, Self.Output) throws -> Bool) -> Publishers.TryComparison<Self>
Documentation
Open Menu
Swift
Instance Method
allSatisfy(_:)
Publishes a single Boolean value that indicates whether all received elements pass a given predicate.
RealityKit
Combine
iOS 13.0+
iPadOS 13.0+
macOS 10.15+
Mac Catalyst 13.0+
tvOS 13.0+
watchOS 6.0+
visionOS 1.0+ Beta
func allSatisfy(_ predicate: @escaping (Self.Output) -> Bool) -> Publishers.AllSatisfy<Self>
Parameters
predicate
A closure that evaluates each received element. Return true to continue, or false to cancel the upstream and complete.
Return Value
A publisher that publishes a Boolean value that indicates whether all received elements pass a given predicate.
Discussion
Use the allSatisfy(_:) operator to determine if all elements in a stream satisfy a criteria you provide. When this publisher receives an element, it runs the predicate against the element. If the predicate returns false, the publisher produces a false value and finishes. If the upstream publisher finishes normally, this publisher produces a true value and finishes.
In the example below, the allSatisfy(_:) operator tests if each an integer array publisher’s elements fall into the targetRange:
let targetRange = (-1...100)
let numbers = [-1, 0, 10, 5]
numbers.publisher
    .allSatisfy { targetRange.contains($0) }
    .sink { print("\($0)") }


// Prints: "true"
With operators similar to reduce(_:_:), this publisher produces at most one value.
Note
Upon receiving any request greater than zero, this publisher requests unlimited elements from the upstream publisher.
See Also
Applying Matching Criteria to Elements
func contains(Self.Output) -> Publishers.Contains<Self>
Publishes a Boolean value upon receiving an element equal to the argument.
Available when Output conforms to Equatable.
func contains(where: (Self.Output) -> Bool) -> Publishers.ContainsWhere<Self>
Publishes a Boolean value upon receiving an element that satisfies the predicate closure.
func tryContains(where: (Self.Output) throws -> Bool) -> Publishers.TryContainsWhere<Self>
Publishes a Boolean value upon receiving an element that satisfies the throwing predicate closure.
func tryAllSatisfy((Self.Output) throws -> Bool) -> Publishers.TryAllSatisfy<Self>
Publishes a single Boolean value that indicates whether all received elements pass a given error-throwing predicate.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is allSatisfy(_:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


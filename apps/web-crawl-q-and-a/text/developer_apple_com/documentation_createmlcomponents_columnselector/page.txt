https://developer.apple.com/documentation/createmlcomponents/columnselector

Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
S
ColumnConcatenator
E
ColumnSelection
S
ColumnSelectorTransformer
UpdatableTabularEstimator Implementations
TabularEstimator Implementations
Default Implementations
T
ColumnSelector.Transformer
func fitted(to: DataFrame, eventHandler: EventHandler?) async throws -> ColumnSelector<Estimator, UnwrappedInput>.Transformer
func decode(from: inout EstimatorDecoder) throws -> ColumnSelector<Estimator, UnwrappedInput>.Transformer
r
P
SupervisedTabularEstimator
r
P
TabularEstimator
r
P
TabularTransformer
Tabular Components
S
PreprocessedFeatureSequence
S
AnyTemporalSequence
S
AnyTemporalIterator
S
TemporalFileSegment
Documentation
Open Menu
Swift
Structure
ColumnSelector
An operation that applies an estimator to a selection of columns.
iOS 16.0+
iPadOS 16.0+
macOS 13.0+
Mac Catalyst 16.0+
tvOS 16.0+
visionOS 1.0+ Beta
struct ColumnSelector<Estimator, UnwrappedInput> where Estimator : Estimator, Estimator.Transformer.Input == UnwrappedInput?
Overview
The Select estimator applies a non-tabular estimator to a selection of columns. Here’s an example of normalizing numeric values within each column using a StandardScaler:
let numericalScaling = Select(
    columns: ["volume", "price"],
    estimator: NumericImputer<Float>(.mean)
        .appending(StandardScaler<Float>())
)
In most cases, an inputer must handle missing values.
Topics
Creating the Selection
init(columns: [String], estimator: Estimator)
Creates a select operation with an estimator.
init(ColumnSelection, estimator: Estimator)
Creates a select operation with an estimator.
init<T>(ColumnSelection, transformer: T)
Creates a select operation with a transformer.
Getting the Properties
var columnSelection: ColumnSelection
The column selection strategy.
var estimator: Estimator
The estimator to use on each column.
Encoding and Decoding
func encode(ColumnSelector<Estimator, UnwrappedInput>.Transformer, to: inout EstimatorEncoder) throws
Encodes a fitted transformer.
func decode(from: inout EstimatorDecoder) throws -> ColumnSelector<Estimator, UnwrappedInput>.Transformer
Decodes a previously fitted transformer.
Fitting
func fitted(to: DataFrame, eventHandler: EventHandler?) async throws -> ColumnSelector<Estimator, UnwrappedInput>.Transformer
Fits a transformer to a data frame
typealias Input
typealias Output
typealias Transformer
The transformer type created by this estimator.
Default Implementations
API Reference
TabularEstimator Implementations
API Reference
UpdatableTabularEstimator Implementations
Relationships
Conforms To
Sendable
TabularEstimator
UpdatableTabularEstimator
Conforms when Estimator conforms to UpdatableEstimator and Estimator.Transformer.Input is UnwrappedInput?.
See Also
Tabular Components
protocol TabularTransformer
A tabular transformer that transforms a data frame.
protocol TabularEstimator
A tabular estimator that creates a transformer by fitting to a data set in a data frame.
protocol SupervisedTabularEstimator
A tabular estimator that creates a transformer by fitting to a data set in a data frame.
struct ColumnSelectorTransformer
A transformer that applies a base transformer to specific columns in a data frame.
enum ColumnSelection
A selection of columns from a data frame.
struct ColumnConcatenator
A transformer that concatenates every numerical column in a dataframe into to a shaped array for each row.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is ColumnSelector
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


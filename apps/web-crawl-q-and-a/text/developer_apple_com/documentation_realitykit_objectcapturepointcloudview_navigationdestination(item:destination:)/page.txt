https://developer.apple.com/documentation/realitykit/objectcapturepointcloudview/navigationdestination(item:destination:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View
M
func onChange<V>(of: V, perform: (V) -> Void) -> some View
Deprecated
M
func onChange<V>(of: V, initial: Bool, () -> Void) -> some View
M
func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View
M
func onAppear(perform: (() -> Void)?) -> some View
M
func offset(x: CGFloat, y: CGFloat) -> some View
M
func offset(CGSize) -> some View
M
func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View
M
func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View
M
func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View
M
func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View
Deprecated
M
func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View
Deprecated
M
func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View
Deprecated
M
func navigationBarTitle(LocalizedStringKey) -> some View
M
func navigationBarTitle(Text) -> some View
Documentation
Open Menu
Swift
Instance Method
navigationDestination(item:destination:)
Associates a destination view with a bound value for use within a navigation stack or navigation split view
RealityKit
SwiftUI
iOS 17.0+ Beta
iPadOS 17.0+ Beta
macOS 14.0+ Beta
Mac Catalyst 17.0+ Beta
tvOS 17.0+ Beta
watchOS 10.0+ Beta
visionOS 1.0+ Beta
func navigationDestination<D, C>(
    item: Binding<Optional<D>>,
    @ViewBuilder destination: @escaping (D) -> C
) -> some View where D : Hashable, C : View
Parameters
item
A binding to the data presented, or nil if nothing is currently presented.
destination
A view builder that defines a view to display when item is not nil.
Discussion
Add this view modifer to a view inside a NavigationStack or NavigationSplitView to describe the view that the stack displays when presenting a particular kind of data. Use a NavigationLink to present the data, which updates the binding. Programmatically update the binding to display or remove the view. For example, you can replace the view showing in the detail column of a navigation split view:
@State private var colorShown: Color?


NavigationSplitView {
    List {
        NavigationLink("Mint", value: Color.mint)
        NavigationLink("Pink", value: Color.pink)
        NavigationLink("Teal", value: Color.teal)
    }
    .navigationDestination(item: $colorShown) { color in
        ColorDetail(color: color)
    }
} detail: {
    Text("Select a color")
}
When the person using the app taps on the Mint link, the mint color shows in the detail and colorShown gets the value Color.mint. You can reset the navigation split view to show the message “Select a color” by setting colorShown back to nil.
You can add more than one navigation destination modifier to the stack if it needs to present more than one kind of data.
Do not put a navigation destination modifier inside a “lazy” container, like List or LazyVStack. These containers create child views only when needed to render on screen. Add the navigation destination modifier outside these containers so that the navigation split view can always see the destination.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is navigationDestination(item:destination:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


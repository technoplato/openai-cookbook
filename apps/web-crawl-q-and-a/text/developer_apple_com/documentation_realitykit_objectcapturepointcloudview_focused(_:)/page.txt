https://developer.apple.com/documentation/realitykit/objectcapturepointcloudview/focused(_:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View
M
func frame() -> some View
Deprecated
M
func formStyle<S>(S) -> some View
M
func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View
M
func foregroundStyle<S1, S2>(S1, S2) -> some View
M
func foregroundStyle<S>(S) -> some View
M
func foregroundColor(Color?) -> some View
M
func focusable(Bool, interactions: FocusInteractions) -> some View
M
func focusable(Bool) -> some View
M
func focusEffectDisabled(Bool) -> some View
M
func flipsForRightToLeftLayoutDirection(Bool) -> some View
M
func fixedSize(horizontal: Bool, vertical: Bool) -> some View
M
func fixedSize() -> some View
M
func findNavigator(isPresented: Binding<Bool>) -> some View
M
func findDisabled(Bool) -> some View
Documentation
Open Menu
Swift
Instance Method
focused(_:)
Modifies this view by binding its focus state to the given Boolean state value.
RealityKit
SwiftUI
iOS 15.0+
iPadOS 15.0+
macOS 12.0+
Mac Catalyst 15.0+
tvOS 15.0+
watchOS 8.0+
visionOS 1.0+ Beta
func focused(_ condition: FocusState<Bool>.Binding) -> some View
Parameters
condition
The focus state to bind. When focus moves to the view, the binding sets the bound value to true. If a caller sets the value to true programmatically, then focus moves to the modified view. When focus leaves the modified view, the binding sets the value to false. If a caller sets the value to false, SwiftUI automatically dismisses focus.
Return Value
The modified view.
Discussion
Use this modifier to cause the view to receive focus whenever the the condition value is true. You can use this modifier to observe the focus state of a single view, or programmatically set and remove focus from the view.
In the following example, a single TextField accepts a user’s desired username. The text field binds its focus state to the Boolean value usernameFieldIsFocused. A “Submit” button’s action verifies whether the name is available. If the name is unavailable, the button sets usernameFieldIsFocused to true, which causes focus to return to the text field, so the user can enter a different name.
@State private var username: String = ""
@FocusState private var usernameFieldIsFocused: Bool
@State private var showUsernameTaken = false


var body: some View {
    VStack {
        TextField("Choose a username.", text: $username)
            .focused($usernameFieldIsFocused)
        if showUsernameTaken {
            Text("That username is taken. Please choose another.")
        }
        Button("Submit") {
            showUsernameTaken = false
            if !isUserNameAvailable(username: username) {
                usernameFieldIsFocused = true
                showUsernameTaken = true
            }
        }
    }
}
To control focus by matching a value, use the View/focused(_:equals:) method instead.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is focused(_:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


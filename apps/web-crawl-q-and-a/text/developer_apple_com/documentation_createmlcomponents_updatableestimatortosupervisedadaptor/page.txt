https://developer.apple.com/documentation/createmlcomponents/updatableestimatortosupervisedadaptor

Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
S
UpdatableSupervisedEstimatorToTemporalAdaptor
UpdatableSupervisedEstimator Implementations
SupervisedEstimator Implementations
Default Implementations
M
func fitted<Input, Validation>(to: Input, validateOn: Validation, eventHandler: EventHandler?) async throws -> UpdatableEstimatorToSupervisedAdaptor<Estimator, Annotation>.Transformer
M
func fitted<Input>(to: Input, eventHandler: EventHandler?) async throws -> UpdatableEstimatorToSupervisedAdaptor<Estimator, Annotation>.Transformer
M
func encodeWithOptimizer(UpdatableEstimatorToSupervisedAdaptor<Estimator, Annotation>.Transformer, to: inout EstimatorEncoder) throws
func decodeWithOptimizer(from: inout EstimatorDecoder) throws -> UpdatableEstimatorToSupervisedAdaptor<Estimator, Annotation>.Transformer
func update<InputSequence, Validation>(inout Estimator.Transformer, with: InputSequence, validateOn: Validation, eventHandler: EventHandler?) async throws
func update<InputSequence>(inout Estimator.Transformer, with: InputSequence, eventHandler: EventHandler?) async throws
func decode(from: inout EstimatorDecoder) throws -> UpdatableEstimatorToSupervisedAdaptor<Estimator, Annotation>.Transformer
func encode(UpdatableEstimatorToSupervisedAdaptor<Estimator, Annotation>.Transformer, to: inout EstimatorEncoder) throws
S
UpdatableEstimatorToTemporalAdaptor
Updatable Adaptors
S
TransformerToUpdatableEstimatorAdaptor
S
TransformerToTemporalAdaptor
S
TransformerToEstimatorAdaptor
Transformer Adaptors
func meanAbsoluteError<T>(some Collection, some Collection) -> T
func maximumAbsoluteError<T>(some Collection, some Collection) -> T
Documentation
Open Menu
Swift
Structure
UpdatableEstimatorToSupervisedAdaptor
An adaptor that exposes an updatable estimator as an updatable supervised estimator.
iOS 16.0+
iPadOS 16.0+
macOS 13.0+
Mac Catalyst 16.0+
tvOS 16.0+
visionOS 1.0+ Beta
struct UpdatableEstimatorToSupervisedAdaptor<Estimator, Annotation> where Estimator : UpdatableEstimator, Annotation : Equatable
Topics
Creating the Adaptor
init(Estimator)
Creates an estimator adaptor.
Getting the Properties
let estimator: Estimator
The wrapped estimator.
Encoding and Decoding
func encode(UpdatableEstimatorToSupervisedAdaptor<Estimator, Annotation>.Transformer, to: inout EstimatorEncoder) throws
Does nothing since this estimator uses a pre-defined transformer.
func decode(from: inout EstimatorDecoder) throws -> UpdatableEstimatorToSupervisedAdaptor<Estimator, Annotation>.Transformer
Returns the pre-defined transformer.
Fitting and Updating
func makeTransformer() -> Estimator.Transformer
Creates a default-initialized transformer suitable for incremental fitting.
func update<InputSequence>(inout Estimator.Transformer, with: InputSequence, eventHandler: EventHandler?) async throws
Updates a transformer with a new sequence of examples.
func update<InputSequence, Validation>(inout Estimator.Transformer, with: InputSequence, validateOn: Validation, eventHandler: EventHandler?) async throws
Fits a transformer to a sequence of examples while validating with a validation sequence.
typealias Transformer
The transformer type created by this estimator.
Instance Methods
func decodeWithOptimizer(from: inout EstimatorDecoder) throws -> UpdatableEstimatorToSupervisedAdaptor<Estimator, Annotation>.Transformer
Reads the encoded transformer and optimizer.
func encodeWithOptimizer(UpdatableEstimatorToSupervisedAdaptor<Estimator, Annotation>.Transformer, to: inout EstimatorEncoder) throws
Encodes the transformer and optimizer to an encoder.
func fitted<Input>(to: Input, eventHandler: EventHandler?) async throws -> UpdatableEstimatorToSupervisedAdaptor<Estimator, Annotation>.Transformer
Fits a transformer to a sequence of examples, ignoring the annotations and the validation.
func fitted<Input, Validation>(to: Input, validateOn: Validation, eventHandler: EventHandler?) async throws -> UpdatableEstimatorToSupervisedAdaptor<Estimator, Annotation>.Transformer
Fits a transformer to a sequence of examples.
Default Implementations
API Reference
SupervisedEstimator Implementations
API Reference
UpdatableSupervisedEstimator Implementations
Relationships
Conforms To
Sendable
SupervisedEstimator
UpdatableSupervisedEstimator
See Also
Updatable Adaptors
struct UpdatableEstimatorToTemporalAdaptor
An updatable temporal estimator wrapping an updatable estimator.
struct UpdatableSupervisedEstimatorToTemporalAdaptor
An updatable supervised temporal estimator wrapping an updatable supervised estimator.
struct UpdatableTemporalEstimatorToSupervisedAdaptor
An adaptor that exposes an updatable temporal estimator as an updatable supervised temporal estimator.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is UpdatableEstimatorToSupervisedAdaptor
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright Â© 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


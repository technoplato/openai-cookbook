https://developer.apple.com/documentation/realitykit/spatialaudiocomponentSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
r
P
TransientComponent
S
PerspectiveCameraComponent
S
ParticleEmitterComponent
Beta
S
PhysicsSimulationComponent
Beta
S
PhysicsMotionComponent
S
PhysicsBodyComponent
S
CollisionComponent
S
ChannelAudioComponent
Beta
S
AudioMixGroupsComponent
Beta
S
AmbientAudioComponent
Beta
Sound
S
ViewAttachmentComponent
Beta
S
TextComponent
Beta
S
InputTargetComponent
Beta
S
WorldComponent
Beta
Documentation
Open Menu
Swift
Structure
SpatialAudioComponent
Configure how sounds are emitted from an entity into the user’s environment.
visionOS 1.0+ Beta
struct SpatialAudioComponent
Overview
The position and orientation of spatial audio sources are updated continuously and automatically by the audio system, so sounds always come from an entity wherever it goes and wherever it is pointing. Spatial audio sources have the user environment’s acoustics applied to them so that they blend in naturally with it, and they are distance attenuated so they become quieter the further away they are from the user.
Note
Spatial audio sources emit only a single channel (i.e., mono). If the format of the audio resource played on the entity is stereo or multichannel, all of its channels will be mixed down to a single channel before spatialization. To minimize any unwanted mixdown artifacts, use mono source material where possible.
RealityKit audio playback is spatial by default, so no additional configuration is necessary to opt into sophisticated spatial rendering.
let entity = Entity()
let resource = try AudioFileResource.load(named: "MyAudioFile")
entity.playAudio(resource) // Audio file is played spatially from entity
The SpatialAudioComponent allows you to further customize the playback characteristics of spatial audio sources. The gain, directLevel, and reverbLevel properties are in relative Decibels, in the range -.infinity ... .zero, where -.infinity is silent and .zero is nominal.
For example, you can adjust the overall level of all sounds played from the entity with the gain property.
entity.spatialAudio = SpatialAudioComponent(gain: -10)
You can reduce the amount of reverb applied to all sounds played from the entity with the reverbLevel property. Reducing this value will make the sounds less reverberant and more intimate. Setting reverbLevel to -.infinity will cause the sounds to collapse into the head of the listener.
entity.spatialAudio?.reverbLevel = -6
The gain, directLevel, and reverbLevel properties can be updated dynamically, for example based on your app’s state, or in the context of a Custom RealityKit System.
The directivity property allows you to configure the radiation pattern for sound emitted from the entity.
entity.spatialAudio?.directivity = .beam(focus: 0.5)
Spatial audio sources project sounds along their -Z axis. If a spatial audio source is co-located and co-oriented with visual content authored with a +Z-forward coordinate convention, you will want to rotate your spatial audio source 180º about the Y-axis.
let parent = Entity()


// Add model entity
let model = try ModelEntity.load(named: "PositiveZForward")
parent.addChild(model)


// Add audio source entity
let audioSource = Entity()
parent.addChild(audioSource)


// Orient audio source towards +Z
audioSource.orientation = .init(angle: .pi, axis: [0, 1, 0])
This is only a consideration if you have explicitly set a directivity other than the default .beam(focus: .zero), which projects sound evenly for all frequencies in all directions.
Topics
Initializers
init(gain: Audio.Decibel, directLevel: Audio.Decibel, reverbLevel: Audio.Decibel, directivity: Audio.Directivity)
Configure the behavior of a spatial audio source.
Instance Properties
var directLevel: Audio.Decibel
The level of the direct, unreverberated, signal emitted from an entity. In relative Decibels, in the range -.infinity ... .zero where .zero is the default.
var directivity: Audio.Directivity
The radiation pattern for sound emitted from an entity.
var gain: Audio.Decibel
The overall level for all sounds emitted from an entity. In relative Decibels, in the range -.infinity ... .zero where .zero is the default.
var reverbLevel: Audio.Decibel
The level of reverberated signal emitted from an entity. In relative Decibels, in the range -.infinity ... .zero, where .zero is the default.
Default Implementations
API Reference
Component Implementations
API Reference
Decodable Implementations
API Reference
Encodable Implementations
API Reference
Equatable Implementations
API Reference
Hashable Implementations
Relationships
Conforms To
Component
Decodable
Encodable
Equatable
Hashable
See Also
Sound
struct AmbientAudioComponent
Configure ambient rendering of sounds from an entity.
Beta
struct AudioMixGroupsComponent
Beta
struct ChannelAudioComponent
Configure channel-based rendering of sounds from an entity.
Beta
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is SpatialAudioComponent
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


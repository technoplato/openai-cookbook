https://developer.apple.com/documentation/createmlcomponents/linearregressor/configuration-swift.struct

Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
Initializers
Equatable Implementations
Default Implementations
M
func hash(into: inout Hasher)
M
func encode(to: Encoder) throws
Instance Methods
P
var stepSize: Double
Structures
T
LinearRegressor.Transformer
T
LinearRegressor.Annotation
Fitting
M
func decode(from: inout EstimatorDecoder) throws -> LinearRegressorModel<Scalar>
M
func encode(LinearRegressorModel<Scalar>, to: inout EstimatorEncoder) throws
Encoding and Decoding
S
LinearRegressor
Documentation
Open Menu
Swift
Structure
LinearRegressor.Configuration
A linear regressor configuration.
Create ML Components
CreateMLComponents
iOS 16.0+
iPadOS 16.0+
macOS 13.0+
Mac Catalyst 16.0+
tvOS 16.0+
visionOS 1.0+ Beta
struct Configuration
Available when Scalar conforms to MLShapedArrayScalar and BinaryFloatingPoint.
Topics
Operators
static func == (LinearRegressor<Scalar>.Configuration, LinearRegressor<Scalar>.Configuration) -> Bool
Returns a Boolean value indicating whether two values are equal.
Initializers
init()
Creates a default linear regressor configuration.
init(from: Decoder) throws
Creates a new instance by decoding from the given decoder.
Instance Properties
var convergenceThreshold: Double
The convergence threshold.
var earlyStopIterationCount: Int
The number of iterations to use when evaluating whether to stop early.
Beta
var hashValue: Int
The hash value.
var l1Penalty: Double
Weight of the L1 regularization term.
var l2Penalty: Double
Weight of the L2 regularization term.
var maximumIterations: Int
The maximum number of allowed passes through the data.
var optimizationStrategy: OptimizationStrategy
The optimization strategy.
Beta
var scaleFeatures: Bool
A Boolean value indicating whether to scale the input features.
Beta
var stepSize: Double
The starting step size to use for the solver.
Instance Methods
func encode(to: Encoder) throws
Encodes this value into the given encoder.
func hash(into: inout Hasher)
Hashes the essential components of this value by feeding them into the given hasher.
Default Implementations
API Reference
Equatable Implementations
Relationships
Conforms To
Decodable
Encodable
Equatable
Hashable
Sendable
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is LinearRegressor.Configuration
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright Â© 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


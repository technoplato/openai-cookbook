https://developer.apple.com/documentation/realitykit/arview/rendercallbacks-swift.struct/preparewithdeviceSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
P
var automaticallyConfigureSession: Bool
P
var renderOptions: ARView.RenderOptions
S
ARView.RenderOptions
P
var renderCallbacks: ARView.RenderCallbacks
S
ARView.RenderCallbacks
Creating a Callback Object
M
init()
Register Callback Closures
M
func hitTest(CGPoint, types: ARHitTestResult.ResultType) -> [ARHitTestResult]
M
func makeRaycastQuery(from: CGPoint, allowing: ARRaycastQuery.Target, alignment: ARRaycastQuery.TargetAlignment) -> ARRaycastQuery?
M
func raycast(from: CGPoint, allowing: ARRaycastQuery.Target, alignment: ARRaycastQuery.TargetAlignment) -> [ARRaycastResult]
M
func trackedRaycast(from: CGPoint, allowing: ARRaycastQuery.Target, alignment: ARRaycastQuery.TargetAlignment, updateHandler: ([ARRaycastResult]) -> Void) -> ARTrackedRaycast?
Adding Gesture Recognizers to Entities
M
func installGestures(ARView.EntityGestures, for: HasCollision) -> [EntityGestureRecognizer]
S
ARView.EntityGestures
Documentation
Open Menu
Swift
Instance Property
prepareWithDevice
A callback function for doing initial setup work.
iOS 15.0+
iPadOS 15.0+
macOS 12.0+
Mac Catalyst 15.0+
var prepareWithDevice: ((MTLDevice) -> Void)?
Discussion
If you assign a function to prepareWithDevice, RealityKit calls that function once, after it does its setup work, but before it renders the next frame. If you register a prepareWithDevice callback during app startup, RealityKit calls it before it renders the first frame. A callback function looks like this:
    func myPostProcessSetupCallback(device: MTLDevice) {
        // Handle setup work here.
    }
To register the function so RealityKit calls it, assign it to the prepareWithDevice property of the view’s renderCallbacks property.
arView.renderCallbacks.prepareWithDevice = myPostProcessSetupCallback
To remove the callback, assign nil.
arView.renderCallbacks.prepareWithDevice = nil
If you assign a new closure or function to the property after setting it to nil, RealityKit calls the new closure before it renders the next frame. In that case, avoid doing long-running tasks in the callback function to avoid rendering hitches.
See Also
Register Callback Closures
var postProcess: ((ARView.PostProcessContext) -> Void)?
A callback function for implementing postprocess effects.
Current page is prepareWithDevice
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


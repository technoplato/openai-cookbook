https://developer.apple.com/documentation/createml/mldatatable/map(_:)-3yamp

Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
Getting Information About a Data Table’s Columns
S
MLDataTable.Rows
P
var rows: MLDataTable.Rows
Getting Information About a Data Table’s Rows
Data Table Derivation Operations
Generating New Data Tables
M
func append(contentsOf: MLDataTable)
M
func map<T>((MLDataTable.Row) -> T) -> MLDataColumn<T>
Transforming Rows to Generate a Data Column
P
var size: (rows: Int, columns: Int)
Getting the Size of a Data Table
M
init()
M
init(namedColumns: [String : MLUntypedColumn]) throws
M
init(dictionary: [String : MLDataValueConvertible]) throws
M
init(contentsOf: URL, options: MLDataTable.ParsingOptions) throws
Documentation
Open Menu
Swift
Instance Method
map(_:)
Creates a new column, potentially with missing values, by applying a given thread-safe transform to every row in the data table.
iOS 15.0+
iPadOS 15.0+
macOS 10.14+
Mac Catalyst 15.0+
tvOS 16.0+
visionOS 1.0+ Beta
func map<T>(_ lazyTransform: @escaping (MLDataTable.Row) -> T?) -> MLDataColumn<T> where T : MLDataValueConvertible
Parameters
lazyTransform
A thread-safe row transformation function.
The implementation of your transform must accept a row from the data table and return an optional type that conforms to MLDataValueConvertible. If the transform returns nil for a given row, the corresponding element in the new column will have a missing value.
Return Value
A new MLDataColumn.
Discussion
This mapping function is the same as map(_:) with the exception that this version’s lazyTransform parameter returns an optional (T?). Use this version of map() to create empty values by returning nil from your lazyTransform.
See Also
Related Documentation
func map<T>((MLDataTable.Row) -> T) -> MLDataColumn<T>
Creates a new column by applying a given thread-safe transform to every row in the data table.
Transforming Rows to Generate a Data Column
func map<T>((MLDataTable.Row) -> T) -> MLDataColumn<T>
Creates a new column by applying a given thread-safe transform to every row in the data table.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is map(_:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


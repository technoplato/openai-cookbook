https://developer.apple.com/documentation/swiftdata/schema

Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func makeManagedObjectModel() -> NSManagedObjectModel?
M
static func managedObjectModel(for: [PersistentModel.Type], mergedWith: NSManagedObjectModel) -> NSManagedObjectModel?
M
static func makeManagedObjectModel([PersistentModel.Type]) -> NSManagedObjectModel?
Making managed object models
M
static func load(from: URL) throws -> Schema
M
func save(to: URL) throws
Saving and loading
M
init(for: Schema, migrationPlan: (SchemaMigrationPlan.Type)?, configurations: [ModelConfiguration]) throws
M
convenience init(for: Schema, migrationPlan: (SchemaMigrationPlan.Type)?, ModelConfiguration...) throws
M
convenience init(for: [PersistentModel.Type], migrationPlan: (SchemaMigrationPlan.Type)?, ModelConfiguration...) throws
M
convenience init(for: PersistentModel.Type, migrationPlan: (SchemaMigrationPlan.Type)?, ModelConfiguration...) throws
S
ModelConfiguration
M
convenience init(for: [PersistentModel.Type], ModelConfiguration...) throws
M
convenience init(for: PersistentModel.Type, ModelConfiguration...) throws
M
convenience init(for: [PersistentModel.Type]) throws
Documentation
Open Menu
Swift
Class
Schema
An object that maps model classes to data in the model store, and helps with the migration of that data between releases.
iOS 17.0+ Beta
iPadOS 17.0+ Beta
macOS 14.0+ Beta
Mac Catalyst 17.0+ Beta
tvOS 17.0+ Beta
watchOS 10.0+ Beta
visionOS 1.0+ Beta
Swift 5.9+
final class Schema
Topics
Creating a schema
init([PersistentModel.Type])
init(Entity...)
convenience init(versionedSchema: VersionedSchema.Type)
protocol VersionedSchema
An interface for describing a specific version of a schema, including the models it contains.
init()
API Reference
Schema components
Specify the constituent parts of your schema, including entities, attributes, and relationships.
Accessing entities
let entities: [Entity]
let entitiesByName: [String : Entity]
class Entity
An object that provides a blueprint for the associated model class.
Accessing version details
static let schemaEncodingVersion: Double
let encodingVersion: Double
Saving and loading
func save(to: URL) throws
static func load(from: URL) throws -> Schema
Making managed object models
static func makeManagedObjectModel([PersistentModel.Type]) -> NSManagedObjectModel?
static func managedObjectModel(for: [PersistentModel.Type], mergedWith: NSManagedObjectModel) -> NSManagedObjectModel?
func makeManagedObjectModel() -> NSManagedObjectModel?
func managedObjectModel(mergedWith: NSManagedObjectModel) -> NSManagedObjectModel?
Encoding and decoding
func encode(to: Encoder) throws
Encodes this value into the given encoder.
init(from: Decoder) throws
Creates a new instance by decoding from the given decoder.
Hashing
func hash(into: inout Hasher)
Hashes the essential components of this value by feeding them into the given hasher.
var hashValue: Int
The hash value.
Comparing schemas
static func == (Schema, Schema) -> Bool
Returns a Boolean value indicating whether two values are equal.
Default Implementations
API Reference
CustomDebugStringConvertible Implementations
API Reference
Equatable Implementations
Relationships
Conforms To
CustomDebugStringConvertible
Decodable
Encodable
Equatable
Hashable
See Also
Creating a model container
convenience init(for: PersistentModel.Type) throws
convenience init(for: [PersistentModel.Type]) throws
convenience init(for: PersistentModel.Type, ModelConfiguration...) throws
convenience init(for: [PersistentModel.Type], ModelConfiguration...) throws
struct ModelConfiguration
A type that describes the configuration of an app’s schema or specific group of models.
convenience init(for: PersistentModel.Type, migrationPlan: (SchemaMigrationPlan.Type)?, ModelConfiguration...) throws
convenience init(for: [PersistentModel.Type], migrationPlan: (SchemaMigrationPlan.Type)?, ModelConfiguration...) throws
convenience init(for: Schema, migrationPlan: (SchemaMigrationPlan.Type)?, ModelConfiguration...) throws
init(for: Schema, migrationPlan: (SchemaMigrationPlan.Type)?, configurations: [ModelConfiguration]) throws
protocol SchemaMigrationPlan
An interface for describing the evolution of a schema and how to migrate between specific versions.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is Schema
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


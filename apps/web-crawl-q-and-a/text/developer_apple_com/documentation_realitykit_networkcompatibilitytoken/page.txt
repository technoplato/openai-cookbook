https://developer.apple.com/documentation/realitykit/networkcompatibilitytokenSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
C
MultipeerConnectivityService
Network Synchronization
E
VideoPlayerEvents
Beta
S
VideoPlayerComponent
Beta
Video Playback
Character control
Creating a game with scene understanding
C
MultipeerConnectivityService
Multipeer synchronization
r
P
HasSynchronization
S
SynchronizationComponent
r
P
SynchronizationService
Entity synchronization
Content synchronization
Postprocessing effects
Documentation
Open Menu
Swift
Class
NetworkCompatibilityToken
An opaque token used to check the networking compatibility between two peers in a multipeer connection.
iOS 13.4+
iPadOS 13.4+
macOS 10.15.4+
Mac Catalyst 13.4+
visionOS 1.0+ Beta
final class NetworkCompatibilityToken
Overview
RealityKit apps running on incompatible versions of RealityKit can’t connect and sync over the network. Use NetworkCompatibilityToken to check if two peers can synchronize RealityKit scenes over the network. With this class, host applications can prevent incompatible clients from joining.
Client apps send a copy of their token to the host when attempting to connect to a host app. The host deserializes that token and calls compatibilityWith(_:) on NetworkCompatibilityToken.local. If compatibilityWith(_:) returns NetworkCompatibilityToken.Compatibility.compatible, the client and host can sync and it’s safe to proceed with the connection. If compatibilityWith(_:) returns any other value, the client that’s attempting to connect is incompatible and should be ignored.
A client running a MCNearbyServiceAdvertiser, for example, writes its own token into its discoveryInfo dictionary. When the host (running a MCNearbyServiceBrowser) discovers that client, it deserializes the client’s token from the discoverInfo dictionary and uses it to check compatibility before inviting the client to the MCSession.
Note
Even if two peers are compatible, scene synchronization can fail for other reasons, such as packet corruption or a poor network connection.
Topics
Retrieving Tokens
static let local: NetworkCompatibilityToken
A token containing the local peer’s networking compatibility info.
Checking Compatibility
func compatibilityWith(NetworkCompatibilityToken) -> NetworkCompatibilityToken.Compatibility
Compares network compatibility tokens between the local device and another device.
enum Compatibility
Indicates whether two devices running RealityKit are compatible and able to connect and sync scenes.
Serializing Tokens
init(from: Decoder) throws
Creates a new instance from a decoder.
func encode(to: Encoder) throws
Writes the token’s data into an encoder.
Relationships
Conforms To
Decodable
Encodable
See Also
Network Synchronization
class MultipeerConnectivityService
A service that provides scene synchronization among all peers in a multipeer connectivity session.
protocol SynchronizationService
An interface that enables entity synchronization among a group of local peers.
enum SynchronizationEvents
Events associated with network synchronization of scene information.
struct NetworkReceiveSystem
Beta
struct NetworkSendSystem
Beta
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is NetworkCompatibilityToken
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


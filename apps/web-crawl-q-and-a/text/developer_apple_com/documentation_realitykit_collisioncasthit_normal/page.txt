https://developer.apple.com/documentation/realitykit/collisioncasthit/normalSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func subscribe<E>(to: E.Type, on: (EventSource)?, componentType: (Component.Type)?, (E) -> Void) -> Cancellable
M
func publisher<E>(for: E.Type, on: (EventSource)?, componentType: (Component.Type)?) -> Scene.Publisher<E>
M
func subscribe<E>(to: E.Type, on: (EventSource)?, (E) -> Void) -> Cancellable
M
func publisher<E>(for: E.Type, on: (EventSource)?) -> Scene.Publisher<E>
Getting and Sending Events
r
P
SynchronizationService
P
var synchronizationService: (SynchronizationService)?
P
var position: SIMD3<Float>
Characterizing the Collision Cast Hit
P
var entity: Entity
Getting the Entity
S
CollisionCastHit
M
func convexCast(convexShape: ShapeResource, fromPosition: SIMD3<Float>, fromOrientation: simd_quatf, toPosition: SIMD3<Float>, toOrientation: simd_quatf, query: CollisionCastQueryType, mask: CollisionGroup, relativeTo: Entity?) -> [CollisionCastHit]
M
func raycast(from: SIMD3<Float>, to: SIMD3<Float>, query: CollisionCastQueryType, mask: CollisionGroup, relativeTo: Entity?) -> [CollisionCastHit]
M
func raycast(origin: SIMD3<Float>, direction: SIMD3<Float>, length: Float, query: CollisionCastQueryType, mask: CollisionGroup, relativeTo: Entity?) -> [CollisionCastHit]
Documentation
Open Menu
Swift
Instance Property
normal
The normal of the hit.
iOS 13.0+
iPadOS 13.0+
macOS 10.15+
Mac Catalyst 13.0+
visionOS 1.0+ Beta
var normal: SIMD3<Float> { get }
Discussion
The frame of reference for this point depends on the reference entity used in the call to either the raycast(origin:direction:length:query:mask:relativeTo:) method or the convexCast(convexShape:fromPosition:fromOrientation:toPosition:toOrientation:query:mask:relativeTo:) method that generated the hit.
See Also
Characterizing the Collision Cast Hit
var position: SIMD3<Float>
The position of the hit.
var distance: Float
The distance from the ray origin to the hit, or the convex shape travel distance.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is normal
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright Â© 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


https://developer.apple.com/documentation/realitykit/realityview/contenttransition(_:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func disableAutocorrection(Bool?) -> some View
M
func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View
M
func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View
M
func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View
M
func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View
M
func deleteDisabled(Bool) -> some View
M
func defaultScrollAnchor(UnitPoint?) -> some View
func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View
M
func contentShape<S>(S, eoFill: Bool) -> some View
M
func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View
M
func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View
M
func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View
M
func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View
M
func containerShape<T>(T) -> some View
M
func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View
M
func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View
Documentation
Open Menu
Swift
Instance Method
contentTransition(_:)
Modifies the view to use a given transition as its method of animating changes to the contents of its views.
RealityKit
SwiftUI
iOS 16.0+
iPadOS 16.0+
macOS 13.0+
Mac Catalyst 16.0+
tvOS 16.0+
watchOS 9.0+
visionOS 1.0+ Beta
func contentTransition(_ transition: ContentTransition) -> some View
Parameters
transition
The transition to apply when animating the content change.
Discussion
This modifier allows you to perform a transition that animates a change within a single view. The provided ContentTransition can present an opacity animation for content changes, an interpolated animation of the content’s paths as they change, or perform no animation at all.
Tip
The contentTransition(_:) modifier only has an effect within the context of an Animation.
In the following example, a Button changes the color and font size of a Text view. Since both of these properties apply to the paths of the text, the ContentTransition/interpolate transition can animate a gradual change to these properties through the entire transition. By contrast, the ContentTransition/opacity transition would simply fade between the start and end states.
private static let font1 = Font.system(size: 20)
private static let font2 = Font.system(size: 45)


@State private var color = Color.red
@State private var currentFont = font1


var body: some View {
    VStack {
        Text("Content transition")
            .foregroundColor(color)
            .font(currentFont)
            .contentTransition(.interpolate)
        Spacer()
        Button("Change") {
            withAnimation(Animation.easeInOut(duration: 5.0)) {
                color = (color == .red) ? .green : .red
                currentFont = (currentFont == font1) ? font2 : font1
            }
        }
    }
}
This example uses an ease-in–ease-out animation with a five-second duration to make it easier to see the effect of the interpolation. The figure below shows the Text at the beginning of the animation, halfway through, and at the end.
Time
Display
Start
Middle
End
To control whether content transitions use GPU-accelerated rendering, set the value of the EnvironmentValues/contentTransitionAddsDrawingGroup environment variable.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is contentTransition(_:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


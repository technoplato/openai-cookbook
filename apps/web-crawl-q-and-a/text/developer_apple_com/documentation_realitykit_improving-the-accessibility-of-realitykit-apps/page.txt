https://developer.apple.com/documentation/realitykit/improving-the-accessibility-of-realitykit-appsSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
Type Methods
M
func playAnimation(AnimationResource, transitionDuration: TimeInterval, blendLayerOffset: Int, separateAnimatedValue: Bool, startsPaused: Bool, clock: CMClockOrTimebase?, handoffType: AnimationHandoffType) -> AnimationPlaybackController
Beta
M
func generateCollisionShapes(recursive: Bool, static: Bool)
Beta
Instance Methods
P
var spatialAudio: SpatialAudioComponent?
Beta
P
var channelAudio: ChannelAudioComponent?
Beta
P
var ambientAudio: AmbientAudioComponent?
Enabling Accessibility Features
P
var hashValue: Int
M
func hash(into: inout Hasher)
static func != (Self, Self) -> Bool
static func == (Entity, Entity) -> Bool
Comparing Entities
P
var debugDescription: String
Describing the Entity
Documentation
Open Menu
Swift
Article
Improving the Accessibility of RealityKit Apps
Incorporate assistive technologies in your augmented reality app.
Overview
To support assistive technologies such as VoiceOver in your RealityKit apps, set the properties on each visible Entity in your scene. You can configure accessibility in Reality Composer, and in code.
Note
To see an example of accessibility support in a RealityKit app, check out the doc:controlling-entity-collisions-in-realitykit sample code project.
Configure Accessibility in Reality Composer
When you create a scene in Reality Composer, you can configure the accessibility properties of your entities right in the properties inspector. Select one or more entities in your scene and click the Accessibility Enabled checkbox in the properties inspector. In the Label field, give the entity a name to be used by assistive technologies. In the Detailed Description field, you can optionally add a more in-depth description.
Configure Accessibility in Code
You can also configure entities to work with assistive technologies in code. To enable accessibility support for an Entity, set its isAccessibilityElement property to True and provide a short descriptive name using accessibilityLabel. If you want to provide a more detaied description, set accessibilityDescription.
Because these properties were introduced in iOS 14, any code that sets or reads their values should be wrapped in an availability macro if your project’s deployment target is iOS 13. Setting these values on an older version of iOS results in a runtime exception.
if #available(iOS 14.0, *) {
    ball.isAccessibilityElement = true
    ball.accessibilityLabel = "a bowling ball"
    ball.accessibilityDescription = "Tap and drag to roll the ball towards the pins."
}
See Also
Enabling Accessibility Features
var isAccessibilityElement: Bool
A Boolean value indicating whether the receiver is an accessibility element that an assistive application can access.
var accessibilityLabel: String?
A succinct label that identifies the purpose of the image.
Deprecated
var accessibilityDescription: String?
A longer description of the entity for use by assistive technologies.
Deprecated
Current page is Improving the Accessibility of RealityKit Apps
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


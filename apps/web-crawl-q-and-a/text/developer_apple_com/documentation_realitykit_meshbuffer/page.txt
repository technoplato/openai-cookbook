https://developer.apple.com/documentation/realitykit/meshbufferSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
init([Element])
M
init<S>(S)
M
init([Element])
M
init<S>(S)
M
init<S>(S)
M
init<S>(S)
M
init([Element])
Mutable mesh buffers
S
MeshModelCollection
S
MeshInstanceCollection
S
MeshPartCollection
C
MeshResource
Mesh resources
C
ShapeResource
Primitive shapes
Documentation
Open Menu
Swift
Structure
MeshBuffer
Mesh buffer containing elements of any type.
iOS 15.0+
iPadOS 15.0+
macOS 12.0+
Mac Catalyst 15.0+
visionOS 1.0+ Beta
struct MeshBuffer<Element>
Topics
Creating a Mesh Buffer
init<S>(S)
Create a buffer from any sequence of elements.
Available when Element is SIMD4<Float>.
init([Element])
Create buffer from an array of elements.
Available when Element is UInt32.
init([Element])
Create buffer from an array of elements.
Available when Element is Float.
init<S>(S)
Create a buffer from any sequence of elements.
Available when Element is UInt16.
init([Element])
Create buffer from an array of elements.
Available when Element is Double.
init<S>(S)
Create a buffer from any sequence of elements.
Available when Element is SIMD2<Float>.
init<S>(S)
Create a buffer from any sequence of elements.
Available when Element is Int16.
init<S>(S)
Create a buffer from any sequence of elements.
Available when Element is SIMD3<Float>.
init([Element])
Create buffer from an array of elements.
Available when Element is Int32.
init([Element])
Create buffer from an array of elements.
Available when Element is UInt16.
init<S>(S)
Create a buffer from any sequence of elements.
Available when Element is Int32.
init([Element])
Create buffer from an array of elements.
Available when Element is SIMD2<Float>.
init<S>(S)
Create a buffer from any sequence of elements.
Available when Element is UInt8.
init([Element])
Create buffer from an array of elements.
Available when Element is SIMD3<Float>.
init<S>(S)
Create a buffer from any sequence of elements.
Available when Element is UInt32.
init<S>(S)
Create a buffer from any sequence of elements.
Available when Element is Float.
init<S>(S)
Create a buffer from any sequence of elements.
Available when Element is Int8.
init([Element])
Create buffer from an array of elements.
Available when Element is SIMD4<Float>.
init<S>(S)
Create a buffer from any sequence of elements.
Available when Element is Double.
init([Element])
Create buffer from an array of elements.
Available when Element is UInt8.
init([Element])
Create buffer from an array of elements.
Available when Element is Int8.
init([Element])
Create buffer from an array of elements.
Available when Element is Int16.
init(elements: [Element], indices: [UInt32])
Create buffer from an array of element values and an array of indices into that value array.
Available when Element is UInt16.
init(elements: [Element], indices: [UInt32])
Create buffer from an array of element values and an array of indices into that value array.
Available when Element is Float.
init(elements: [Element], indices: [UInt32])
Create buffer from an array of element values and an array of indices into that value array.
Available when Element is Int32.
init(elements: [Element], indices: [UInt32])
Create buffer from an array of element values and an array of indices into that value array.
Available when Element is UInt8.
init(elements: [Element], indices: [UInt32])
Create buffer from an array of element values and an array of indices into that value array.
Available when Element is SIMD3<Float>.
init(elements: [Element], indices: [UInt32])
Create buffer from an array of element values and an array of indices into that value array.
Available when Element is SIMD4<Float>.
init(elements: [Element], indices: [UInt32])
Create buffer from an array of element values and an array of indices into that value array.
Available when Element is SIMD2<Float>.
init(elements: [Element], indices: [UInt32])
Create buffer from an array of element values and an array of indices into that value array.
Available when Element is UInt32.
init(elements: [Element], indices: [UInt32])
Create buffer from an array of element values and an array of indices into that value array.
Available when Element is Int8.
init(elements: [Element], indices: [UInt32])
Create buffer from an array of element values and an array of indices into that value array.
Available when Element is Int16.
init(elements: [Element], indices: [UInt32])
Create buffer from an array of element values and an array of indices into that value array.
Available when Element is Double.
Describing a Mesh
let count: Int
The number of elements in the buffer.
var elements: [Element]
Access the buffer as an array. This may create a copy if the data are not already an array.
typealias Element
A type representing the sequence’s elements.
var rate: MeshBuffers.Rate
Rate of the buffer.
struct AnyMeshBuffer
Mesh buffer stored in the container.
enum MeshBuffers
An object that holds the data for an model entity’s mesh.
struct MeshDescriptor
An object that defines a mesh.
struct MeshInstanceCollection
An object that holds a collection of mesh resource instances.
struct MeshModelCollection
An object that holds a collection of mesh models.
struct MeshPartCollection
An object that holds a collection of mesh parts.
Iterating the Buffer Elements
func makeIterator() -> MeshBuffer<Element>.Iterator
Returns an iterator over the elements of this sequence.
struct Iterator
A type that provides the sequence’s iteration interface and encapsulates its iteration state.
func forEach((Element, Element) throws -> Void) rethrows
Iterate over pairs of elements.
func forEach((Element, Element, Element) throws -> Void) rethrows
Iterate over three elements per step.
func forEach((Element, Element, Element, Element) throws -> Void) rethrows
Iterate over four elements per step.
func usingRate(MeshBuffers.Rate) -> MeshBuffer<Element>
New object with updated rate.
Initializers
init([Element])
Create buffer from an array of elements.
Available when Element is MeshJointInfluence.
Beta
init<S>(S)
Create a buffer from any sequence of elements.
Available when Element is MeshJointInfluence.
Beta
init(elements: [Element], indices: [UInt32])
Create buffer from an array of element values and an array of indices into that value array.
Available when Element is MeshJointInfluence.
Beta
Default Implementations
API Reference
Sequence Implementations
Relationships
Conforms To
Sequence
See Also
Mutable mesh buffers
struct MeshDescriptor
An object that defines a mesh.
struct AnyMeshBuffer
Mesh buffer stored in the container.
protocol MeshBufferContainer
Conforming objects contain a table of mesh buffers.
protocol MeshBufferSemantic
A protocol that holds an identifier value for mesh buffers.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is MeshBuffer
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


https://developer.apple.com/documentation/createmlcomponents/slidingwindowtransformer/windowsequence/dropfirst(_:)

Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
S
VideoReader
S
Downsampler
TemporalTransformer Implementations
Default Implementations
T
SlidingWindowTransformer.OutputSequence
Type Aliases
M
func encode(to: Encoder) throws
func applied<S>(to: S, eventHandler: EventHandler?) throws -> SlidingWindowTransformer<Input>.WindowSequence
func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result
func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>
func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>
func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>
func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>
M
func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>
M
func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool
M
func contains(Self.Element) async rethrows -> Bool
M
func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>
M
func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>
M
func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool
Instance Methods
AsyncSequence Implementations
Documentation
Open Menu
Swift
Instance Method
dropFirst(_:)
Omits a specified number of elements from the base asynchronous sequence, then passes through all remaining elements.
Create ML Components
Swift
iOS 13.0+
iPadOS 13.0+
macOS 10.15+
Mac Catalyst 13.0+
tvOS 13.0+
watchOS 6.0+
visionOS 1.0+ Beta
func dropFirst(_ count: Int = 1) -> AsyncDropFirstSequence<Self>
Parameters
count
The number of elements to drop from the beginning of the sequence. count must be greater than or equal to zero.
Return Value
An asynchronous sequence that drops the first count elements from the base sequence.
Discussion
Use dropFirst(_:) when you want to drop the first n elements from the base sequence and pass through the remaining elements.
In this example, an asynchronous sequence called Counter produces Int values from 1 to 10. The dropFirst(_:) method causes the modified sequence to ignore the values 1 through 3, and instead emit 4 through 10:
for await number in Counter(howHigh: 10).dropFirst(3) {
    print(number, terminator: " ")
}
// Prints "4 5 6 7 8 9 10 "
If the number of elements to drop exceeds the number of elements in the sequence, the result is an empty sequence.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is dropFirst(_:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright Â© 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


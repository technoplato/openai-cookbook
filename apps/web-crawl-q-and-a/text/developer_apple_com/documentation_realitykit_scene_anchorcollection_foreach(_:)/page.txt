https://developer.apple.com/documentation/realitykit/scene/anchorcollection/foreach(_:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
Finding Anchors
M
func replaceAll<S>(S)
M
func replaceAll([HasAnchoring])
Replacing Anchors
M
func removeAll(keepCapacity: Bool)
M
func removeAll()
M
func remove(at: Int)
T
Scene.AnchorCollection.Element
T
Scene.AnchorCollection.Iterator
M
func makeIterator() -> Scene.AnchorCollection.Iterator
Iterating Over the Collection
M
func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool
M
func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool
M
func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool
Comparing Collections
Documentation
Open Menu
Swift
Instance Method
forEach(_:)
Calls the given closure on each element in the sequence in the same order as a for-in loop.
RealityKit
Swift
iOS 13.0+
iPadOS 13.0+
macOS 10.15+
Mac Catalyst 13.0+
visionOS 1.0+ Beta
func forEach(_ body: (Self.Element) throws -> Void) rethrows
Parameters
body
A closure that takes an element of the sequence as a parameter.
Overview
The two loops in the following example produce the same output:
let numberWords = ["one", "two", "three"]
for word in numberWords {
    print(word)
}
// Prints "one"
// Prints "two"
// Prints "three"


numberWords.forEach { word in
    print(word)
}
// Same as above
Using the forEach method is distinct from a for-in loop in two important ways:
You cannot use a break or continue statement to exit the current call of the body closure or skip subsequent calls.
Using the return statement in the body closure will exit only from the current call to body, not from any outer scope, and won’t skip subsequent calls.
See Also
Iterating Over the Collection
func makeIterator() -> Scene.AnchorCollection.Iterator
Returns an iterator over the elements of the collection.
typealias Iterator
An iterator that presents the elements of the collection.
typealias Element
The type of element traversed by the iterator.
func enumerated() -> EnumeratedSequence<Self>
Returns a sequence of pairs (n, x), where n represents a consecutive integer starting at zero and x represents an element of the sequence.
var underestimatedCount: Int
A value less than or equal to the number of elements in the collection.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is forEach(_:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


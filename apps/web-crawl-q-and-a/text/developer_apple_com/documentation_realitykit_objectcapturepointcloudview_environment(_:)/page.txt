https://developer.apple.com/documentation/realitykit/objectcapturepointcloudview/environment(_:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View
M
func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View
M
func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View
M
func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View
M
func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View
M
func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View
M
func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View
func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View
M
func edgesIgnoringSafeArea(Edge.Set) -> some View
M
func dynamicTypeSize(DynamicTypeSize) -> some View
M
func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View
M
func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View
M
func draggable<V, T>(() -> T, preview: () -> V) -> some View
M
func draggable<T>(() -> T) -> some View
M
func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View
M
func disclosureGroupStyle<S>(S) -> some View
Documentation
Open Menu
Swift
Instance Method
environment(_:)
Sets an observable object of the environment to the given value.
RealityKit
SwiftUI
iOS 17.0+ Beta
iPadOS 17.0+ Beta
macOS 14.0+ Beta
Mac Catalyst 17.0+ Beta
tvOS 17.0+ Beta
watchOS 10.0+ Beta
visionOS 1.0+ Beta
func environment<T>(_ object: T?) -> some View where T : AnyObject, T : Observable
Parameters
object
The new object to set for this object’s type in the environment, or nil to clear the object from the environment.
Return Value
A view that has the given object set in its environment.
Discussion
Important
This modifier only accepts objects conforming to the Observable protocol. For reading environment objects that conform to ObservableObject, use View/environmentObject(_:) instead.
Use this modifier to set custom objects in a view’s environment. For example, you could set the environment object for a custom Profile class:
@Observable final class Profile { ... }


struct RootView: View {
    @State private var currentProfile: Profile?


    var body: some View {
        ContentView()
            .environment(currentProfile)
    }
}
You then read the object inside ContentView or one of its descendants using the Environment property wrapper:
struct ContentView: View {
    @Environment(Account.self) private var currentAccount: Account


    var body: some View { ... }
}
The View/environment(_:)-9b2sq modifier affects the given view, as well as that view’s descendant views. It has no effect outside the view hierarchy on which you call it.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is environment(_:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


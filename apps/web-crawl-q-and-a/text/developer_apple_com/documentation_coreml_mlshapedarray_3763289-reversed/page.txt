https://developer.apple.com/documentation/coreml/mlshapedarray/3763289-reversed

Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func sorted(by: (MLShapedArraySlice<Scalar>, MLShapedArraySlice<Scalar>) -> Bool) -> [MLShapedArraySlice<Scalar>]
M
func sorted<S, Comparator>(using: S) -> [MLShapedArraySlice<Scalar>]
M
func sorted<Comparator>(using: Comparator) -> [MLShapedArraySlice<Scalar>]
M
func suffix(from: Int) -> MLShapedArraySlice<Scalar>
M
func suffix(Int) -> MLShapedArraySlice<Scalar>
M
func prefix(while: (MLShapedArraySlice<Scalar>) -> Bool) -> MLShapedArraySlice<Scalar>
M
func prefix(through: Int) -> MLShapedArraySlice<Scalar>
func max(by: (MLShapedArraySlice<Scalar>, MLShapedArraySlice<Scalar>) -> Bool) -> MLShapedArraySlice<Scalar>?
func min(by: (MLShapedArraySlice<Scalar>, MLShapedArraySlice<Scalar>) -> Bool) -> MLShapedArraySlice<Scalar>?
func split(separator: MLShapedArraySlice<Scalar>, maxSplits: Int, omittingEmptySubsequences: Bool) -> [MLShapedArraySlice<Scalar>]
func split(separator: MLShapedArraySlice<Scalar>, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<MLShapedArraySlice<Scalar>>]
func split<C>(separator: C, maxSplits: Int, omittingEmptySubsequences: Bool) -> [MLShapedArraySlice<Scalar>]
func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (MLShapedArraySlice<Scalar>) -> Bool) -> [MLShapedArraySlice<Scalar>]
M
func joined<Separator>(separator: Separator) -> JoinedSequence<MLShapedArray<Scalar>>
M
func joined() -> FlattenSequence<MLShapedArray<Scalar>>
Generating a Shaped Array
M
func withContiguousMutableStorageIfAvailable<R>((inout UnsafeMutableBufferPointer<MLShapedArraySlice<Scalar>>) -> R) -> R?
M
func shuffle<T>(using: inout T)
M
func shuffle()
M
func reverse()
M
func sort(by: (MLShapedArraySlice<Scalar>, MLShapedArraySlice<Scalar>) -> Bool)
Documentation
Open Menu
Swift
Instance Method
reversed()
Returns a view presenting the elements of the collection in reverse order.
iOS 15.0+
iPadOS 15.0+
macOS 12.0+
Mac Catalyst 15.0+
tvOS 15.0+
watchOS 8.0+
visionOS 1.0+ Beta
Xcode 13.0+
func reversed() -> ReversedCollection<MLShapedArray<Scalar>>
Discussion
You can reverse a collection without allocating new space for its elements by calling this reversed() method. A ReversedCollection instance wraps an underlying collection and provides access to its elements in reverse order. This example prints the characters of a string in reverse order:
let word = "Backwards"
for char in word.reversed() {
    print(char, terminator: "")
}
// Prints "sdrawkcaB"
If you need a reversed collection of the same type, you may be able to use the collection’s sequence-based or collection-based initializer. For example, to get the reversed version of a string, reverse its characters and initialize a new String instance from the result.
let reversedWord = String(word.reversed())
print(reversedWord)
// Prints "sdrawkcaB"
Complexity: O(1)
See Also
Generating a Shaped Array
func joined() -> FlattenSequence<MLShapedArray<Scalar>>
Returns the elements of this sequence of sequences, concatenated.
func joined<Separator>(separator: Separator) -> JoinedSequence<MLShapedArray<Scalar>>
Returns the concatenated elements of this sequence of sequences, inserting the given separator between each element.
func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (MLShapedArraySlice<Scalar>) -> Bool) -> [MLShapedArraySlice<Scalar>]
Returns the longest possible subsequences of the collection, in order, that don’t contain elements satisfying the given predicate.
func split<C>(separator: C, maxSplits: Int, omittingEmptySubsequences: Bool) -> [MLShapedArraySlice<Scalar>]
Returns the longest possible subsequences of the collection, in order, around elements equal to the given separator.
func split(separator: MLShapedArraySlice<Scalar>, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<MLShapedArraySlice<Scalar>>]
Returns the longest possible subsequences of the sequence, in order, around elements equal to the given element.
func split(separator: MLShapedArraySlice<Scalar>, maxSplits: Int, omittingEmptySubsequences: Bool) -> [MLShapedArraySlice<Scalar>]
Returns the longest possible subsequences of the collection, in order, around elements equal to the given element.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is reversed()
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


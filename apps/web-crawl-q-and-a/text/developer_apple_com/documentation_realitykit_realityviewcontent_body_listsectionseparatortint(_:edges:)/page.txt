https://developer.apple.com/documentation/realitykit/realityviewcontent/body/listsectionseparatortint(_:edges:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
S
RealityView
Beta
Creating a reality view
M
init(make: (inout RealityViewContent) async -> Void, update: ((inout RealityViewContent) -> Void)?)
M
init<A>(make: (inout RealityViewContent, RealityViewAttachments) async -> Void, update: ((inout RealityViewContent, RealityViewAttachments) -> Void)?, attachments: () -> A)
M
init<P>(make: (inout RealityViewContent) async -> Void, update: ((inout RealityViewContent) -> Void)?, placeholder: () -> P)
M
init<A, P>(make: (inout RealityViewContent, RealityViewAttachments) async -> Void, update: ((inout RealityViewContent, RealityViewAttachments) -> Void)?, placeholder: () -> P, attachments: () -> A)
P
var body: some View
Working with content
func subscribe<E>(to: E.Type, on: (EventSource)?, componentType: (Component.Type)?, (E) -> Void) -> EventSubscription
S
RealityViewAttachmentContent
S
RealityViewEntityCollection
Type Aliases
T
RealityView.AttachmentContent
T
RealityView.Body
T
RealityView.DefaultPlaceholder
Default Implementations
Documentation
Open Menu
Swift
Instance Method
listSectionSeparatorTint(_:edges:)
Sets the tint color associated with a section.
RealityKit
SwiftUI
iOS 15.0+
iPadOS 15.0+
macOS 13.0+
Mac Catalyst 15.0+
visionOS 1.0+ Beta
func listSectionSeparatorTint(
    _ color: Color?,
    edges: VerticalEdge.Set = .all
) -> some View
Parameters
color
The color to use to tint the section separators, or nil to use the default color for the current list style.
edges
The set of row edges for which the tint applies. The list style might decide to not display certain separators, typically the top edge. The default is VerticalEdge/Set/all.
Discussion
Separators can be presented above and below a section. You can specify to which edge this preference should apply.
This modifier expresses a preference to the containing List. The list style is the final arbiter for the separator tint.
The following example shows a simple grouped list whose section separators are tinted based on section-specific data:
List {
    ForEach(garage) { garage in
        Section(header: Text(garage.location)) {
            ForEach(garage.cars) { car in
                Text(car.model)
                    .listRowSeparatorTint(car.brandColor)
            }
        }
        .listSectionSeparatorTint(
            garage.cars.last?.brandColor, edges: .bottom)
    }
}
.listStyle(.grouped)
To change the visibility and tint color for a row separator, use View/listRowSeparator(_:edges:) and View/listRowSeparatorTint(_:edges:). To hide a section separator, use View/listSectionSeparator(_:edges:).
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is listSectionSeparatorTint(_:edges:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright Â© 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


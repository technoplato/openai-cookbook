https://developer.apple.com/documentation/createml/data-table-derivation-operations

Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
Selecting Rows
M
func randomSample(by: Double, seed: Int) -> MLDataTable
M
func exclude<T>(T..., of: String) -> MLDataTable
M
func dropDuplicates() -> MLDataTable
M
func dropMissing() -> MLDataTable
Discarding Rows
subscript(MLUntypedColumn) -> MLDataTable
Generating New Data Tables
M
func append(contentsOf: MLDataTable)
Appending to a Data Table
M
func removeColumn(named: String)
Removing Columns
M
func renameColumn(named: String, to: String)
Renaming Columns
subscript(String) -> MLUntypedColumn
Documentation
Open Menu
Data Table Derivation Operations
Create new data tables by manipulating an existing data table.
Overview
Use these methods to preprocess your data programmatically in Create ML before training a model. For example, you can create a data table by merging two data tables, fill in missing values, and then discarding duplicate rows.
All of these methods create new data tables, leaving the original data table unmodified.
Topics
Aggregating Rows
func group<S>(columnsNamed: String..., aggregators: S) -> MLDataTable
Creates a new data table with the given columns and adds a new column for each of the given aggregators.
struct Aggregator
A collection of column operations you can use with a data table’s group method.
Sorting Rows
func sort(columnNamed: String, byIncreasingOrder: Bool) -> MLDataTable
Creates a new data table by sorting the table by the given column.
Splitting a Data Table
func randomSplit(by: Double, seed: Int) -> (MLDataTable, MLDataTable)
Creates two mutually exclusive, randomly divided subsets of the table.
Merging Data Tables
func join(with: MLDataTable, on: String..., type: MLDataTable.JoinType) -> MLDataTable
Creates a new data table by merging two data tables by the given columns.
enum JoinType
Join types available for MLDataTable join operations.
Filling in Missing Values
func fillMissing(columnNamed: String, with: MLDataValue) -> MLDataTable
Creates a modified copy of the table by filling in the missing values in the named column.
Masking Rows
subscript(MLDataColumn<Bool>) -> MLDataTable
Creates a subset of the table by masking the rows with the given column of Booleans.
subscript(MLUntypedColumn) -> MLDataTable
Creates a subset of the table by masking the rows with the given untyped column.
Discarding Rows
func dropMissing() -> MLDataTable
Creates a subset of the table by removing any row missing one or more values.
func dropDuplicates() -> MLDataTable
Creates a subset of the table by removing all duplicate rows.
func exclude<T>(T..., of: String) -> MLDataTable
Creates a subset of the table by excluding the rows that contain any of the given values in the given column.
func randomSample(by: Double, seed: Int) -> MLDataTable
Creates a subset of the table by randomly selecting the given proportion of rows.
Selecting Rows
subscript(Range<Int>) -> MLDataTable
Creates a subset of the table given a range of rows.
subscript<R>(R) -> MLDataTable
Creates a subset of the table given a range expression of rows.
func prefix(Int) -> MLDataTable
Creates a subset of the table given a number of initial rows.
func suffix(Int) -> MLDataTable
Creates a subset of the table given a number of final rows.
func intersect<T>(T..., of: String) -> MLDataTable
Creates a subset of the table by including the rows that contain any of the given values in the given column.
Selecting Columns
subscript<S>(S) -> MLDataTable
Creates a subset of the table given a sequence of column names.
Compacting Rows
func condense(columnNamed: String, to: String) -> MLDataTable
Creates a new data table where duplicate row values in the given column are condensed into a new sequence-type column.
Expanding Rows
func expand(columnNamed: String, to: String) -> MLDataTable
Creates a new data table where duplicate row values in the given column are condensed into a new sequence-type column.
Compacting Columns
func pack(columnsNamed: String..., to: String, type: MLDataTable.PackType, filling: MLDataValue) -> MLDataTable
Creates a new data table with an additional column that contains the combined values of the given columns.
enum PackType
The storage operations for combining multiple columns into one.
Expanding Columns
func unpack(columnNamed: String, valueTypes: [MLDataValue.ValueType]?, indexSubset: [Int]?, keySubset: [String]?) -> MLDataTable
Creates a new data table with additional columns that contain the unpacked collections in the given column.
Current page is Data Table Derivation Operations
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


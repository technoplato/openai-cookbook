https://developer.apple.com/documentation/coreml/mlmodel/2880279-init

Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
C
MLKey
C
MLModelConfiguration
Supporting Types
C
MLParameterKey
M
func parameterValue(for: MLParameterKey) -> Any
C
MLModelDescription
P
var modelDescription: MLModelDescription
M
class func load(contentsOf: URL, configuration: MLModelConfiguration, completionHandler: (Result<MLModel, Error>) -> Void)
M
class func load(MLModelAsset, configuration: MLModelConfiguration, completionHandler: (MLModel?, Error?) -> Void)
M
class func load(contentsOf: URL, configuration: MLModelConfiguration) -> MLModel
Loading a Model
C
MLModel
Integrating a Core ML Model into Your App
Updating a Model File to a Model Package
Getting a Core ML Model
Documentation
Open Menu
Initializer
init(contentsOf:)
Creates a Core ML model instance from a compiled model file.
iOS 11.0+
iPadOS 11.0+
macOS 10.13+
Mac Catalyst 13.1+
tvOS 11.0+
watchOS 4.0+
visionOS 1.0+ Beta
convenience init(contentsOf url: URL) throws
Parameters
url
The path to a compiled model file (ModelName.mlmodelc), typically with the URL that compileModel(at:) returns.
Discussion
In most cases, your app won't need to create a model object directly. Consider the programmer-friendly wrapper class that Xcode automatically generates when you add a model to your project (see Integrating a Core ML Model into Your App).
If the wrapper class doesn't meet your app's needs or you need to customize the model's configuration, use this initializer to create a model object from any compiled model file you can access. Typically, you use this initializer after your app has downloaded and compiled a model, which is one technique for saving space in your app (see Downloading and Compiling a Model on the User’s Device).
See Also
Loading a Model
class func load(contentsOf: URL, configuration: MLModelConfiguration) -> MLModel
Construct a model asynchronously from a compiled model asset.
class func load(MLModelAsset, configuration: MLModelConfiguration, completionHandler: (MLModel?, Error?) -> Void)
Construct a model asynchronously from a compiled model asset.
class func load(contentsOf: URL, configuration: MLModelConfiguration, completionHandler: (Result<MLModel, Error>) -> Void)
Creates a Core ML model instance asynchronously from a compiled model file, a custom configuration, and a completion handler.
init(contentsOf: URL, configuration: MLModelConfiguration)
Creates a Core ML model instance from a compiled model file and a custom configuration.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is init(contentsOf:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


https://developer.apple.com/documentation/realitykit/objectcapturepointcloudview/contextmenu(menuitems:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func disclosureGroupStyle<S>(S) -> some View
M
func disabled(Bool) -> some View
M
func disableAutocorrection(Bool?) -> some View
M
func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View
M
func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View
M
func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View
M
func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View
M
func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View
M
func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View
M
func contentTransition(ContentTransition) -> some View
M
func contentShape<S>(S, eoFill: Bool) -> some View
M
func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View
M
func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View
M
func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View
M
func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View
Documentation
Open Menu
Swift
Instance Method
contextMenu(menuItems:)
Adds a context menu to a view.
RealityKit
SwiftUI
iOS 13.0+
iPadOS 13.0+
macOS 10.15+
Mac Catalyst 13.0+
tvOS 14.0+
watchOS 6.0–7.0 Deprecated
visionOS 1.0+ Beta
func contextMenu<MenuItems>(@ViewBuilder menuItems: () -> MenuItems) -> some View where MenuItems : View
Parameters
menuItems
A closure that produces the menu’s contents. You can deactivate the context menu by returning nothing from the closure.
Return Value
A view that can display a context menu.
Discussion
Use this modifier to add a context menu to a view in your app’s user interface. Compose the menu by returning controls like Button, Toggle, and Picker from the menuItems closure. You can also use Menu to define submenus or Section to group items.
The following example creates a Text view that has a context menu with two buttons:
Text("Turtle Rock")
    .padding()
    .contextMenu {
        Button {
            // Add this item to a list of favorites.
        } label: {
            Label("Add to Favorites", systemImage: "heart")
        }
        Button {
            // Open Maps and center it on this item.
        } label: {
            Label("Show in Maps", systemImage: "mappin")
        }
    }
People can activate the menu with an action like Control-clicking, or by using the touch and hold gesture in iOS and iPadOS:
The system dismisses the menu if someone makes a selection, or taps or clicks outside the menu.
If you want to show a preview beside the menu, use View/contextMenu(menuItems:preview:). To add a context menu to a container that supports selection, like a List or a Table, and to distinguish between menu activation on a selection and activation in an empty area of the container, use View/contextMenu(forSelectionType:menu:primaryAction:).
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is contextMenu(menuItems:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


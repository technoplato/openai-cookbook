https://developer.apple.com/documentation/realitykit/realityviewentitycollectionSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
Default Implementations
T
RealityViewEntityCollection.SubSequence
T
RealityViewEntityCollection.Iterator
T
RealityViewEntityCollection.Indices
T
RealityViewEntityCollection.Index
T
RealityViewEntityCollection.Element
Type Aliases
r
P
RealityViewContentProtocol
S
RealityViewContent
Working with content
P
var body: some View
M
init<A, P>(make: (inout RealityViewContent, RealityViewAttachments) async -> Void, update: ((inout RealityViewContent, RealityViewAttachments) -> Void)?, placeholder: () -> P, attachments: () -> A)
M
init<P>(make: (inout RealityViewContent) async -> Void, update: ((inout RealityViewContent) -> Void)?, placeholder: () -> P)
M
init<A>(make: (inout RealityViewContent, RealityViewAttachments) async -> Void, update: ((inout RealityViewContent, RealityViewAttachments) -> Void)?, attachments: () -> A)
M
init(make: (inout RealityViewContent) async -> Void, update: ((inout RealityViewContent) -> Void)?)
Documentation
Open Menu
Swift
Structure
RealityViewEntityCollection
A collection of entities in a RealityView.
RealityKit
SwiftUI
visionOS 1.0+ Beta
struct RealityViewEntityCollection
Overview
This collection is used by entities.
Topics
Instance Properties
var count: Int
The number of elements in the collection.
var endIndex: Int
The collection’s “past the end” position—that is, the position one greater than the last valid subscript argument.
var startIndex: Int
The position of the first element in a nonempty collection.
Instance Methods
func append<S>(contentsOf: S)
Adds the specified sequence of entities to the end of this collection, in order.
func index(after: Int) -> Int
Returns the position immediately after the given index.
func insert<S>(contentsOf: S, beforeIndex: Int)
Adds the specified sequence of entities to this collection in order, directly before the entity at the given index.
func remove(Entity)
Removes the entity from the collection.
func remove(at: Int)
Removes the entity at the given index from this collection.
func removeAll()
Removes all entities from this collection.
func replaceAll<S>(S)
Replaces all entities in this collection with those from the given sequence.
Subscripts
subscript(Int) -> Entity
Accesses the element at the specified position.
Type Aliases
typealias Element
A type representing the sequence’s elements.
typealias Index
A type that represents a position in the collection.
typealias Indices
A type that represents the indices that are valid for subscripting the collection, in ascending order.
typealias Iterator
A type that provides the collection’s iteration interface and encapsulates its iteration state.
typealias SubSequence
A collection representing a contiguous subrange of this collection’s elements. The subsequence shares indices with the original collection.
Default Implementations
API Reference
Collection Implementations
API Reference
EntityCollection Implementations
API Reference
Sequence Implementations
Relationships
Conforms To
Collection
EntityCollection
Sequence
See Also
Working with content
struct RealityViewContent
The content of a RealityView that is displayed inline.
Beta
protocol RealityViewContentProtocol
A protocol representing the content of a RealityView.
Beta
struct RealityViewAttachmentContent
A view that represents the contents of a RealityView with attachments.
Beta
struct RealityViewDefaultPlaceholder
A view that represents the default placeholder for a RealityView.
Beta
struct RealityViewAttachmentContent
A view that represents the contents of a RealityView with attachments.
Beta
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is RealityViewEntityCollection
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


https://developer.apple.com/documentation/realitykit/physicallybasedmaterial/opacity/init(scale:texture:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
P
var anisotropyLevel: PhysicallyBasedMaterial.AnisotropyLevel
Adding Anisotropy
S
PhysicallyBasedMaterial.ClearcoatRoughness
P
var clearcoatRoughness: PhysicallyBasedMaterial.ClearcoatRoughness
S
PhysicallyBasedMaterial.Clearcoat
P
var clearcoat: PhysicallyBasedMaterial.Clearcoat
S
PhysicallyBasedMaterial.SheenColor
M
init(floatLiteral: Float)
Creating an Opacity Object
S
PhysicallyBasedMaterial.Opacity
P
var opacityThreshold: Float?
E
case transparent(opacity: PhysicallyBasedMaterial.Opacity)
E
case opaque
Specifying Opacity
M
init(blending: CustomMaterial.Blending)
Documentation
Open Menu
Swift
Initializer
init(scale:texture:)
Creates an opacity object using a single value or a texture.
iOS 15.0+
iPadOS 15.0+
macOS 12.0+
Mac Catalyst 15.0+
visionOS 1.0+ Beta
init(
    scale: Float = 1.0,
    texture: PhysicallyBasedMaterial.Texture? = nil
)
Parameters
scale
The opacity value for the entire material.
texture
The opacity values as a UV-mapped image.
Discussion
This initializer allows you to create an instance using either a single value for the entire material or a UV-mapped image. If texture is non-nil, RealityKit uses that image to determine the material’s opacity and ignores scale. If texture is nil, then it uses scale for the entire material.
See Also
Creating an Opacity Object
init(floatLiteral: Float)
Creates an opacity object using a single value.
init(CustomMaterial.Opacity)
Creates an opacity object using a custom material’s opacity property.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is init(scale:texture:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


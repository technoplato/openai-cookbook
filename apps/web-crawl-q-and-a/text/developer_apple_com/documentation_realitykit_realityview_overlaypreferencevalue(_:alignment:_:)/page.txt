https://developer.apple.com/documentation/realitykit/realityview/overlaypreferencevalue(_:alignment:_:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View
M
func presentationBackground<S>(S) -> some View
M
func preferredSurroundingsEffect(SurroundingsEffect?) -> some View
M
func preferredColorScheme(ColorScheme?) -> some View
M
func preference<K>(key: K.Type, value: K.Value) -> some View
M
func position(x: CGFloat, y: CGFloat) -> some View
M
func position(CGPoint) -> some View
func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View
func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View
func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View
func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View
func perspectiveRotationEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View
M
func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View
M
func overlay<V>(alignment: Alignment, content: () -> V) -> some View
M
func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View
M
func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View
M
func overlay<Overlay>(Overlay, alignment: Alignment) -> some View
M
func ornament<Content>(visibility: Visibility, attachmentAnchor: OrnamentAttachmentAnchor, contentAlignment: Alignment, ornament: () -> Content) -> some View
M
func opacity(Double) -> some View
M
func onTapGesture(count: Int, perform: () -> Void) -> some View
Documentation
Open Menu
Swift
Instance Method
overlayPreferenceValue(_:alignment:_:)
Reads the specified preference value from the view, using it to produce a second view that is applied as an overlay to the original view.
RealityKit
SwiftUI
iOS 16.0+
iPadOS 16.0+
macOS 13.0+
Mac Catalyst 16.0+
tvOS 16.0+
watchOS 9.0+
visionOS 1.0+ Beta
func overlayPreferenceValue<K, V>(
    _ key: K.Type,
    alignment: Alignment = .center,
    @ViewBuilder _ transform: @escaping (K.Value) -> V
) -> some View where K : PreferenceKey, V : View
Parameters
key
The preference key type whose value is to be read.
alignment
An optional alignment to use when positioning the overlay view relative to the original view.
transform
A function that produces the overlay view from the preference value read from the original view.
Return Value
A view that layers a second view in front of the view.
Discussion
The values of the preference key from both views are combined and made visible to the parent view.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is overlayPreferenceValue(_:alignment:_:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright Â© 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


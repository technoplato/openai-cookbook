https://developer.apple.com/documentation/realitykit/entity/availableanimationsSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
S
BindableValue
r
P
BindableData
E
BindTarget
S
BindPath
P
var bindableValues: BindableValuesReference
E
TweenMode
E
BlendWeight
func playAnimation(named: String, transitionDuration: TimeInterval, startsPaused: Bool, recursive: Bool) -> AnimationPlaybackController
func playAnimation(AnimationResource, transitionDuration: TimeInterval, startsPaused: Bool) -> AnimationPlaybackController
func playAnimation(AnimationResource, transitionDuration: TimeInterval, blendLayerOffset: Int, separateAnimatedValue: Bool, startsPaused: Bool, clock: CMClockOrTimebase?) -> AnimationPlaybackController
Playing Animations
M
func generateCollisionShapes(recursive: Bool)
Calculating the Collision Shape
P
var anchor: (HasAnchoring)?
Finding the Nearest Anchor
r
P
TransientComponent
r
P
HasSynchronization
M
func withUnsynchronized(() -> Void)
Documentation
Open Menu
Swift
Instance Property
availableAnimations
The list of animations associated with the entity.
iOS 13.0+
iPadOS 13.0+
macOS 10.15+
Mac Catalyst 13.0+
visionOS 1.0+ Beta
@MainActor
var availableAnimations: [AnimationResource] { get }
Discussion
When you import an entity from a file, for example by using the Entity/load(named:in:) method, the entity might contain associated animations. Any that RealityKit supports appear in the availableAnimations array.
To play a particular animation resource from the list, call the playAnimation(_:transitionDuration:startsPaused:) method. Alternatively, to play all animations with a given name, call the playAnimation(named:transitionDuration:startsPaused:) method instead.
See Also
Playing Animations
func playAnimation(AnimationResource, transitionDuration: TimeInterval, blendLayerOffset: Int, separateAnimatedValue: Bool, startsPaused: Bool, clock: CMClockOrTimebase?) -> AnimationPlaybackController
Plays an animation with the specified options.
func stopAllAnimations(recursive: Bool)
Stops all playing of animations on this entity.
func playAnimation(AnimationResource, transitionDuration: TimeInterval, startsPaused: Bool) -> AnimationPlaybackController
Plays the given animation on the entity.
func playAnimation(named: String, transitionDuration: TimeInterval, startsPaused: Bool, recursive: Bool) -> AnimationPlaybackController
Plays all the animations with the given name on the entity.
Deprecated
var defaultAnimationClock: CMClockOrTimebase
Returns the default animation clock for this entity.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is availableAnimations
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright Â© 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


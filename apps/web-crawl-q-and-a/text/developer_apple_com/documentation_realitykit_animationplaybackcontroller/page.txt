https://developer.apple.com/documentation/realitykit/animationplaybackcontrollerSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
static func != (Self, Self) -> Bool
static func == (AnimationPlaybackController, AnimationPlaybackController) -> Bool
Comparing Animation Playback Controllers
P
var time: TimeInterval
P
var clock: CMClockOrTimebase
P
var speed: Float
P
var duration: TimeInterval
Playback
Animation
Audio
Scene reconstruction and understanding
Cameras and lighting
Anchors
Materials and shaders
Models, shapes, and meshes
Documentation
Open Menu
Swift
Class
AnimationPlaybackController
A controller that manages animation playback.
iOS 13.0+
iPadOS 13.0+
macOS 10.15+
Mac Catalyst 13.0+
visionOS 1.0+ Beta
@MainActor @preconcurrency
class AnimationPlaybackController
Overview
This class controls the playback of an entity animation by providing its pause, resume, or stop functions.
The animation starts immediately after you call playAnimation(_:transitionDuration:startsPaused:), or move(to:relativeTo:duration:timingFunction:), which both return an instance of this class.
A controller invalidates after its associated animation completes or stops. To play another animation, perform an action that generates another controller.
While an animation plays, you can receive notification of particular playback states by subscribing to an event. For more information, see AnimationEvents.
Topics
Inspecting and Controlling Playback
func pause()
Pauses the animation.
func resume()
Resumes a paused animation.
func stop()
Stops an animation.
var isPlaying: Bool
A Boolean value that indicates whether the animation plays.
var isStopped: Bool
A Boolean value that indicates whether the animation stopped.
var isValid: Bool
A Boolean value that indicates whether the animation controller is functional.
var blendFactor: Float
The level of influence the controller gives to its animation.
Managing Completion
var isComplete: Bool
A Boolean that indicates whether the animation has finished running.
var isPaused: Bool
A Boolean that indicates whether the animation is paused.
Accessing the Associated Entity
var entity: Entity?
The entity to which the animation applies.
Timing Animation Playback
var duration: TimeInterval
The length of time the animation spans, in seconds.
var speed: Float
The animation’s rate of playback.
var clock: CMClockOrTimebase
A reference clock to synchronize the animation with other events.
var time: TimeInterval
The animation’s location within the timeline.
Comparing Animation Playback Controllers
static func == (AnimationPlaybackController, AnimationPlaybackController) -> Bool
Indicates whether two animation playback controllers are equal.
static func != (Self, Self) -> Bool
Indicates whether two animation playback controllers aren’t equal.
func hash(into: inout Hasher)
Hashes the essential components of the controller by feeding them into the given hash function.
var hashValue: Int
The hashed value of the controller.
Instance Methods
func stop(blendOutDuration: TimeInterval)
Stops an animation with a fade-out time.
Beta
Default Implementations
API Reference
Equatable Implementations
Relationships
Conforms To
Equatable
Hashable
Sendable
See Also
Playback
enum AnimationEvents
Notable milestones that the framework signals during animation playback.
enum AnimationRepeatMode
Options that determine whether an animation replays after completion.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is AnimationPlaybackController
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


https://developer.apple.com/documentation/realitykit/arview/entities(at:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func touchesBegan(Set<UITouch>, with: UIEvent?)
Handling Touch Input
M
func ray(through: CGPoint) -> (origin: SIMD3<Float>, direction: SIMD3<Float>)?
M
func unproject(CGPoint, viewport: CGRect) -> SIMD3<Float>?
M
func unproject(CGPoint, ontoPlane: float4x4) -> SIMD3<Float>?
M
func unproject(CGPoint, ontoPlane: float4x4, relativeToCamera: Bool) -> SIMD3<Float>?
M
func project(SIMD3<Float>) -> CGPoint?
func gestureRecognizer(UIGestureRecognizer, shouldRecognizeSimultaneouslyWith: UIGestureRecognizer) -> Bool
func trackedRaycast(from: CGPoint, allowing: ARRaycastQuery.Target, alignment: ARRaycastQuery.TargetAlignment, updateHandler: ([ARRaycastResult]) -> Void) -> ARTrackedRaycast?
func raycast(from: CGPoint, allowing: ARRaycastQuery.Target, alignment: ARRaycastQuery.TargetAlignment) -> [ARRaycastResult]
func makeRaycastQuery(from: CGPoint, allowing: ARRaycastQuery.Target, alignment: ARRaycastQuery.TargetAlignment) -> ARRaycastQuery?
M
func entity(at: CGPoint) -> Entity?
Finding Entities at a Point in the View
P
var cameraTransform: Transform
E
ARView.CameraMode
P
var cameraMode: ARView.CameraMode
Managing the Camera
P
var audioListener: Entity?
P
var physicsOrigin: Entity?
Documentation
Open Menu
Swift
Instance Method
entities(at:)
Finds the collection of entities at the specified point in the scene.
iOS 13.0+
iPadOS 13.0+
macOS 10.15+
Mac Catalyst 13.0+
@MainActor
func entities(at point: CGPoint) -> [Entity]
Parameters
point
A point in the view’s coordinate system.
Return Value
An array of entities at point. The array is empty if there are no entities.
Discussion
The method ignores entities that lack a CollisionComponent.
See Also
Finding Entities at a Point in the View
func entity(at: CGPoint) -> Entity?
Finds the entity in the AR scene closest to the specified point.
func hitTest(CGPoint, query: CollisionCastQueryType, mask: CollisionGroup) -> [CollisionCastHit]
Searches for objects corresponding to a point in the view based on a query and a collision mask.
func hitTest(CGPoint, types: ARHitTestResult.ResultType) -> [ARHitTestResult]
Searches for objects corresponding to a point in the view based on a set of result types.
func makeRaycastQuery(from: CGPoint, allowing: ARRaycastQuery.Target, alignment: ARRaycastQuery.TargetAlignment) -> ARRaycastQuery?
Creates a ray-cast query originating from a point in the view, centered on the camera’s field of view.
func raycast(from: CGPoint, allowing: ARRaycastQuery.Target, alignment: ARRaycastQuery.TargetAlignment) -> [ARRaycastResult]
Performs a ray cast, where a ray is cast into the scene from the center of the camera through a point in the view, and the results are immediately returned.
func trackedRaycast(from: CGPoint, allowing: ARRaycastQuery.Target, alignment: ARRaycastQuery.TargetAlignment, updateHandler: ([ARRaycastResult]) -> Void) -> ARTrackedRaycast?
Performs a tracked ray cast, where a ray is cast into the scene from the center of the camera through a point in the view.
Current page is entities(at:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


https://developer.apple.com/documentation/createml/mltextclassifier

Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func predictionsWithConfidence(from: [String]) throws -> [[String : Double]]
M
func predictionWithConfidence(from: String) throws -> [String : Double]
M
func predictions(from: [String]) throws -> [String]
M
func prediction(from: String) throws -> String
Testing a Text Classifier
M
func evaluation(on: MLDataTable, textColumn: String, labelColumn: String) -> MLClassifierMetrics
M
func evaluation(on: [String : [String]]) -> MLClassifierMetrics
init(trainingData: MLDataTable, textColumn: String, labelColumn: String, parameters: MLTextClassifier.ModelParameters) throws
init(trainingData: DataFrame, textColumn: String, labelColumn: String, parameters: MLTextClassifier.ModelParameters) throws
Creating a text classifier model
Text Models
S
MLStyleTransfer
S
MLHandActionClassifier
S
MLActionClassifier
Detecting Human Actions in a Live Video Feed
Creating an Action Classifier Model
Video Models
Documentation
Open Menu
Swift
Structure
MLTextClassifier
A model you train to classify natural language text.
iOS 15.0+
iPadOS 15.0+
macOS 10.14+
Mac Catalyst 15.0+
visionOS 1.0+ Beta
struct MLTextClassifier
Overview
Use a text classifier to train a machine learning model you can include in your app to classify natural language text. The model learns to associate labels with features of the input text, which can be sentences, paragraphs, or even entire documents.
After you train a text classifier, you save it to a Core ML model file. You then use an instance of the NLModel class from the Natural Language framework to read the model file into your app.
Topics
Creating and Training a Text Classifier
init(trainingData: [String : [String]], parameters: MLTextClassifier.ModelParameters) throws
Creates a text classifier.
init(trainingData: DataFrame, textColumn: String, labelColumn: String, parameters: MLTextClassifier.ModelParameters) throws
Creates a text classifier.
init(trainingData: MLTextClassifier.DataSource, parameters: MLTextClassifier.ModelParameters) throws
Creates a text classifier.
enum DataSource
A data source for a text classifier.
struct ModelParameters
Parameters that specify model training parameters and validation data.
let modelParameters: MLTextClassifier.ModelParameters
The configuration parameters that the text classifier used for training during initialization.
init(trainingData: MLDataTable, textColumn: String, labelColumn: String, parameters: MLTextClassifier.ModelParameters) throws
Creates a text classifier.
Assessing Model Accuracy
let trainingMetrics: MLClassifierMetrics
Measurements of the classifier’s performance on the training data set.
let validationMetrics: MLClassifierMetrics
Measurements of the classifier’s performance on the validation data set.
Evaluating a Text Classifier
func evaluation(on: MLTextClassifier.DataSource) -> MLClassifierMetrics
Computes evaluation metrics.
func evaluation(on: DataFrame, textColumn: String, labelColumn: String) -> MLClassifierMetrics
Computes evaluation metrics.
func evaluation(on: [String : [String]]) -> MLClassifierMetrics
Computes evaluation metrics.
func evaluation(on: MLDataTable, textColumn: String, labelColumn: String) -> MLClassifierMetrics
Computes evaluation metrics.
Testing a Text Classifier
func prediction(from: String) throws -> String
Classifies a string with a label.
func predictions(from: [String]) throws -> [String]
Classifies an array of strings with labels.
func predictionWithConfidence(from: String) throws -> [String : Double]
Predicts multiple possible labels and their confidence scores for the specified string.
func predictionsWithConfidence(from: [String]) throws -> [[String : Double]]
Predicts multiple possible labels and their confidence scores for each string in the specified array.
func predictions(from: MLDataColumn<String>) throws -> MLDataColumn<String>
Classifies a data column with labels.
func predictionsWithConfidence(from: MLDataColumn<String>) throws -> MLDataColumn<[String : Double]>
Predicts multiple possible labels and their confidence scores for each string in the specified data column.
Saving a Text Classifier
func write(to: URL, metadata: MLModelMetadata?) throws
Exports the text classifier as a Core ML model file at the specified URL.
func write(toFile: String, metadata: MLModelMetadata?) throws
Exports the text classifier as a Core ML model file at the specified file path.
Describing a Text Classifier
var model: MLModel
The underlying Core ML model of the text classifier.
var description: String
A text representation of the text classifier.
var debugDescription: String
A text representation of the text classifier that’s suitable for output during debugging.
var playgroundDescription: Any
A description of the text classifier in a playground.
Default Implementations
API Reference
CustomDebugStringConvertible Implementations
API Reference
CustomPlaygroundDisplayConvertible Implementations
API Reference
CustomStringConvertible Implementations
Relationships
Conforms To
CustomDebugStringConvertible
CustomPlaygroundDisplayConvertible
CustomStringConvertible
Sendable
See Also
Text Models
Creating a text classifier model
Train a machine learning model to classify natural language text.
struct MLWordTagger
A word-tagging model you train to classify natural language text at the word level.
struct MLGazetteer
A collection of terms and their labels, which augments a tagger that analyzes natural language text.
struct MLWordEmbedding
A map of strings in a vector space that enable your app to find similar strings by looking at a string’s neighbors.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is MLTextClassifier
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


https://developer.apple.com/documentation/createml/mldatatable/rows-swift.struct/randomelement()

Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
Excluding Rows
M
func suffix(from: Self.Index) -> Self.SubSequence
M
func suffix(Int) -> Self.SubSequence
M
func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence
M
func prefix(upTo: Self.Index) -> Self.SubSequence
M
func prefix(through: Self.Index) -> Self.SubSequence
M
func prefix(Int) -> Self.SubSequence
P
var last: Self.Element?
P
var first: Self.Element?
subscript(Int) -> MLDataTable.Rows.Element
Accessing Rows
P
var count: Int
P
var isEmpty: Bool
Inspecting a Row Collection
S
MLDataTable.Rows
Documentation
Open Menu
Swift
Instance Method
randomElement()
Returns a random element of the collection.
Create ML
Swift
iOS 15.0+
iPadOS 15.0+
macOS 10.14+
Mac Catalyst 15.0+
tvOS 16.0+
visionOS 1.0+ Beta
func randomElement() -> Self.Element?
Return Value
A random element from the collection. If the collection is empty, the method returns nil.
Discussion
Call randomElement() to select a random element from an array or another collection. This example picks a name at random from an array:
let names = ["Zoey", "Chloe", "Amani", "Amaia"]
let randomName = names.randomElement()!
// randomName == "Amani"
This method is equivalent to calling randomElement(using:), passing in the system’s default random generator.
Complexity
O(1) if the collection conforms to RandomAccessCollection; otherwise, O(n), where n is the length of the collection.
See Also
Accessing Rows
subscript(Int) -> MLDataTable.Rows.Element
Subscript by index. This returns a row in the data table.
var first: Self.Element?
The first element of the collection.
var last: Self.Element?
The last element of the collection.
func randomElement<T>(using: inout T) -> Self.Element?
Returns a random element of the collection, using the given generator as a source for randomness.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is randomElement()
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


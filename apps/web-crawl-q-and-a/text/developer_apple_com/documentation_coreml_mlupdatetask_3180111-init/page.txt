https://developer.apple.com/documentation/coreml/mlupdatetask/3180111-init

Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
Generating a Model Encryption Key
Model Encryption
Model Integration Samples
Downloading and Compiling a Model on the User’s Device
App Integration
C
MLModelAsset
C
MLArrayBatchProvider
init(forModelAt: URL, trainingData: MLBatchProvider, configuration: MLModelConfiguration?, progressHandlers: MLUpdateProgressHandlers)
init(forModelAt: URL, trainingData: MLBatchProvider, configuration: MLModelConfiguration?, completionHandler: (MLUpdateContext) -> Void)
M
init(forModelAt: URL, trainingData: MLBatchProvider, progressHandlers: MLUpdateProgressHandlers)
M
init(forModelAt: URL, trainingData: MLBatchProvider, completionHandler: (MLUpdateContext) -> Void)
Creating an Update Task
C
MLUpdateTask
Personalizing a Model with On-Device Updates
C
MLTask
On-Device Model Updates
Model Personalization
Documentation
Open Menu
Initializer
init(forModelAt:trainingData:configuration:completionHandler:)
Creates a task that updates the model at the URL with the training data and configuration, and calls the completion handler when the update completes.
iOS 13.0+
iPadOS 13.0+
macOS 10.15+
Mac Catalyst 13.1+
tvOS 14.0+
watchOS 6.0+
visionOS 1.0+ Beta
convenience init(
    forModelAt modelURL: URL,
    trainingData: MLBatchProvider,
    configuration: MLModelConfiguration?,
    completionHandler: @escaping (MLUpdateContext) -> Void
) throws
Parameters
modelURL
The location in the file system of a model file (ModelName.mlmodelc).
trainingData
The update data for the model, contained in a batch provider.
configuration
The model settings for an updated model object.
completionHandler
The closure the task calls when it finishes.
See Also
Creating an Update Task
init(forModelAt: URL, trainingData: MLBatchProvider, completionHandler: (MLUpdateContext) -> Void)
Creates a task that updates the model at the URL with the training data, and calls the completion handler when the update completes.
init(forModelAt: URL, trainingData: MLBatchProvider, progressHandlers: MLUpdateProgressHandlers)
Creates a task that updates the model at the URL with the training data, and calls the progress handlers during and after the update.
init(forModelAt: URL, trainingData: MLBatchProvider, configuration: MLModelConfiguration?, progressHandlers: MLUpdateProgressHandlers)
Creates a task that updates the model at the URL with the training data and configuration, and calls the progress handlers during and after the update.
protocol MLBatchProvider
An interface that represents a collection of feature providers.
class MLModelConfiguration
The settings for creating or updating a machine learning model.
class MLUpdateContext
The context an update task provides to your app’s completion and update progress handlers.
class MLUpdateProgressHandlers
A collection of closures an update task uses to notify your app of its progress.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is init(forModelAt:trainingData:configuration:completionHandler:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


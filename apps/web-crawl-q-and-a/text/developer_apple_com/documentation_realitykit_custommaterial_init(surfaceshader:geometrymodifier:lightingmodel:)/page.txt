https://developer.apple.com/documentation/realitykit/custommaterial/init(surfaceshader:geometrymodifier:lightingmodel:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
P
var normal: CustomMaterial.Normal
Using a Normal Map
S
CustomMaterial.CustomMaterialTexture
S
CustomMaterial.Custom
P
var custom: CustomMaterial.Custom
Using Custom Values
S
CustomMaterial.Metallic
init(surfaceShader: CustomMaterial.SurfaceShader, geometryModifier: CustomMaterial.GeometryModifier?, lightingModel: CustomMaterial.LightingModel) throws
M
init(from: Material, surfaceShader: CustomMaterial.SurfaceShader, geometryModifier: CustomMaterial.GeometryModifier?) throws
M
init(from: Material, geometryModifier: CustomMaterial.GeometryModifier) throws
Creating Custom Materials
S
CustomMaterial
S
PhysicallyBasedMaterial
S
SimpleMaterial
P
var materials: [Material]
Configuring the Material
Documentation
Open Menu
Swift
Initializer
init(surfaceShader:geometryModifier:lightingModel:)
Creates a custom material from a lighting model, surface shader, and geometry modifier.
iOS 15.0+
iPadOS 15.0+
macOS 12.0+
Mac Catalyst 15.0+
init(
    surfaceShader: CustomMaterial.SurfaceShader,
    geometryModifier: CustomMaterial.GeometryModifier? = nil,
    lightingModel: CustomMaterial.LightingModel
) throws
Parameters
surfaceShader
The surface shader function.
geometryModifier
The geometry modifier shader function.
lightingModel
The lighting model.
Discussion
This initializer creates a custom material using a lighting model you specify, which determines how RealityKit renders the output of your shader functions. The CustomMaterial.LightingModel.lit and CustomMaterial.LightingModel.clearcoat use RealityKit’s physically-based shaders to render the entity based on the output of your shader functions. When using these lighting models, RealityKit uses all provided material attributes like baseColor, metallic and normal.
The CustomMaterial.LightingModel.unlit lighting model renders the entity with no shadows or surface effects. This lighting model only supports baseColor and blending.
See Also
Creating Custom Materials
init(from: Material, geometryModifier: CustomMaterial.GeometryModifier) throws
Creates a custom material from an existing material and a geometry modifier.
init(from: Material, surfaceShader: CustomMaterial.SurfaceShader, geometryModifier: CustomMaterial.GeometryModifier?) throws
Creates a custom material from an existing material, surface shader, and geometry modifier.
Current page is init(surfaceShader:geometryModifier:lightingModel:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


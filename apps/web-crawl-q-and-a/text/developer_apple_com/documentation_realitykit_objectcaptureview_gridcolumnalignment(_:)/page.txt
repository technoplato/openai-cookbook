https://developer.apple.com/documentation/realitykit/objectcaptureview/gridcolumnalignment(_:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func interactiveDismissDisabled(Bool) -> some View
M
func interactionActivityTrackingTag(String) -> some View
M
func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View
M
func inspectorColumnWidth(CGFloat) -> some View
M
func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View
M
func indexViewStyle<S>(S) -> some View
M
func imageScale(Image.Scale) -> some View
M
func gridCellUnsizedAxes(Axis.Set) -> some View
M
func gridCellColumns(Int) -> some View
M
func gridCellAnchor(UnitPoint) -> some View
M
func grayscale(Double) -> some View
M
func gesture<T>(T, including: GestureMask) -> some View
M
func geometryGroup() -> some View
M
func gaugeStyle<S>(S) -> some View
M
func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View
Documentation
Open Menu
Swift
Instance Method
gridColumnAlignment(_:)
Overrides the default horizontal alignment of the grid column that the view appears in.
RealityKit
SwiftUI
iOS 16.0+
iPadOS 16.0+
macOS 13.0+
Mac Catalyst 16.0+
tvOS 16.0+
watchOS 9.0+
visionOS 1.0+ Beta
func gridColumnAlignment(_ guide: HorizontalAlignment) -> some View
Parameters
guide
The HorizontalAlignment guide to use for the grid column that the view appears in.
Return Value
A view that uses the specified horizontal alignment, and that causes all cells in the same column of a grid to use the same alignment.
Discussion
You set a default alignment for the cells in a grid in both vertical and horizontal dimensions when you create the grid with the Grid/init(alignment:horizontalSpacing:verticalSpacing:content:) initializer. However, you can use the gridColumnAlignment(_:) modifier to override the horizontal alignment of a column within the grid. The following example sets a grid’s alignment to Alignment/leadingFirstTextBaseline, and then sets the first column to use HorizontalAlignment/trailing alignment:
Grid(alignment: .leadingFirstTextBaseline) {
    GridRow {
        Text("Regular font:")
            .gridColumnAlignment(.trailing) // Align the entire first column.
        Text("Helvetica 12")
        Button("Select...") { }
    }
    GridRow {
        Text("Fixed-width font:")
        Text("Menlo Regular 11")
        Button("Select...") { }
    }
    GridRow {
        Color.clear
            .gridCellUnsizedAxes([.vertical, .horizontal])
        Toggle("Use fixed-width font for new documents", isOn: $isOn)
            .gridCellColumns(2)
    }
}
This creates the layout of a typical macOS configuration view, with the trailing edge of the first column flush with the leading edge of the second column:
Add the modifier to only one cell in a column. The grid automatically aligns all cells in that column the same way. You get undefined behavior if you apply different alignments to different cells in the same column.
To override row alignment, see GridRow/init(alignment:content:). To override alignment for a single cell, see View/gridCellAnchor(_:).
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is gridColumnAlignment(_:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


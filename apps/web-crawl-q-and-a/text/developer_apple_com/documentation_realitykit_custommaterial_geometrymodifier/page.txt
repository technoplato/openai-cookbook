https://developer.apple.com/documentation/realitykit/custommaterial/geometrymodifierSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
init(from: Material, geometryModifier: CustomMaterial.GeometryModifier) throws
M
init(from: Material, surfaceShader: CustomMaterial.SurfaceShader, geometryModifier: CustomMaterial.GeometryModifier?) throws
M
init(surfaceShader: CustomMaterial.SurfaceShader, geometryModifier: CustomMaterial.GeometryModifier?, lightingModel: CustomMaterial.LightingModel) throws
Setting the Lighting Model
P
var lightingModel: CustomMaterial.LightingModel
E
CustomMaterial.LightingModel
Accessing Shader Functions
S
CustomMaterial.SurfaceShader
Using Custom Values
P
var custom: CustomMaterial.Custom
S
CustomMaterial.Custom
S
CustomMaterial.CustomMaterialTexture
Using a Normal Map
P
var normal: CustomMaterial.Normal
S
CustomMaterial.Normal
Documentation
Open Menu
Swift
Structure
CustomMaterial.GeometryModifier
The custom material’s optional shader function that can manipulate an entity’s vertex data.
iOS 15.0+
iPadOS 15.0+
macOS 12.0+
Mac Catalyst 15.0+
struct GeometryModifier
Overview
A geometry modifier is an optional Metal function that you can use with custom materials. Use a geometry modifier to change vertex data, such as vertex position, color, or texture coordinates. For example, offsetting a vertex’s position changes the size and shape of the entity for rendering only. If your custom material has a geometry modifier, RealityKit’s custom material vertex shader calls it once for each vertex in the entity. Changes that your geometry modifier makes are transient and don’t affect the vertex positions of the original ModelEntity.
Here’s a simple example of a geometry modifier that offsets the vertex positions along the Z axis based on the elapsed time:
#include <metal_stdlib>
#include <RealityKit/RealityKit.h>
using namespace metal;


[[visible]] void myGeometryModifier(realitykit::geometry_parameters
params) {
    float3 zOffset = float3(0.0, 0.0, params.uniforms().time() / 50.0);
    params.geometry().set_world_position_offset(zOffset);
} ```


For more information on creating custom materials and writing shader
functions, see
<doc:modifying-realitykit-rendering-using-custom-materials>.
Topics
Creating Geometry Modifier Objects
init(named: String, in: MTLLibrary)
Creates a geometry modifier object from a named function in a Metal library.
Accessing Geometry Modifier Properties
var name: String
The name of the geometry modifier function.
var library: MTLLibrary
The Metal library that contains this surface shader function.
Relationships
Conforms To
MaterialFunction
See Also
Accessing Shader Functions
struct SurfaceShader
The custom material’s surface shader function.
Current page is CustomMaterial.GeometryModifier
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


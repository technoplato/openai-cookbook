https://developer.apple.com/documentation/createml/mlactionclassifier

Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func evaluation(on: MLActionClassifier.DataSource) throws -> MLClassifierMetrics
P
var validationMetrics: MLClassifierMetrics
P
var trainingMetrics: MLClassifierMetrics
Evaluating an Action Classifier
M
init(trainingData: MLActionClassifier.DataSource, parameters: MLActionClassifier.ModelParameters) throws
Training an Action Classifier Synchronously
M
init(checkpoint: MLCheckpoint) throws
static func restoreTrainingSession(sessionParameters: MLTrainingSessionParameters) throws -> MLTrainingSession<MLActionClassifier>
static func makeTrainingSession(trainingData: MLActionClassifier.DataSource, parameters: MLActionClassifier.ModelParameters, sessionParameters: MLTrainingSessionParameters) throws -> MLTrainingSession<MLActionClassifier>
static func train(trainingData: MLActionClassifier.DataSource, parameters: MLActionClassifier.ModelParameters, sessionParameters: MLTrainingSessionParameters) throws -> MLJob<MLActionClassifier>
Documentation
Open Menu
Swift
Structure
MLActionClassifier
A model you train with videos to classify a person’s body movements.
macOS 11.0+
visionOS 1.0+ Beta
struct MLActionClassifier
Topics
Training an Action Classifier Asynchronously
static func train(trainingData: MLActionClassifier.DataSource, parameters: MLActionClassifier.ModelParameters, sessionParameters: MLTrainingSessionParameters) throws -> MLJob<MLActionClassifier>
Begins an asynchronous action classifier training session.
static func makeTrainingSession(trainingData: MLActionClassifier.DataSource, parameters: MLActionClassifier.ModelParameters, sessionParameters: MLTrainingSessionParameters) throws -> MLTrainingSession<MLActionClassifier>
Creates an asynchronous training session for an action classifier.
static func resume(MLTrainingSession<MLActionClassifier>) throws -> MLJob<MLActionClassifier>
Begins or continues an asynchronous action classifier training session.
static func restoreTrainingSession(sessionParameters: MLTrainingSessionParameters) throws -> MLTrainingSession<MLActionClassifier>
Creates an asynchronous training session for an action classifier by restoring an existing training session’s state from its parameters.
Creating an Action Classifier from a Checkpoint
init(checkpoint: MLCheckpoint) throws
Creates an action classifier from a training session checkpoint.
Training an Action Classifier Synchronously
init(trainingData: MLActionClassifier.DataSource, parameters: MLActionClassifier.ModelParameters) throws
Creates an action classifier with a training dataset represented by a data source.
Evaluating an Action Classifier
var trainingMetrics: MLClassifierMetrics
Measurements of the action classifier’s performance on the training dataset.
var validationMetrics: MLClassifierMetrics
Measurements of the action classifier’s performance on the validation dataset.
func evaluation(on: MLActionClassifier.DataSource) throws -> MLClassifierMetrics
Generates metrics describing the action classifier’s performance on labeled videos represented by a data source.
Testing an Action Classifier
func prediction(from: URL) throws -> [MLActionClassifier.Prediction]
Generates a prediction for each action the classifier recognizes in the video.
func predictions(from: [URL]) throws -> [[MLActionClassifier.Prediction]]
Generates a sequence of predictions for each video input.
struct Prediction
A collection of predictions, each paired with its confidence, for a range of video frames.
Saving an Action Classifier
func write(to: URL, metadata: MLModelMetadata?) throws
Exports the action classifier as a Core ML model file to a location in the file system.
func write(toFile: String, metadata: MLModelMetadata?) throws
Exports the action classifier as a Core ML model file to the file path.
Inspecting an Action Classifier Model
var model: MLModel
The underlying Core ML model of the action classifier stored in memory.
let modelParameters: MLActionClassifier.ModelParameters
The model configuration parameters the action classifier used during its training session.
Describing an Action Classifier
var description: String
A text representation of the action classifier.
var debugDescription: String
A text representation of the action classifier that’s suitable for output during debugging.
var playgroundDescription: Any
A description of the action classifier shown in a playground.
Supporting Types
enum DataSource
A data source for an action classifier.
struct ModelParameters
Parameters that affect the training process of an action classifier.
Default Implementations
API Reference
CustomDebugStringConvertible Implementations
API Reference
CustomPlaygroundDisplayConvertible Implementations
API Reference
CustomStringConvertible Implementations
Relationships
Conforms To
CustomDebugStringConvertible
CustomPlaygroundDisplayConvertible
CustomStringConvertible
Sendable
See Also
Video Models
API Reference
Creating an Action Classifier Model
Train a machine learning model to recognize a person’s body movements.
struct MLHandActionClassifier
A task that creates a hand action classification model by training with videos of people’s hand movements that you provide.
struct MLStyleTransfer
A model you train to apply an image’s style to other images or videos.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is MLActionClassifier
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


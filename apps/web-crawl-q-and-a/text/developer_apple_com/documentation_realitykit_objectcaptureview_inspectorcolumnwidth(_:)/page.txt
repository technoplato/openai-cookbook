https://developer.apple.com/documentation/realitykit/objectcaptureview/inspectorcolumnwidth(_:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func layoutValue<K>(key: K.Type, value: K.Value) -> some View
M
func layoutPriority(Double) -> some View
M
func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View
M
func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View
M
func labelsHidden() -> some View
M
func labeledContentStyle<S>(S) -> some View
M
func labelStyle<S>(S) -> some View
func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View
func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View
func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View
M
func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View
M
func indexViewStyle<S>(S) -> some View
M
func imageScale(Image.Scale) -> some View
M
func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View
M
func id<ID>(ID) -> some View
M
func hueRotation(Angle) -> some View
M
func hoverEffectDisabled(Bool) -> some View
M
func hoverEffect(HoverEffect, isEnabled: Bool) -> some View
Documentation
Open Menu
Swift
Instance Method
inspectorColumnWidth(_:)
Sets a fixed, preferred width for the inspector containing this view when presented as a trailing column.
RealityKit
SwiftUI
iOS 17.0+ Beta
iPadOS 17.0+ Beta
macOS 14.0+ Beta
Mac Catalyst 17.0+ Beta
func inspectorColumnWidth(_ width: CGFloat) -> some View
Parameters
width
The preferred fixed width for the inspector if presented as a trailing column.
Discussion
Apply this modifier on the content of a View/inspector(isPresented:content:) to specify a fixed preferred width for the trailing column. Use View/navigationSplitViewColumnWidth(min:ideal:max:) if you need to specify a flexible width.
The following example shows an editor interface with an inspector, which when presented as a trailing-column, has a fixed width of 225 points. The example also uses View/interactiveDismissDisabled(_:) to prevent the inspector from being collapsed by user action like dragging a divider.
MyEditorView()
    .inspector {
        TextTraitsInspectorView()
            .inspectorColumnWidth(225)
            .interactiveDismissDisabled()
    }
Note
A fixed width does not prevent the user collapsing the inspector on macOS. See View/interactiveDismissDisabled(_:).
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is inspectorColumnWidth(_:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright Â© 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


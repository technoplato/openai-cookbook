https://developer.apple.com/documentation/realitykit/arview/physicsoriginSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
P
var automaticallyConfigureSession: Bool
P
var renderOptions: ARView.RenderOptions
S
ARView.RenderOptions
P
var renderCallbacks: ARView.RenderCallbacks
S
ARView.RenderCallbacks
Providing Environmental Context
P
var environment: ARView.Environment
S
ARView.Environment
func makeRaycastQuery(from: CGPoint, allowing: ARRaycastQuery.Target, alignment: ARRaycastQuery.TargetAlignment) -> ARRaycastQuery?
func raycast(from: CGPoint, allowing: ARRaycastQuery.Target, alignment: ARRaycastQuery.TargetAlignment) -> [ARRaycastResult]
func trackedRaycast(from: CGPoint, allowing: ARRaycastQuery.Target, alignment: ARRaycastQuery.TargetAlignment, updateHandler: ([ARRaycastResult]) -> Void) -> ARTrackedRaycast?
M
func installGestures(ARView.EntityGestures, for: HasCollision) -> [EntityGestureRecognizer]
S
ARView.EntityGestures
M
func gestureRecognizer(UIGestureRecognizer, shouldRecognizeSimultaneouslyWith: UIGestureRecognizer) -> Bool
C
EntityRotationGestureRecognizer
C
EntityScaleGestureRecognizer
C
EntityTranslationGestureRecognizer
r
P
EntityGestureRecognizer
Documentation
Open Menu
Swift
Instance Property
physicsOrigin
The entity that defines the origin of the scene’s physics simulation.
iOS 13.0+
iPadOS 13.0+
macOS 10.15+
Mac Catalyst 13.0+
@MainActor
var physicsOrigin: Entity? { get set }
Discussion
By default, the scene’s origin acts as the origin for physics calculations. Set the physicsOrigin to choose a particular entity within the scene to act as the origin instead.
Here are the steps to do that.
Add a new entity to the scene that tracks the ARKit anchor position.
Set physicsOrigin to the entity to indicate that this entity’s transform determines the origin of the physics simulation.
Optionally, parent the Jenga blocks to the anchor entity. This way the Jenga blocks are automatically updated when the anchor position changes.
Example:
// Define your anchor entity and add it to the scene.
let myAnchor = AnchorEntity(.image(group: "References", name: "GameImage"))
scene.anchors.append(myAnchor)


// Set myAnchor as the origin of the physics simulation.
arView.physicsOrigin = myAnchor


Add the simulated blocks to the anchor.
myAnchor.children.append(block0)
myAnchor.children.append(block1)
...
Using this setup, all forces, velocities, etc. will be simulated relative to myAnchor. Moving the anchor will not affect the simulation.
For more information, see Handling Different-Sized Objects in Physics Simulations
See Also
Providing Environmental Context
var environment: ARView.Environment
The view’s background, lighting, and acoustic properties.
struct Environment
A description of background, lighting, and acoustic properties for a view’s content.
var audioListener: Entity?
The entity that defines the listener position and orientation for spatial audio.
Current page is physicsOrigin
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


https://developer.apple.com/documentation/realitykit/meshresource/skeletonSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
static func generateCylinder(height: Float, radius: Float) -> MeshResource
Beta
M
static func generateCone(height: Float, radius: Float) -> MeshResource
Beta
M
static func generateBoxWithRoundedCorners(size: SIMD3<Float>, majorRadius: Float, minorRadius: Float) -> MeshResource
Beta
M
static func generate(from: [MeshDescriptor]) async throws -> MeshResource
M
static func generate(from: MeshResource.Contents) async throws -> MeshResource
Type Methods
T
MeshResource.Skeleton.ID
init?(id: String, jointNames: [String], inverseBindPoseMatrices: [simd_float4x4], restPoseTransforms: [Transform]?, parentIndices: [Int?]?)
init(id: String, jointNames: [String], inverseBindPose: [simd_float4x4], localRestPose: [Transform]?, parentIndices: [Int]?) throws
S
MeshResource.Part
S
MeshResource.Model
S
MeshResource.JointInfluences
Beta
S
MeshResource.Instance
Structures
T
MeshResource.Font
Creating Text
M
static func generateSphere(radius: Float) -> MeshResource
Documentation
Open Menu
Swift
Structure
MeshResource.Skeleton
A skeleton consists of a hierarchy of joints. Each joint defines a coordinate space. Portions of a model may be thought of as having a position in a joint’s local space.
visionOS 1.0+ Beta
struct Skeleton
Overview
Each joint in a skeleton has a name, which usually determines the joint’s parent. For example, the legs of a human body might include these joints:
root
root/hips_joint
root/hips_joint/left_upLeg_joint
root/hips_joint/left_upLeg_joint/left_leg_joint
root/hips_joint/right_upLeg_joint
root/hips_joint/right_upLeg_joint/right_leg_joint
etc.
Models with skinned animation are authored in a fixed pose (the “bind pose”). The position of a vertex in a particular joint’s local space is a function of the vertex’s position in the bind pose and an “inverse bind pose” matrix which transforms from the bind pose (model space) to the joint’s local space.
When unanimated, the pose of a skinned model is defined by the rest pose of each joint. This transform is relative to the joint’s parent. Usually, the rest pose of a model is the same as its bind pose.
Topics
Structures
struct Joint
A named joint in a MeshResource.Skeleton.
Initializers
init(id: String, jointNames: [String], inverseBindPose: [simd_float4x4], localRestPose: [Transform]?, parentIndices: [Int]?) throws
Deprecated
init?(id: String, jointNames: [String], inverseBindPoseMatrices: [simd_float4x4], restPoseTransforms: [Transform]?, parentIndices: [Int?]?)
Creates a skeleton from arrays which define its joints. Returns nil if there was an issue converting the parameters to a valid skeleton.
init(id: String, joints: [MeshResource.Skeleton.Joint])
Creates a skeleton from an array of joints.
Instance Properties
var id: String
The unique identifier of this skeleton. This acts as a stable identity for this object.
var inverseBindPose: [simd_float4x4]
An array of transform matrices, one for each joint, which transform from the authored pose (the “bind pose”) of a model to the local space of that joint.
Deprecated
var jointNames: [String]
An array of joint names. Each name must be unique.
Deprecated
var joints: [MeshResource.Skeleton.Joint]
The joints which define this skeleton’s hierarchy.
var localRestPose: [Transform]
An array of transforms, one for each joint, which defines a joint’s pose (relative to the pose of its parent) in the model’s rest pose. A joint’s rest pose is used as a fallback if the joint is not otherwise animated.
Deprecated
var parentIndices: [Int]
The index of each joint’s parent joint.
Deprecated
Type Aliases
typealias ID
A type representing the stable identity of the entity associated with an instance.
Relationships
Conforms To
Identifiable
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is MeshResource.Skeleton
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


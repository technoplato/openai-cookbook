https://developer.apple.com/documentation/realitykit/realityviewcontent/body/padding(_:_:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
Default Implementations
T
RealityView.DefaultPlaceholder
T
RealityView.Body
T
RealityView.AttachmentContent
Type Aliases
S
RealityViewEntityCollection
S
RealityViewAttachmentContent
func subscribe<E>(to: E.Type, on: (EventSource)?, componentType: (Component.Type)?, (E) -> Void) -> EventSubscription
Working with content
P
var body: some View
M
init<A, P>(make: (inout RealityViewContent, RealityViewAttachments) async -> Void, update: ((inout RealityViewContent, RealityViewAttachments) -> Void)?, placeholder: () -> P, attachments: () -> A)
M
init<P>(make: (inout RealityViewContent) async -> Void, update: ((inout RealityViewContent) -> Void)?, placeholder: () -> P)
M
init<A>(make: (inout RealityViewContent, RealityViewAttachments) async -> Void, update: ((inout RealityViewContent, RealityViewAttachments) -> Void)?, attachments: () -> A)
M
init(make: (inout RealityViewContent) async -> Void, update: ((inout RealityViewContent) -> Void)?)
Creating a reality view
S
RealityView
Beta
Documentation
Open Menu
Swift
Instance Method
padding(_:_:)
Adds an equal padding amount to specific edges of this view.
RealityKit
SwiftUI
iOS 13.0+
iPadOS 13.0+
macOS 10.15+
Mac Catalyst 13.0+
tvOS 13.0+
watchOS 6.0+
visionOS 1.0+ Beta
func padding(
    _ edges: Edge.Set = .all,
    _ length: CGFloat? = nil
) -> some View
Parameters
edges
The set of edges to pad for this view. The default is Edge/Set/all.
length
An amount, given in points, to pad this view on the specified edges. If you set the value to nil, SwiftUI uses a platform-specific default amount. The default value of this parameter is nil.
Return Value
A view that’s padded by the specified amount on the specified edges.
Discussion
Use this modifier to add a specified amount of padding to one or more edges of the view. Indicate the edges to pad by naming either a single value from Edge/Set, or by specifying an OptionSet that contains edge values:
VStack {
    Text("Text padded by 20 points on the bottom and trailing edges.")
        .padding([.bottom, .trailing], 20)
        .border(.gray)
    Text("Unpadded text for comparison.")
        .border(.yellow)
}
The order in which you apply modifiers matters. The example above applies the padding before applying the border to ensure that the border encompasses the padded region:
You can omit either or both of the parameters. If you omit the length, SwiftUI uses a default amount of padding. If you omit the edges, SwiftUI applies the padding to all edges. Omit both to add a default padding all the way around a view. SwiftUI chooses a default amount of padding that’s appropriate for the platform and the presentation context.
VStack {
    Text("Text with default padding.")
        .padding()
        .border(.gray)
    Text("Unpadded text for comparison.")
        .border(.yellow)
}
The example above looks like this in iOS under typical conditions:
To control the amount of padding independently for each edge, use View/padding(_:)-6pgqq. To pad all outside edges of a view by a specified amount, use View/padding(_:)-68shk.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is padding(_:_:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


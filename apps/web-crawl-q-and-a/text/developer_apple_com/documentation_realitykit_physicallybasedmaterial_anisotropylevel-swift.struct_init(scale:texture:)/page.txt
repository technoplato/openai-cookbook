https://developer.apple.com/documentation/realitykit/physicallybasedmaterial/anisotropylevel-swift.struct/init(scale:texture:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
Defining Material Parameter Types
T
PhysicallyBasedMaterial.FaceCulling
E
MaterialParameterTypes.FaceCulling
P
var faceCulling: PhysicallyBasedMaterial.FaceCulling
Culling Unneeded Polygons
T
PhysicallyBasedMaterial.TextureCoordinateTransform
S
MaterialParameterTypes.TextureCoordinateTransform
M
init(floatLiteral: Float)
Creating an Anisotropy Level Object
S
PhysicallyBasedMaterial.AnisotropyLevel
P
var anisotropyLevel: PhysicallyBasedMaterial.AnisotropyLevel
Adding Anisotropy
S
PhysicallyBasedMaterial.ClearcoatRoughness
P
var clearcoatRoughness: PhysicallyBasedMaterial.ClearcoatRoughness
S
PhysicallyBasedMaterial.Clearcoat
Documentation
Open Menu
Swift
Initializer
init(scale:texture:)
Creates an anisotropy level object using a single value or a texture.
iOS 15.0+
iPadOS 15.0+
macOS 12.0+
Mac Catalyst 15.0+
visionOS 1.0+ Beta
init(
    scale: Float = 1.0,
    texture: PhysicallyBasedMaterial.Texture? = nil
)
Parameters
scale
The anisotropy level value for the entire material.
texture
The anisotropy level values as a UV-mapped image.
Discussion
By default, PBR materials are isotropic; in other words, an entity that uses PhysicallyBasedMaterial reflects light uniformly in all directions, mimicking the behavior of most real-world objects. Some objects, including those with many small parallel striations such as vinyl records, CDs, or straight hair, reflect light more in some directions than others, resulting in stretched or oblong specular highlights, as shown in the following figure.
Use this initializer to create an object to set the anisotropyLevel for a material using either a single value for the entire material, or a UV-mapped image. If you specify texture, RealityKit calculates the anistotropy level for the entity by UV-mapping texture onto the entity and multiplying the value of each mapped pixel by scale. If you don’t specify texture, then RealityKit uses scale as the entire entity’s anisotropy level. If you provide a color image for texture rather than a grayscale image, RealityKit only uses the intensity of the image’s red channel.
See Also
Creating an Anisotropy Level Object
init(floatLiteral: Float)
Creates an anisotropy level object from a single value.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is init(scale:texture:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


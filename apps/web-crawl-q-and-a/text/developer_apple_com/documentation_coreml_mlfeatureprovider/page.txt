https://developer.apple.com/documentation/coreml/mlfeatureprovider

Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
r
P
MLComputeDeviceProtocol
Beta
C
MLNeuralEngineComputeDevice
Beta
C
MLGPUComputeDevice
Beta
C
MLCPUComputeDevice
Beta
E
MLComputeDevice
Beta
Compute Devices
C
MLModelCollection
C
MLFeatureValue
Making Predictions with a Sequence of Inputs
Model Inputs and Outputs
Model Personalization
Model Customization
C
MLModel
Integrating a Core ML Model into Your App
Updating a Model File to a Model Package
Documentation
Open Menu
Protocol
MLFeatureProvider
An interface that represents a collection of values for either a model's input or its output.
iOS 11.0+
iPadOS 11.0+
macOS 10.13+
Mac Catalyst 13.1+
tvOS 11.0+
watchOS 4.0+
visionOS 1.0+ Beta
protocol MLFeatureProvider
Overview
Use MLFeatureProvider to customize the way your app gets data to and from your model when the model's dynamically generated interface doesn't meet your app's needs.
Consider adopting this protocol in your data source if any of the following apply:
Your data is collected asynchronously.
Using the autogenerated interface leads to copying excessive amounts of data.
Your data source is otherwise complicated.
The interface is mainly an accessor for MLFeatureValue instances, making it straightforward to implement. Adopting this protocol allows you to integrate your data directly with MLModel, which means the model can query your data sources without constructing a separate input instance.
To customize your app's interaction with a model:
Adopt the MLFeatureProvider protocol in a class or structure so that the model can query it for input feature values via featureValue(for:).
Pass your app's MLFeatureProvider to your MLModel with prediction(from:) or prediction(from:options:).
Use the MLFeatureProvider returned from a prediction(from:) method to get the output feature values for that prediction.
Topics
Accessing Values
func featureValue(for: String) -> MLFeatureValue?
Accesses the feature value given the feature's name.
Required
var featureNames: Set<String>
The set of valid feature names.
Required
Relationships
Conforming Types
MLDictionaryFeatureProvider
See Also
Model Inputs and Outputs
Making Predictions with a Sequence of Inputs
Integrate a recurrent neural network model to process sequences of inputs.
class MLFeatureValue
A generic wrapper around an underlying value and the value’s type.
class MLDictionaryFeatureProvider
A convenience wrapper for the given dictionary of data.
protocol MLBatchProvider
An interface that represents a collection of feature providers.
class MLArrayBatchProvider
A convenience wrapper for batches of feature providers.
class MLModelAsset
An abstraction of a compiled Core ML model asset.
Related Documentation
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is MLFeatureProvider
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


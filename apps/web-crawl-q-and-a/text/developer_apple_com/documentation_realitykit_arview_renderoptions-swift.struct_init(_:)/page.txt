https://developer.apple.com/documentation/realitykit/arview/renderoptions-swift.struct/init(_:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func symmetricDifference(Self) -> Self
M
func formIntersection(Self)
M
func intersection(Self) -> Self
M
func formUnion(Self)
M
func union(Self) -> Self
Combining Options
M
func subtracting(Self) -> Self
M
init()
Creating an Option Set
P
static let disableAutomaticLighting: ARView.RenderOptions
Deprecated
P
static let disableAREnvironmentLighting: ARView.RenderOptions
P
static let disablePersonOcclusion: ARView.RenderOptions
P
static let disableFaceOcclusions: ARView.RenderOptions
Deprecated
P
static let disableDepthOfField: ARView.RenderOptions
P
static let disableMotionBlur: ARView.RenderOptions
Documentation
Open Menu
Swift
Initializer
init(_:)
Creates a new set from a finite sequence of items.
RealityKit
Swift
iOS 13.0+
iPadOS 13.0+
macOS 10.15+
Mac Catalyst 13.0+
visionOS 1.0+ Beta
init<S>(_ sequence: S) where S : Sequence, Self.Element == S.Element
Parameters
sequence
The elements to use as members of the new set.
Overview
Use this initializer to create a new set from an existing sequence, like an array or a range:
let validIndices = Set(0..<7).subtracting([2, 4, 5])
print(validIndices)
// Prints "[6, 0, 1, 3]"
See Also
Creating an Option Set
init()
Creates an empty option set.
Available when RawValue conforms to FixedWidthInteger.
init(arrayLiteral: Self.Element...)
Creates a set containing the elements of the given array literal.
Available when ArrayLiteralElement is Self.Element.
typealias Element
The element type of the option set.
typealias ArrayLiteralElement
The type of the elements of an array literal.
init(rawValue: UInt)
Creates a new option set from the given raw value.
typealias RawValue
The raw type that can be used to represent all values of the conforming type.
let rawValue: UInt
The corresponding value of the raw type.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is init(_:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright Â© 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


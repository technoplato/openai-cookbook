https://developer.apple.com/documentation/createml/mldatatable/init(dictionary:)

Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
Appending to a Data Table
M
func removeColumn(named: String)
Removing Columns
M
func renameColumn(named: String, to: String)
Renaming Columns
subscript(String) -> MLUntypedColumn
subscript<Element>(String) -> MLDataColumn<Element>
M
init(contentsOf: URL, options: MLDataTable.ParsingOptions) throws
Creating a Model from Tabular Data
Creating a Data Table
S
MLDataTable
Tabular Data
S
MLRecommender
E
MLRegressor
E
MLClassifier
Documentation
Open Menu
Swift
Initializer
init(dictionary:)
Creates a data table from a dictionary of column names and data values.
iOS 15.0+
iPadOS 15.0+
macOS 10.14+
Mac Catalyst 15.0+
tvOS 16.0+
visionOS 1.0+ Beta
init(dictionary: [String : MLDataValueConvertible]) throws
Discussion
Use this initializer to create a data table from an in-memory Dictionary.
For example, to create a data table as shown above, first create a dictionary.
    "Title": ["Alice in Wonderland", "Hamlet", "Treasure Island", "Peter Pan"],
    "Author": ["Lewis Carroll", "William Shakespeare", "Robert L. Stevenson", "J. M. Barrie"],
    "Pages": [124, 98, 280, 94],
    "Genre": ["Fantasy", "Drama", "Adventure", "Fantasy"]
] ```


Then, use ``MLDataTable/init(dictionary:)`` to create a data table from
the dictionary.


```swift let bookTable = try MLDataTable(dictionary: data) ```


The keys of the dictionary become the column names, and the value of
each key becomes the element(s) of the corresponding column in the data
table.


- Parameters:
- dictionary: The dictionary of each column name and its associated data
values.
See Also
Creating a Data Table
init(contentsOf: URL, options: MLDataTable.ParsingOptions) throws
Creates a data table from an imported JSON or CSV file.
init(namedColumns: [String : MLUntypedColumn]) throws
Creates a data table from a dictionary of column names and untyped columns.
init()
Creates an empty table containing no rows or columns.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is init(dictionary:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright Â© 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


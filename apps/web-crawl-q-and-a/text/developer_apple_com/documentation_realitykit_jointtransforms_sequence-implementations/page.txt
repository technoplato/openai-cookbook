https://developer.apple.com/documentation/realitykit/jointtransforms/sequence-implementationsSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func map<T>((Self.Element) throws -> T) rethrows -> [T]
M
func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool
M
func formatted<S>(S) -> S.FormatOutput
M
func forEach((Self.Element) throws -> Void) rethrows
M
func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]
M
func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]
M
func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?
func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool
func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]
MutableCollection Implementations
Equatable Implementations
Collection Implementations
BidirectionalCollection Implementations
Default Implementations
M
func index(of: Self.Element) -> Self.Index?
M
func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]
Deprecated
Documentation
Open Menu
Swift
Sequence Implementations
Topics
Instance Properties
var lazy: LazySequence<Self>
A copy of this sequence that provides lazy maps and filters.
var publisher: Publishers.Sequence<Self, Never>
An object that transmits a sequence of joint transforms in real time.
Instance Methods
func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool
Returns a Boolean value that indicates whether every element of a sequence satisfies a given predicate.
func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]
Provides an array containing the transformed results of the sequence.
func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult
Determines how two collections of joints relate to each other in terms of size.
func contains(Self.Element) -> Bool
Returns a Boolean value that indicates whether the sequence contains the given element.
Available when Element conforms to Equatable.
func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool
Provides a Boolean value that indicates whether the sequence contains an element that satisfies the given predicate.
func elementsEqual<OtherSequence>(OtherSequence) -> Bool
Checks whether the sequence contains equivalent elements in the same order as another sequence.
Available when Element conforms to Equatable.
func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool
Checks whether the sequence contains equivalent elements in the same order as another sequence, according to the given predicate.
func enumerated() -> EnumeratedSequence<Self>
Returns a sequence of pairs that each contain the element index followed by the element.
func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]
Returns an array containing, in order, the elements of the sequence that satisfy the given predicate.
func filter(Predicate<Self.Element>) throws -> [Self.Element]
Beta
func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?
Returns the first element of the sequence that satisfies the given predicate.
func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]
Returns an array containing the concatenated results of calling the given transformation with each element of the sequence.
func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]
Returns an element that results from calling the given transformation with each element of the sequence.
func forEach((Self.Element) throws -> Void) rethrows
Calls the given closure on each element in the sequence.
func formatted<S>(S) -> S.FormatOutput
Formats a sequence to the given style.
func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool
Checks whether the sequence precedes another sequence in lexicographical order, according to the given predicate.
func map<T>((Self.Element) throws -> T) rethrows -> [T]
Returns an array containing the results of mapping the given closure over the sequence’s elements.
func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?
Returns the maximum element in the sequence, using the given predicate as the comparison between elements.
func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?
Returns the minimum element in the sequence according to the given predicate.
func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result
Calculates an accumulated value from the sequence members.
func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result
Calculates an accumulated value for each member of the sequence.
func shuffled() -> [Self.Element]
Returns the elements of the sequence, shuffled.
func shuffled<T>(using: inout T) -> [Self.Element]
Returns the elements of the sequence, shuffled using the given generator as a source for randomness.
func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]
Returns the elements of the sequence, sorted using the given predicate as the comparison between elements.
func sorted<S, Comparator>(using: S) -> [Self.Element]
Returns a sorted collection of transforms based on more than one comparator.
func sorted<Comparator>(using: Comparator) -> [Self.Element]
Returns a sorted collection of transforms based on one comparator.
func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool
Checks whether the initial elements of the sequence are the same as the elements in another sequence.
Available when Element conforms to Equatable.
func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool
Checks whether the initial elements of the sequence are equivalent to the elements of another sequence according to a predicate.
func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?
Executes a closure on the sequence’s contiguous storage.
Current page is Sequence Implementations
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


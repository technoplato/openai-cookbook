https://developer.apple.com/documentation/realitykit/meshresource/generatebox(width:height:depth:cornerradius:splitfaces:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
S
MeshResource.Contents
Getting a Bounding Box
P
var bounds: BoundingBox
S
BoundingBox
S
OrientedBoundingBox
Creating a Box
M
static func generateBox(size: Float, cornerRadius: Float) -> MeshResource
M
static func generateBox(size: SIMD3<Float>, cornerRadius: Float) -> MeshResource
static func generateBox(width: Float, height: Float, depth: Float, cornerRadius: Float, splitFaces: Bool) -> MeshResource
M
static func generate(from: MeshResource.Contents) async throws -> MeshResource
M
static func generate(from: [MeshDescriptor]) async throws -> MeshResource
M
static func generateBoxWithRoundedCorners(size: SIMD3<Float>, majorRadius: Float, minorRadius: Float) -> MeshResource
Beta
M
static func generateCone(height: Float, radius: Float) -> MeshResource
Beta
M
static func generateCylinder(height: Float, radius: Float) -> MeshResource
Beta
M
static func generateText(String, extrusionDepth: Float, font: MeshResource.Font, containerFrame: CGRect, alignment: CTTextAlignment, lineBreakMode: CTLineBreakMode) -> MeshResource
M
static func generateText(String, extrusionDepth: Float, font: MeshResource.Font, containerFrame: CGRect, alignment: CTTextAlignment, lineBreakMode: CTLineBreakMode) -> MeshResource
Documentation
Open Menu
Swift
Type Method
generateBox(width:height:depth:cornerRadius:splitFaces:)
Creates a new box mesh with the given dimensions and other characteristics.
iOS 13.0+
iPadOS 13.0+
macOS 10.15+
Mac Catalyst 13.0+
visionOS 1.0+ Beta
@MainActor
static func generateBox(
    width: Float,
    height: Float,
    depth: Float,
    cornerRadius: Float = 0,
    splitFaces: Bool = false
) -> MeshResource
Parameters
width
The width, in meters, of the box along the x-axis.
height
The height, in meters, of the box along the y-axis.
depth
The depth, in meters, of the box along the z-axis.
Return Value
The box mesh.
Discussion
The box is centered at the entity’s origin and aligned with its axes.
cornerRadius: A corner radius in the form of a circular arc, with curvature that transitions abruptly from 0 to 1/r at the boundary between the edge and the corner.
splitFaces: A Boolean you set to true to indicate that vertices shouldn’t be merged.
See Also
Creating a Box
static func generateBox(size: Float, cornerRadius: Float) -> MeshResource
Creates a new box mesh with sides of equal length.
static func generateBox(size: SIMD3<Float>, cornerRadius: Float) -> MeshResource
Creates a new box mesh with the given dimensions.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is generateBox(width:height:depth:cornerRadius:splitFaces:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


https://developer.apple.com/documentation/createml/mlwordembedding

Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
Default Implementations
P
var playgroundDescription: Any
P
var debugDescription: String
P
var description: String
P
var model: MLModel
P
let vocabularySize: Int
P
let dimension: Int
func prediction(from: String, maxCount: Int, maxDistance: Double, distanceType: NLDistanceType) throws -> [(text: String, distance: Double)]
S
MLGazetteer
S
MLWordTagger
S
MLTextClassifier
Creating a text classifier model
Text Models
S
MLStyleTransfer
S
MLHandActionClassifier
S
MLActionClassifier
Documentation
Open Menu
Swift
Structure
MLWordEmbedding
A map of strings in a vector space that enable your app to find similar strings by looking at a string’s neighbors.
macOS 10.15+
visionOS 1.0+ Beta
struct MLWordEmbedding
Overview
Use an MLWordEmbedding to configure and save a word embedding to a file, which you then add to your project in Xcode. Your project uses that word embedding file at runtime to create an NLEmbedding instance, which finds similar strings based on the proximity of their vectors.
You configure a word embedding with a dictionary, keyed by strings which make up the vocabulary of the word embedding. The value for each string is an array of doubles, which represents a vector. The length of the arrays is arbitrary but all arrays in a word embedding must be the same length. The length of the arrays determine the number of dimensions in the vector space. For example, the following listing creates a word embedding with four dimensions and a vocabulary of two strings.
    "Hello"   : [0.0, 1.2, 5.0, 0.0],
    "Goodbye" : [0.0, 1.3, -6.2, 0.1]
]) ```


Once you’ve configured an ``MLWordEmbedding``, save it to an `.mlmodel` file
to include in your app.


```swift try wordEmbedding.write(toFile: "~/Desktop/WordEmbedding.mlmodel")
A word embedding file can efficiently store many strings and their vectors.
Topics
Creating a Word Embedding
init(dictionary: [String : [Double]], parameters: MLWordEmbedding.ModelParameters) throws
Creates a word embedding.
struct ModelParameters
The model configuration parameters.
let modelParameters: MLWordEmbedding.ModelParameters
The model configuration parameters.
Testing a Word Embedding
func prediction(from: String, maxCount: Int, maxDistance: Double, distanceType: NLDistanceType) throws -> [(text: String, distance: Double)]
Predicts neighbors.
func distance(between: String, and: String, distanceType: NLDistanceType) -> Double
Calculates the distance between two strings in the vocabulary space.
enum NLDistanceType
The means of calculating a distance between two locations in a text embedding.
func contains(String) -> Bool
Returns a Boolean value indicating whether the vocabulary contains the given string.
func vector(for: String) -> [Double]?
Accesses the vector associated with the given string in the vocabulary.
Saving a Word Embedding
func write(to: URL, metadata: MLModelMetadata?) throws
Exports the word embedding as a Core ML model file at the specified URL.
func write(toFile: String, metadata: MLModelMetadata?) throws
Exports the word embedding as a Core ML model file at the specified file path.
Describing a Word Embedding
let dimension: Int
The number of dimensions in the vocabulary embedding space.
let vocabularySize: Int
The number of strings in the vocabulary.
var model: MLModel
The word embedding contained within a Core ML model file.
var description: String
A text representation of the word embedding.
var debugDescription: String
A text representation of the word embedding that’s suitable for output during debugging.
var playgroundDescription: Any
A description of the word embedding shown in a playground.
Default Implementations
API Reference
CustomDebugStringConvertible Implementations
API Reference
CustomPlaygroundDisplayConvertible Implementations
API Reference
CustomStringConvertible Implementations
Relationships
Conforms To
CustomDebugStringConvertible
CustomPlaygroundDisplayConvertible
CustomStringConvertible
Sendable
See Also
Text Models
Creating a text classifier model
Train a machine learning model to classify natural language text.
struct MLTextClassifier
A model you train to classify natural language text.
struct MLWordTagger
A word-tagging model you train to classify natural language text at the word level.
struct MLGazetteer
A collection of terms and their labels, which augments a tagger that analyzes natural language text.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is MLWordEmbedding
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


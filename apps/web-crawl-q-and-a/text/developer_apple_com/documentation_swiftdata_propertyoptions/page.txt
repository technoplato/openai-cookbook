https://developer.apple.com/documentation/swiftdata/propertyoptions

Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
SetAlgebra Implementations
RawRepresentable Implementations
OptionSet Implementations
Equatable Implementations
CustomDebugStringConvertible Implementations
Default Implementations
T
PropertyOptions.Element
r
P
RelationshipCollection
#
macro Relationship(Relationship.DeleteRule, PropertyOptions..., originalName: String?, inverse: AnyKeyPath?, hashModifier: String?)
#
macro Transient()
#
macro Attribute(PropertyOptions..., originalName: String?, hashModifier: String?)
r
P
PersistentModel
#
macro Model()
Model definition
Adopting SwiftData for a Core Data app
Documentation
Open Menu
Swift
Class
PropertyOptions
An object that defines the behavior of a property when SwiftData manages the owning class.
iOS 17.0+ Beta
iPadOS 17.0+ Beta
macOS 14.0+ Beta
Mac Catalyst 17.0+ Beta
tvOS 17.0+ Beta
watchOS 10.0+ Beta
visionOS 1.0+ Beta
Swift 5.9+
class PropertyOptions
Topics
Accessing property options
static let encrypt: PropertyOptions
Stores the property’s value in an encrypted form.
static let externalStorage: PropertyOptions
Stores the property’s value as binary data adjacent to the model storage.
static let preserveValueOnDeletion: PropertyOptions
Preserves the property’s value in the persistent history when the context deletes the owning model.
static let spotlight: PropertyOptions
Indexes the property’s value so it can appear in Spotlight search results.
static let transformable: PropertyOptions
Transforms the property’s value between an in-memory form and a persisted form.
static let transient: PropertyOptions
Enables to the context to disregard the property when saving the owning model.
static let unique: PropertyOptions
Ensures the property’s value is unique across all models of the same type.
Creating property options
init(rawValue: UInt)
Creates a new option set from the given raw value.
let rawValue: UInt
The corresponding value of the raw type.
typealias RawValue
The raw type that can be used to represent all values of the conforming type.
Supporting types
typealias ArrayLiteralElement
The type of the elements of an array literal.
typealias Element
The element type of the option set.
Default Implementations
API Reference
CustomDebugStringConvertible Implementations
API Reference
Equatable Implementations
API Reference
OptionSet Implementations
API Reference
RawRepresentable Implementations
API Reference
SetAlgebra Implementations
Relationships
Conforms To
CustomDebugStringConvertible
Decodable
Encodable
Equatable
ExpressibleByArrayLiteral
Hashable
OptionSet
RawRepresentable
SetAlgebra
See Also
Model definition
macro Model()
Converts a Swift class into a stored model that’s managed by SwiftData.
protocol PersistentModel
An interface that enables SwiftData to manage a Swift class as a stored model.
macro Attribute(PropertyOptions..., originalName: String?, hashModifier: String?)
Specifies the custom behavior that SwiftData applies to the annotated property when managing the owning class.
macro Transient()
Tells SwiftData not to persist the annotated property when managing the owning class.
macro Relationship(Relationship.DeleteRule, PropertyOptions..., originalName: String?, inverse: AnyKeyPath?, hashModifier: String?)
Specifies the options that SwiftData needs to manage the annotated property as a relationship between two models.
protocol RelationshipCollection
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is PropertyOptions
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


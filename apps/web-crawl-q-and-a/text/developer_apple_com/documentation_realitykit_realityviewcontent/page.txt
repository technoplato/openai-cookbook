https://developer.apple.com/documentation/realitykit/realityviewcontentSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
Default Implementations
T
RealityView.DefaultPlaceholder
T
RealityView.Body
T
RealityView.AttachmentContent
Type Aliases
S
RealityViewEntityCollection
S
RealityViewAttachmentContent
func subscribe<E>(to: E.Type, on: (EventSource)?, componentType: (Component.Type)?, (E) -> Void) -> EventSubscription
Working with content
P
var body: some View
M
init<A, P>(make: (inout RealityViewContent, RealityViewAttachments) async -> Void, update: ((inout RealityViewContent, RealityViewAttachments) -> Void)?, placeholder: () -> P, attachments: () -> A)
M
init<P>(make: (inout RealityViewContent) async -> Void, update: ((inout RealityViewContent) -> Void)?, placeholder: () -> P)
M
init<A>(make: (inout RealityViewContent, RealityViewAttachments) async -> Void, update: ((inout RealityViewContent, RealityViewAttachments) -> Void)?, attachments: () -> A)
M
init(make: (inout RealityViewContent) async -> Void, update: ((inout RealityViewContent) -> Void)?)
Creating a reality view
S
RealityView
Beta
Documentation
Open Menu
Swift
Structure
RealityViewContent
The content of a RealityView that is displayed inline.
RealityKit
SwiftUI
visionOS 1.0+ Beta
struct RealityViewContent
Overview
On xrOS, RealityViewContent is used to display your RealityKit content inline in true 3D space, occupying the available space in your app’s 3D bounds.
You can use RealityViewContent to add and remove entities, subscribe to RealityKit events, and perform coordinate conversions between RealityKit entity space and a SwiftUI View’s coordinate space.
Topics
Structures
struct Body
The default view contents of a RealityView using RealityViewContent.
Instance Properties
var entities: RealityViewEntityCollection
The RealityKit entities to be displayed in this RealityView.
Instance Methods
func subscribe<E>(to: E.Type, on: (EventSource)?, componentType: (Component.Type)?, (E) -> Void) -> EventSubscription
Subscribes to the provided RealityKit Event with handler.
Type Aliases
typealias Entities
The type of collection used for entities.
Default Implementations
API Reference
RealityCoordinateSpaceConverting Implementations
API Reference
RealityViewContentProtocol Implementations
Relationships
Conforms To
RealityCoordinateSpace
RealityCoordinateSpaceConverting
RealityViewContentProtocol
See Also
Working with content
protocol RealityViewContentProtocol
A protocol representing the content of a RealityView.
Beta
struct RealityViewEntityCollection
A collection of entities in a RealityView.
Beta
struct RealityViewAttachmentContent
A view that represents the contents of a RealityView with attachments.
Beta
struct RealityViewDefaultPlaceholder
A view that represents the default placeholder for a RealityView.
Beta
struct RealityViewAttachmentContent
A view that represents the contents of a RealityView with attachments.
Beta
struct RealityViewEntityCollection
A collection of entities in a RealityView.
Beta
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is RealityViewContent
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


https://developer.apple.com/documentation/realitykit/animationtimingfunction/cubicbezier(controlpoint1:controlpoint2:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
S
FromToByAnimation
S
AnimationTimingFunction
Creating Timing Functions
P
static var `default`: AnimationTimingFunction
P
static var easeIn: AnimationTimingFunction
P
static var easeInOut: AnimationTimingFunction
P
static var easeOut: AnimationTimingFunction
P
static var linear: AnimationTimingFunction
static func cubicBezier(controlPoint1: SIMD2<Float>, controlPoint2: SIMD2<Float>) -> AnimationTimingFunction
S
BindPath
E
BindTarget
S
BindableValue
S
BindableValuesReference
S
ParameterSet
S
InternalBindPath
Blend Trees
Documentation
Open Menu
Swift
Type Method
cubicBezier(controlPoint1:controlPoint2:)
Creates a timing function that accelerates and then decelerates towards the target value with the cubic bezier shape specified by two control points.
iOS 13.0+
iPadOS 13.0+
macOS 10.15+
Mac Catalyst 13.0+
visionOS 1.0+ Beta
static func cubicBezier(
    controlPoint1: SIMD2<Float>,
    controlPoint2: SIMD2<Float>
) -> AnimationTimingFunction
Parameters
controlPoint1
The first control point for the cubic bezier function.
Return Value
The cubic bezier timing function.
Discussion
controlPoint2: The second control point for the cubic bezier function.
See Also
Creating Timing Functions
static var `default`: AnimationTimingFunction
A timing function that produces the default curve for the transition.
static var easeIn: AnimationTimingFunction
A timing function that produces a gradual starting transition.
static var easeInOut: AnimationTimingFunction
A timing function that produces a gradual starting and ending transition.
static var easeOut: AnimationTimingFunction
A timing function that produces a gradual ending transition.
static var linear: AnimationTimingFunction
A timing function that produces a linear transition.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is cubicBezier(controlPoint1:controlPoint2:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright Â© 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


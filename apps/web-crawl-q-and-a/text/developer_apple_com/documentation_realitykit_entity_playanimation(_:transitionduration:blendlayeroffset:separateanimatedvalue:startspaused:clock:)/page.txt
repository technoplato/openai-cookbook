https://developer.apple.com/documentation/realitykit/entity/playanimation(_:transitionduration:blendlayeroffset:separateanimatedvalue:startspaused:clock:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
r
P
HasSynchronization
r
P
TransientComponent
Finding the Nearest Anchor
P
var anchor: (HasAnchoring)?
Calculating the Collision Shape
M
func generateCollisionShapes(recursive: Bool)
Playing Animations
P
var availableAnimations: [AnimationResource]
func playAnimation(AnimationResource, transitionDuration: TimeInterval, blendLayerOffset: Int, separateAnimatedValue: Bool, startsPaused: Bool, clock: CMClockOrTimebase?) -> AnimationPlaybackController
func playAnimation(AnimationResource, transitionDuration: TimeInterval, startsPaused: Bool) -> AnimationPlaybackController
func playAnimation(named: String, transitionDuration: TimeInterval, startsPaused: Bool, recursive: Bool) -> AnimationPlaybackController
E
TweenMode
P
var bindableValues: BindableValuesReference
S
BindPath
E
BindTarget
r
P
BindableData
S
BindableValue
S
BindableValuesReference
Documentation
Open Menu
Swift
Instance Method
playAnimation(_:transitionDuration:blendLayerOffset:separateAnimatedValue:startsPaused:clock:)
Plays an animation with the specified options.
iOS 15.0+
iPadOS 15.0+
macOS 12.0+
Mac Catalyst 15.0+
visionOS 1.0+ Beta
@discardableResult @MainActor
func playAnimation(
    _ animation: AnimationResource,
    transitionDuration: TimeInterval = 0,
    blendLayerOffset: Int = 0,
    separateAnimatedValue: Bool = false,
    startsPaused: Bool = false,
    clock: CMClockOrTimebase? = nil
) -> AnimationPlaybackController
Parameters
animation
The animation to play.
transitionDuration
The duration in seconds over which the animation fades in or cross-fades.
blendLayerOffset
An integer that specifies the order in which to apply animations when more than one animation is playing. Valid values are 0 or 1.
separateAnimatedValue
When set to false, this value indicates that the animation will write directly to the entity’s base value. When set to true, this value indicates that the animation will write to an interim value for the duration of the animation. If this value is set to true then when the animation completes, the entity’s value will be reset to the base value.
startsPaused
A Boolean that pauses the progress of an animation when set to true.
clock
An optional clock to drive the animation with a custom timescale.
Returns
An animation playback controller that you can use to start and stop the animation.
Discussion
Call this method to play an animation and configure playback options. RealityKit supports blending up to two different animations at the same time. When RealityKit applies multiple animations to an entity, the order in which it applies the animations affects the final animation. Use the blendLayerOffset parameter to specify the order of animations when playing multiple animations at the same time.
See Also
Playing Animations
var availableAnimations: [AnimationResource]
The list of animations associated with the entity.
func stopAllAnimations(recursive: Bool)
Stops all playing of animations on this entity.
func playAnimation(AnimationResource, transitionDuration: TimeInterval, startsPaused: Bool) -> AnimationPlaybackController
Plays the given animation on the entity.
func playAnimation(named: String, transitionDuration: TimeInterval, startsPaused: Bool, recursive: Bool) -> AnimationPlaybackController
Plays all the animations with the given name on the entity.
Deprecated
var defaultAnimationClock: CMClockOrTimebase
Returns the default animation clock for this entity.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is playAnimation(_:transitionDuration:blendLayerOffset:separateAnimatedValue:startsPaused:clock:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


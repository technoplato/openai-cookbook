https://developer.apple.com/documentation/realitykit/animationeventsSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
Identifiable Implementations
Hashable Implementations
Equatable Implementations
Default Implementations
M
func findEntity(id: Entity.ID) -> Entity?
Instance Methods
P
var timebase: CMTimebase
E
SceneEvents
S
Scene.Publisher
M
func subscribe<E>(to: E.Type, on: (EventSource)?, componentType: (Component.Type)?, (E) -> Void) -> Cancellable
M
func publisher<E>(for: E.Type, on: (EventSource)?, componentType: (Component.Type)?) -> Scene.Publisher<E>
M
func subscribe<E>(to: E.Type, on: (EventSource)?, (E) -> Void) -> Cancellable
M
func publisher<E>(for: E.Type, on: (EventSource)?) -> Scene.Publisher<E>
Getting and Sending Events
r
P
SynchronizationService
Documentation
Open Menu
Swift
Enumeration
AnimationEvents
Notable milestones that the framework signals during animation playback.
iOS 13.0+
iPadOS 13.0+
macOS 10.15+
Mac Catalyst 13.0+
visionOS 1.0+ Beta
enum AnimationEvents
Overview
This enumeration defines the playback states that an animated entity can indicate to an app. To receive notification of a particular event, create a completion handler:
private func onAnimationCompleted(_ event:
    AnimationEvents.PlaybackCompleted) {
        // Define code that runs when the animation completes.
}
Then, subscribe the handler on the entity for the state of interest:
// Get an animation.
let animationName =
entity.availableAnimations.first!.name!


// Pass the animation to an entity and get a controller.
entity.playAnimation(named: animationName, transitionDuration: 0.0)


entitySubscription = view.scene.publisher(for:
    AnimationEvents.PlaybackCompleted.self, on: entity)
        .sink(receiveValue: onAnimationCompleted)
Topics
Recognizing Animation Events
struct PlaybackCompleted
The event raised when an animation reaches the end of its duration.
struct PlaybackLooped
The event raised when an animation loops.
struct PlaybackTerminated
The event raised when an event has been terminated, regardless of whether it ran to completion.
See Also
Getting and Sending Events
func publisher<E>(for: E.Type, on: (EventSource)?) -> Scene.Publisher<E>
Generates a publisher for events of the specified type.
func subscribe<E>(to: E.Type, on: (EventSource)?, (E) -> Void) -> Cancellable
Receives events of the given type.
func publisher<E>(for: E.Type, on: (EventSource)?, componentType: (Component.Type)?) -> Scene.Publisher<E>
Returns a Publisher for events of the specified type in a Scene.
func subscribe<E>(to: E.Type, on: (EventSource)?, componentType: (Component.Type)?, (E) -> Void) -> Cancellable
Receive events of type E.
struct Publisher
A publisher for the given event type in the scene.
enum SceneEvents
Events the scene triggers.
enum AudioEvents
Events associated with audio playback.
enum CollisionEvents
Events associated with collisions.
protocol Event
A type that can be sent as an event.
protocol EventSource
A type on which events can be published and subscribed.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is AnimationEvents
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright Â© 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


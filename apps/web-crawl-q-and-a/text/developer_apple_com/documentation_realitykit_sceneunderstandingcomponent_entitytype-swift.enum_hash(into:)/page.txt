https://developer.apple.com/documentation/realitykit/sceneunderstandingcomponent/entitytype-swift.enum/hash(into:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
S
ImageBasedLightComponent
Beta
S
DirectionalLightComponent
Lighting
S
VideoPlayerComponent
Beta
S
SynchronizationComponent
r
P
TransientComponent
S
Transform
static func != (Self, Self) -> Bool
static func == (SceneUnderstandingComponent.EntityType, SceneUnderstandingComponent.EntityType) -> Bool
Comparing Entity Types
E
case meshChunk
E
case face
Choosing the Entity Type
E
SceneUnderstandingComponent.EntityType
P
var entityType: SceneUnderstandingComponent.EntityType?
Documentation
Open Menu
Swift
Instance Method
hash(into:)
Hashes the essential components of a value by feeding them into the given hasher.
iOS 15.0+
iPadOS 15.0+
macOS 12.0+
Mac Catalyst 15.0+
visionOS 1.0+ Beta
func hash(into hasher: inout Hasher)
Parameters
hasher
The hasher to use when combining the components of this instance.
Overview
Implement this function to conform to Hashable. The hashing components need to be the same as the ones passed into the conforming type’s == operator. Call hasher.doc://com.apple.documentation/documentation/swift/hasher/2995578-combine with these components.
Note
Don’t call doc://com.apple.documentation/documentation/swift/hasher/2995580-finalize on hasher because it can generate a compile-time error.
See Also
Comparing Entity Types
static func == (SceneUnderstandingComponent.EntityType, SceneUnderstandingComponent.EntityType) -> Bool
Returns a Boolean value indicating whether two entity types are equal.
static func != (Self, Self) -> Bool
Returns a Boolean value indicating whether two entity types aren’t equal.
var hashValue: Int
The hash value.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is hash(into:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


https://developer.apple.com/documentation/swiftdata/modelcontext

Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func delete<T>(model: T.Type, where: Predicate<T>?, includeSubclasses: Bool) throws
P
var deletedObjectsArray: [PersistentModel]
Deleting models
P
var changedObjectsArray: [PersistentModel]
P
var hasChanges: Bool
Modifying models
M
func insert<T>(T)
func enumerate<T>(FetchDescriptor<T>, batchSize: Int, allowEscapingMutations: Bool?, block: (T) throws -> Void) throws
C
ModelContainer
Model storage
C
PropertyOptions
r
P
RelationshipCollection
#
macro Relationship(Relationship.DeleteRule, PropertyOptions..., originalName: String?, inverse: AnyKeyPath?, hashModifier: String?)
#
macro Transient()
#
macro Attribute(PropertyOptions..., originalName: String?, hashModifier: String?)
r
P
PersistentModel
Documentation
Open Menu
Swift
Class
ModelContext
An object that enables you to fetch, insert, and delete models, and save any changes to disk.
iOS 17.0+ Beta
iPadOS 17.0+ Beta
macOS 14.0+ Beta
Mac Catalyst 17.0+ Beta
tvOS 17.0+ Beta
watchOS 10.0+ Beta
visionOS 1.0+ Beta
Swift 5.9+
class ModelContext
Topics
Creating a model context
init(ModelContainer)
class ModelContainer
An object that manages an app’s schema and model storage configuration.
Fetching models
func fetch<T>(FetchDescriptor<T>) throws -> [T]
func fetchCount<T>(FetchDescriptor<T>) throws -> Int
struct FetchDescriptor
A type that describes the criteria, sort order, and any additional configuration to use when performing a fetch.
func fetch<T>(FetchDescriptor<T>, batchSize: Int) throws -> FetchResultsCollection<T>
struct FetchResultsCollection
A collection that efficiently provides the results of a completed fetch.
func enumerate<T>(FetchDescriptor<T>, batchSize: Int, allowEscapingMutations: Bool?, block: (T) throws -> Void) throws
func object(with: PersistentIdentifier) -> PersistentModel
func registeredModel<T>(for: PersistentIdentifier) -> T?
Inserting models
var insertedObjectsArray: [PersistentModel]
func insert<T>(T)
Modifying models
var hasChanges: Bool
var changedObjectsArray: [PersistentModel]
Deleting models
var deletedObjectsArray: [PersistentModel]
func delete<T>(model: T.Type, where: Predicate<T>?, includeSubclasses: Bool) throws
func delete<T>(T)
Persisting unsaved changes
var autosaveEnabled: Bool
func save() throws
func transaction(block: () throws -> Void) throws
func rollback()
Fetching only model identifiers
func fetchIdentifiers<T>(FetchDescriptor<T>) throws -> [PersistentIdentifier]
func fetchIdentifiers<T>(FetchDescriptor<T>, batchSize: Int) throws -> FetchResultsCollection<PersistentIdentifier>
Accessing the container
var container: ModelContainer
Performing undo and redo
var undoManager: UndoManager?
func processPendingChanges()
Registering for notifications
static let willSave: Notification.Name
static let didSave: Notification.Name
enum NotificationKey
Describes the data in the user info dictionary of a notification sent by a model context.
Comparing contexts
static func == (ModelContext, ModelContext) -> Bool
Returns a Boolean value indicating whether two values are equal.
Debugging
var debugDescription: String
Default Implementations
API Reference
Equatable Implementations
Relationships
Conforms To
Equatable
Sendable
See Also
Model storage
class ModelContainer
An object that manages an app’s schema and model storage configuration.
struct ModelDocument
A document type that uses SwiftData to manage its storage.
Beta
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is ModelContext
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


https://developer.apple.com/documentation/realitykit/charactercontrollercomponentSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
P
static let defaultSlopeLimit: Float
P
static let defaultSkinWidth: Float
P
static let defaultRadius: Float
P
static let defaultHeight: Float
Reading Default Values
P
var collisionFilter: CollisionFilter
S
CharacterControllerComponent.CollisionFlags
init(radius: Float, height: Float, skinWidth: Float, slopeLimit: Float, stepLimit: Float, upVector: SIMD3<Float>, collisionFilter: CollisionFilter)
S
ModelSortGroupComponent
Beta
S
ModelDebugOptionsComponent
S
ModelComponent
3D Models
S
PointLightComponent
S
SpotLightComponent
S
GroundingShadowComponent
Beta
S
ImageBasedLightReceiverComponent
Beta
Documentation
Open Menu
Swift
Structure
CharacterControllerComponent
A component that manages character movement.
iOS 15.0+
iPadOS 15.0+
macOS 12.0+
Mac Catalyst 15.0+
visionOS 1.0+ Beta
struct CharacterControllerComponent
Overview
To use a character controller, add a CharacterControllerComponent and a CharacterControllerStateComponent to your entity to make it a character entity. Character entities can move to new locations in space, which happens over a period of time based on how you’ve configured the character controller component, and also teleport, which moves the charcter to the new location instantaneously.
Topics
Creating a Character Controller Component
init()
Initializes a character controller component using default values.
init(radius: Float, height: Float, skinWidth: Float, slopeLimit: Float, stepLimit: Float, upVector: SIMD3<Float>, collisionFilter: CollisionFilter)
Initializes a character controller component using specified values.
Configuring a Character
var height: Float
The capsule height.
var radius: Float
The capsule radius.
var skinWidth: Float
An added tolerance around the character capsule.
var slopeLimit: Float
The slope limit expressed as a limit angle in radians.
var stepLimit: Float
The maximum obstacle height that the controller can move over.
var upVector: SIMD3<Float>
Y axis direction relative to the physics origin.
Maintaining Character State
struct CharacterControllerStateComponent
An object that maintains state for a character controller.
Managing Character Collisions
struct Collision
A container that holds collision state for the character controller.
struct CollisionFlags
An option set that specifies which parts of the character capsule have collided with other objects.
var collisionFilter: CollisionFilter
The character’s collision filter.
Reading Default Values
static let defaultHeight: Float
static let defaultRadius: Float
static let defaultSkinWidth: Float
static let defaultSlopeLimit: Float
static let defaultStepLimit: Float
static let defaultUpVector: SIMD3<Float>
Animating a Character
struct JointTransforms
A set of animatable transform values for joints that collectively represent a single skeletal pose.
Default Implementations
API Reference
Component Implementations
Relationships
Conforms To
Component
See Also
3D Models
struct ModelComponent
A collection of resources that create the visual appearance of an entity.
struct ModelDebugOptionsComponent
A component that changes how RealityKit renders its entity to help with debugging.
struct ModelSortGroupComponent
A component that allows an entity’s models to be rendered in an explicit order relative to the models of other entities in the same sort group. If this component is on an entity, then it must belong to a sort group.
Beta
struct CharacterControllerStateComponent
An object that maintains state for a character controller.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is CharacterControllerComponent
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


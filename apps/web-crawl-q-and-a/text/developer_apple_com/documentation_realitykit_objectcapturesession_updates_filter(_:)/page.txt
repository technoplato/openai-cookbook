https://developer.apple.com/documentation/realitykit/objectcapturesession/updates/filter(_:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
P
var isPausedUpdates: ObjectCaptureSession.Updates<Bool>
P
var feedbackUpdates: ObjectCaptureSession.Updates<Set<ObjectCaptureSession.Feedback>>
P
var configuration: ObjectCaptureSession.Configuration
P
var canRequestImageCaptureUpdates: ObjectCaptureSession.Updates<Bool>
P
var canRequestImageCapture: Bool
P
var cameraTrackingUpdates: ObjectCaptureSession.Updates<ObjectCaptureSession.Tracking>
P
var cameraTracking: ObjectCaptureSession.Tracking
func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result
func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>
func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>
func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>
func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>
M
func dropFirst(Int) -> AsyncDropFirstSequence<Self>
M
func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>
M
func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool
M
func contains(Self.Element) async rethrows -> Bool
M
func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>
M
func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>
M
func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool
Instance Methods
Documentation
Open Menu
Swift
Instance Method
filter(_:)
Creates an asynchronous sequence that contains, in order, the elements of the base sequence that satisfy the given predicate.
RealityKit
SwiftUI
iOS 13.0+
iPadOS 13.0+
macOS 10.15+
Mac Catalyst 13.0+
tvOS 13.0+
watchOS 6.0+
visionOS 1.0+ Beta
@preconcurrency
func filter(_ isIncluded: @escaping (Self.Element) async -> Bool) -> AsyncFilterSequence<Self>
Parameters
isIncluded
A closure that takes an element of the asynchronous sequence as its argument and returns a Boolean value that indicates whether to include the element in the filtered sequence.
Return Value
An asynchronous sequence that contains, in order, the elements of the base sequence that satisfy the given predicate.
Discussion
In this example, an asynchronous sequence called Counter produces Int values from 1 to 10. The filter(_:) method returns true for even values and false for odd values, thereby filtering out the odd values:
let stream = Counter(howHigh: 10)
    .filter { $0 % 2 == 0 }
for await number in stream {
    print(number, terminator: " ")
}
// Prints "2 4 6 8 10 "
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is filter(_:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright Â© 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


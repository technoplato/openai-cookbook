https://developer.apple.com/documentation/realitykit/physicsmotioncomponentSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
Diorama
Asset creation
r
P
EntityCollection
Beta
r
P
TransientComponent
S
PerspectiveCameraComponent
S
ParticleEmitterComponent
Beta
S
PhysicsSimulationComponent
S
PhysicsBodyComponent
S
CollisionComponent
Simulations
S
SpatialAudioComponent
Beta
S
ChannelAudioComponent
Beta
S
AudioMixGroupsComponent
Beta
S
AmbientAudioComponent
Beta
Sound
Documentation
Open Menu
Swift
Structure
PhysicsMotionComponent
A component that controls the motion of the body in physics simulations.
iOS 13.0+
iPadOS 13.0+
macOS 10.15+
Mac Catalyst 13.0+
visionOS 1.0+ Beta
struct PhysicsMotionComponent
Overview
You specify velocities in the coordinate space of the physics simulation defined by physicsOrigin.
The behavior of an entity with a physics motion component depends on the entity’s mode setting:
PhysicsBodyMode.static
The physics simulation ignores the velocities. The entity doesn’t move. - term PhysicsBodyMode.kinematic: The physics simulation moves the body according to the values you set for angularVelocity and linearVelocity. - term PhysicsBodyMode.dynamic: The physics simulation overwrites the velocity values based on simulation, and ignores any values that you write.
Topics
Creating the Motion Component
init()
Creates a physics motion component at rest.
init(linearVelocity: SIMD3<Float>, angularVelocity: SIMD3<Float>)
Creates a physics motion component with the given velocities.
Setting Velocity
var angularVelocity: SIMD3<Float>
The angular velocity of the body around the center of mass.
var linearVelocity: SIMD3<Float>
The linear velocity of the body in the physics simulation.
Registering a Component Type
static func registerComponent()
Registers a new component type.
Comparing Physics Motion Components
static func == (PhysicsMotionComponent, PhysicsMotionComponent) -> Bool
Indicates whether two physics motion components are equal.
static func != (Self, Self) -> Bool
Indicates whether two physics motion components are not equal.
Default Implementations
API Reference
Component Implementations
API Reference
Equatable Implementations
Relationships
Conforms To
Component
Equatable
See Also
Simulations
struct CollisionComponent
A component that gives an entity the ability to collide with other entities that also have collision components.
struct PhysicsBodyComponent
A component that defines an entity’s behavior in physics body simulations.
struct PhysicsSimulationComponent
Beta
struct ParticleEmitterComponent
Beta
struct PerspectiveCameraComponent
In AR applications, the camera is automatically provided by the system. In non-AR scenarios, the camera needs to be set by the app. (If no camera is provided by the app, the system will use default camera.)
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is PhysicsMotionComponent
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


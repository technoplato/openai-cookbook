https://developer.apple.com/documentation/coreml/mlupdatecontext

Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
C
MLDictionaryFeatureProvider
r
P
MLFeatureProvider
C
MLFeatureValue
Making Predictions with a Sequence of Inputs
Model Inputs and Outputs
C
MLParameterKey
M
func resume(withParameters: [MLParameterKey : Any])
C
MLModelConfiguration
r
P
MLBatchProvider
M
init(forModelAt: URL, trainingData: MLBatchProvider, configuration: MLModelConfiguration?, progressHandlers: MLUpdateProgressHandlers)
M
init(forModelAt: URL, trainingData: MLBatchProvider, configuration: MLModelConfiguration?, completionHandler: (MLUpdateContext) -> Void)
M
init(forModelAt: URL, trainingData: MLBatchProvider, progressHandlers: MLUpdateProgressHandlers)
M
init(forModelAt: URL, trainingData: MLBatchProvider, completionHandler: (MLUpdateContext) -> Void)
Creating an Update Task
C
MLUpdateTask
Documentation
Open Menu
Class
MLUpdateContext
The context an update task provides to your app’s completion and update progress handlers.
iOS 13.0+
iPadOS 13.0+
macOS 10.15+
Mac Catalyst 13.1+
tvOS 14.0+
watchOS 6.0+
visionOS 1.0+ Beta
class MLUpdateContext : NSObject
Topics
Getting the Update Context
var event: MLUpdateProgressEvent
The event type that triggered an update task to notify your app’s completion and update progress handlers.
struct MLUpdateProgressEvent
A type of event during a model update task.
var task: MLUpdateTask
The update task that generated the update context.
var parameters: [MLParameterKey : Any]
The parameters for the update task.
class MLParameterKey
The keys for the parameter dictionary in a model configuration or a model update context.
Evaluating the Update
var metrics: [MLMetricKey : Any]
The training metrics of the model for the update task, contained in a dictionary.
class MLMetricKey
A key for the metrics dictionary in an update context.
Saving an Updated Model
var model: MLModel & MLWritable
The underlying Core ML model stored in memory.
protocol MLWritable
A set of methods that saves a machine learning type to the file system.
Relationships
Inherits From
NSObject
See Also
Creating an Update Task
init(forModelAt: URL, trainingData: MLBatchProvider, completionHandler: (MLUpdateContext) -> Void)
Creates a task that updates the model at the URL with the training data, and calls the completion handler when the update completes.
init(forModelAt: URL, trainingData: MLBatchProvider, progressHandlers: MLUpdateProgressHandlers)
Creates a task that updates the model at the URL with the training data, and calls the progress handlers during and after the update.
init(forModelAt: URL, trainingData: MLBatchProvider, configuration: MLModelConfiguration?, completionHandler: (MLUpdateContext) -> Void)
Creates a task that updates the model at the URL with the training data and configuration, and calls the completion handler when the update completes.
init(forModelAt: URL, trainingData: MLBatchProvider, configuration: MLModelConfiguration?, progressHandlers: MLUpdateProgressHandlers)
Creates a task that updates the model at the URL with the training data and configuration, and calls the progress handlers during and after the update.
protocol MLBatchProvider
An interface that represents a collection of feature providers.
class MLModelConfiguration
The settings for creating or updating a machine learning model.
class MLUpdateProgressHandlers
A collection of closures an update task uses to notify your app of its progress.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is MLUpdateContext
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


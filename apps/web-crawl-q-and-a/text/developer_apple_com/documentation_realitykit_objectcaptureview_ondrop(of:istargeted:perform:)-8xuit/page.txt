https://developer.apple.com/documentation/realitykit/objectcaptureview/ondrop(of:istargeted:perform:)-8xuitSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View
M
func overlay<Overlay>(Overlay, alignment: Alignment) -> some View
M
func opacity(Double) -> some View
M
func onTapGesture(count: Int, perform: () -> Void) -> some View
M
func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View
M
func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View
M
func onReceive<P>(P, perform: (P.Output) -> Void) -> some View
func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View
func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View
func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View
func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View
func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View
func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View
func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View
func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View
func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View
M
func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View
M
func onDrop(of: [String], delegate: DropDelegate) -> some View
Deprecated
M
func onDrop(of: [UTType], delegate: DropDelegate) -> some View
M
func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View
M
func onDrag(() -> NSItemProvider) -> some View
M
func onDisappear(perform: (() -> Void)?) -> some View
M
func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View
M
func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View
Documentation
Open Menu
Swift
Instance Method
onDrop(of:isTargeted:perform:)
Defines the destination for a drag and drop operation with the same size and position as this view, handling dropped content and the drop location with the given closure.
RealityKit
SwiftUI
iOS 13.4–17.0 Deprecated
iPadOS 13.4–17.0 Deprecated
macOS 10.15–14.0 Deprecated
Mac Catalyst 13.4–17.0 Deprecated
visionOS 1.0–1.0 Deprecated
func onDrop(
    of supportedTypes: [String],
    isTargeted: Binding<Bool>?,
    perform action: @escaping ([NSItemProvider], CGPoint) -> Bool
) -> some View
Deprecated
Provide `UTType`s as the `supportedContentTypes` instead.
Parameters
supportedTypes
The uniform type identifiers that describe the types of content this view can accept through drag and drop. If the drag and drop operation doesn’t contain any of the supported types, then this drop destination doesn’t activate and isTargeted doesn’t update.
isTargeted
A binding that updates when a drag and drop operation enters or exits the drop target area. The binding’s value is true when the cursor is inside the area, and false when the cursor is outside.
action
A closure that takes the dropped content and responds appropriately. The first parameter to action contains the dropped items, with types specified by supportedTypes. The second parameter contains the drop location in this view’s coordinate space. Return true if the drop operation was successful; otherwise, return false.
Return Value
A view that provides a drop destination for a drag operation of the specified types.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is onDrop(of:isTargeted:perform:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


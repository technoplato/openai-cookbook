https://developer.apple.com/documentation/realitykit/realityview/defaultfocus(_:_:priority:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View
M
func environmentObject<T>(T) -> some View
M
func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View
M
func environment<T>(T?) -> some View
M
func edgesIgnoringSafeArea(Edge.Set) -> some View
M
func dynamicTypeSize(DynamicTypeSize) -> some View
M
func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View
func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View
M
func defaultAppStorage(UserDefaults) -> some View
M
func datePickerStyle<S>(S) -> some View
M
func cornerRadius(CGFloat, antialiased: Bool) -> some View
M
func coordinateSpace<T>(name: T) -> some View
M
func coordinateSpace(NamedCoordinateSpace) -> some View
M
func controlSize(ControlSize) -> some View
M
func controlGroupStyle<S>(S) -> some View
M
func contrast(Double) -> some View
Documentation
Open Menu
Swift
Instance Method
defaultFocus(_:_:priority:)
Defines a region of the window in which default focus is evaluated by assigning a value to a given focus state binding.
RealityKit
SwiftUI
iOS 17.0+ Beta
iPadOS 17.0+ Beta
macOS 13.0+
Mac Catalyst 17.0+ Beta
tvOS 16.0+
watchOS 9.0+
visionOS 1.0+ Beta
func defaultFocus<V>(
    _ binding: FocusState<V>.Binding,
    _ value: V,
    priority: DefaultFocusEvaluationPriority = .automatic
) -> some View where V : Hashable
Parameters
binding
A focus state binding to update when evaluating default focus in the modified view hierarchy.
value
The value to set the binding to during evaluation.
priority
An indication of how to prioritize the preferred default focus target when focus moves into the modified view hierarchy. The default value is automatic, which means the preference will be given priority when focus is being initialized or relocated programmatically, but not when responding to user-directed navigation commands.
Return Value
The modified view.
Discussion
By default, SwiftUI evaluates default focus when the window first appears, and when a focus state binding update moves focus automatically, but not when responding to user-driven navigation commands.
Clients can override the default behavior by specifying an evaluation priority of DefaultFocusEvaluationPriority/userInitiated, which causes SwiftUI to use the client’s preferred default focus in response to user-driven focus navigation as well as automatic changes.
In the following example, focus automatically goes to the second of the two text fields when the view is first presented in the window.
WindowGroup {
    VStack {
        TextField(...)
            .focused($focusedField, equals: .firstField)
        TextField(...)
            .focused($focusedField, equals: .secondField)
    }
    .defaultFocus($focusedField, .secondField)
}
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is defaultFocus(_:_:priority:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


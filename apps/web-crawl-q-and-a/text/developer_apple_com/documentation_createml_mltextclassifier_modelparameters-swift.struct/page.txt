https://developer.apple.com/documentation/createml/mltextclassifier/modelparameters-swift.struct

Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
Instance Properties
P
var labelColumnValidationData: String?
P
var textColumnValidationData: String?
P
var validationData: MLDataTable?
M
init(validationData: MLTextClassifier.DataSource, algorithm: MLTextClassifier.ModelAlgorithmType, language: NLLanguage?)
M
init(validationData: MLDataTable?, algorithm: MLTextClassifier.ModelAlgorithmType, language: NLLanguage?, textColumnValidationData: String?, labelColumnValidationData: String?)
M
init(validationData: [String : [String]], algorithm: MLTextClassifier.ModelAlgorithmType, language: NLLanguage?)
init(validation: MLTextClassifier.ModelParameters.ValidationData, algorithm: MLTextClassifier.ModelAlgorithmType, language: NLLanguage?)
E
MLTextClassifier.DataSource
M
init(trainingData: MLTextClassifier.DataSource, parameters: MLTextClassifier.ModelParameters) throws
M
init(trainingData: DataFrame, textColumn: String, labelColumn: String, parameters: MLTextClassifier.ModelParameters) throws
M
init(trainingData: [String : [String]], parameters: MLTextClassifier.ModelParameters) throws
Creating and Training a Text Classifier
S
MLTextClassifier
Creating a text classifier model
Text Models
Documentation
Open Menu
Swift
Structure
MLTextClassifier.ModelParameters
Parameters that specify model training parameters and validation data.
Create ML
CreateML
iOS 15.0+
iPadOS 15.0+
macOS 10.14+
Mac Catalyst 15.0+
visionOS 1.0+ Beta
struct ModelParameters
Topics
Creating Parameters
init(validation: MLTextClassifier.ModelParameters.ValidationData, algorithm: MLTextClassifier.ModelAlgorithmType, language: NLLanguage?)
Creates model parameters for a text classifier with the specified validation data, algorithm, and language.
struct NLLanguage
The languages that the Natural Language framework supports.
enum ModelAlgorithmType
The type of algorithm that a text classifier uses.
enum ValidationData
The validation data that a text classifier uses.
Accessing Parameters
var algorithm: MLTextClassifier.ModelAlgorithmType
The parameter’s algorithm setting.
var language: NLLanguage?
The parameter’s language setting.
var validation: MLTextClassifier.ModelParameters.ValidationData
The validation dataset.
Describing Parameters
var description: String
A text representation of the model parameters.
var debugDescription: String
A text representation of the model parameters that’s suitable for output during debugging.
var playgroundDescription: Any
A description of the model parameters in a playground.
Deprecated
init(validationData: [String : [String]], algorithm: MLTextClassifier.ModelAlgorithmType, language: NLLanguage?)
Creates parameters for a text classifier with validation data in a dictionary.
init(validationData: MLDataTable?, algorithm: MLTextClassifier.ModelAlgorithmType, language: NLLanguage?, textColumnValidationData: String?, labelColumnValidationData: String?)
Creates parameters for a text classifier with validation data in a data table.
init(validationData: MLTextClassifier.DataSource, algorithm: MLTextClassifier.ModelAlgorithmType, language: NLLanguage?)
Creates parameters for a text classifier with validation data in a set of labeled directories.
var validationData: MLDataTable?
The validation data.
var textColumnValidationData: String?
The name of the text column in the validation data table.
var labelColumnValidationData: String?
The name of the label column in the validation data table.
Instance Properties
var maxIterations: Int?
The maximum number of training iterations.
Default Implementations
API Reference
CustomDebugStringConvertible Implementations
API Reference
CustomPlaygroundDisplayConvertible Implementations
API Reference
CustomStringConvertible Implementations
Relationships
Conforms To
CustomDebugStringConvertible
CustomPlaygroundDisplayConvertible
CustomStringConvertible
Sendable
See Also
Creating and Training a Text Classifier
init(trainingData: [String : [String]], parameters: MLTextClassifier.ModelParameters) throws
Creates a text classifier.
init(trainingData: DataFrame, textColumn: String, labelColumn: String, parameters: MLTextClassifier.ModelParameters) throws
Creates a text classifier.
init(trainingData: MLTextClassifier.DataSource, parameters: MLTextClassifier.ModelParameters) throws
Creates a text classifier.
enum DataSource
A data source for a text classifier.
let modelParameters: MLTextClassifier.ModelParameters
The configuration parameters that the text classifier used for training during initialization.
init(trainingData: MLDataTable, textColumn: String, labelColumn: String, parameters: MLTextClassifier.ModelParameters) throws
Creates a text classifier.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is MLTextClassifier.ModelParameters
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


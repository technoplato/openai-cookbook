https://developer.apple.com/documentation/vision/extracting_phone_numbers_from_text_in_images

Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
Image Background Removal
C
VNImageHomographicAlignmentObservation
C
VNImageTranslationAlignmentObservation
C
VNImageAlignmentObservation
C
VNTrackHomographicImageRegistrationRequest
Beta
C
VNHomographicImageRegistrationRequest
C
VNTrackTranslationalImageRegistrationRequest
Structuring Recognized Text on a Document
Recognizing Text in Images
Text Recognition
C
VNTextObservation
C
VNDetectTextRectanglesRequest
Text Detection
E
VNBarcodeCompositeType
Beta
C
VNDetectBarcodesRequest
Documentation
Open Menu
Swift
Sample Code
Extracting phone numbers from text in images
Analyze and filter phone numbers from text in live capture by using Vision.
Download
iOS 13.0+
iPadOS 13.0+
Xcode 14.2+
Overview
New in iOS 13, the Vision framework adds improved text-recognition capabilites that enable you to more easily extract text data from images. The sample app shows you how to use these capabilities to detect and display phone numbers scanned by the camera. It highlights the use of the fast recognition level and a reduced scope to provide responsive real-time text recognition.
The VNRecognizeTextRequest encapsulates all the necessary logic to recognize text in an image. There are two recognition levels you can choose from, to prioritize accuracy or speed of recognition. Additional configuration properties enable you to specify the languages to recognize, use language correction during recognition, specify the area of the live video to scan, and more. With all of these capabilities, there are tradeoffs between convenience, accuracy, and performance.
First the app creates a request to recognize text:
// Set up the Vision request before letting ViewController set up the camera
// so it exists when the first buffer is received.
request = VNRecognizeTextRequest(completionHandler: recognizeTextHandler)
Next, in the delegate method that Vision calls when it writes a sample buffer, the app configures the request to use fast recognition, disable language correction, and set a small rectangular region of interest. Then, the app performs the request:
// Configure for running in real time.
request.recognitionLevel = .fast
         // Language correction doesn't help in recognizing phone numbers and also
         // slows recognition.
request.usesLanguageCorrection = false
// Only run on the region of interest for maximum speed.
request.regionOfInterest = regionOfInterest


let requestHandler = VNImageRequestHandler(cvPixelBuffer: pixelBuffer, orientation: textOrientation, options: [:])
do {
    try requestHandler.perform([request])
} catch {
    print(error)
}
Disabling language correction improves performance but produces less accurate results. The app includes extensions on Character and String to perform correction optimized for phone-number recognition. See StringUtils.swift to review this code.
Configure the sample code project
To run this sample app, you need the following:
Xcode 11 or later
iPhone with iOS 13 or later
Connect the iPhone to the Mac over USB. The first time you run this sample app, the system prompts you to grant the app access to the camera. You must allow the sample app to access the camera for it to function correctly.
Note
This sample code project is associated with WWDC19 session 234: Text Recognition in Vision Framework.
See Also
Text Recognition
Recognizing Text in Images
Add text-recognition features to your app using the Vision framework.
Structuring Recognized Text on a Document
Detect, recognize, and structure text on a business card or receipt using Vision and VisionKit.
Locating and Displaying Recognized Text
Configure and perform text recognition on images to identify their textual content.
class VNRecognizeTextRequest
An image analysis request that finds and recognizes text in an image.
class VNRecognizedTextObservation
A request that detects and recognizes regions of text in an image.
Current page is Extracting phone numbers from text in images
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright Â© 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


https://developer.apple.com/documentation/realitykit/realityviewcontentprotocolSkip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
View Implementations
Default Implementations
T
RealityView.DefaultPlaceholder
T
RealityView.Body
T
RealityView.AttachmentContent
Type Aliases
S
RealityViewEntityCollection
func subscribe<E>(to: E.Type, on: (EventSource)?, componentType: (Component.Type)?, (E) -> Void) -> EventSubscription
S
RealityViewContent
Working with content
P
var body: some View
M
init<A, P>(make: (inout RealityViewContent, RealityViewAttachments) async -> Void, update: ((inout RealityViewContent, RealityViewAttachments) -> Void)?, placeholder: () -> P, attachments: () -> A)
M
init<P>(make: (inout RealityViewContent) async -> Void, update: ((inout RealityViewContent) -> Void)?, placeholder: () -> P)
M
init<A>(make: (inout RealityViewContent, RealityViewAttachments) async -> Void, update: ((inout RealityViewContent, RealityViewAttachments) -> Void)?, attachments: () -> A)
M
init(make: (inout RealityViewContent) async -> Void, update: ((inout RealityViewContent) -> Void)?)
Creating a reality view
Documentation
Open Menu
Swift
Protocol
RealityViewContentProtocol
A protocol representing the content of a RealityView.
RealityKit
SwiftUI
visionOS 1.0+ Beta
protocol RealityViewContentProtocol
Overview
Do not interface with this protocol directly. Instead, use RealityViewContent with your RealityView.
Topics
Associated Types
associatedtype Entities : EntityCollection
The type of collection used for entities.
Required
Instance Properties
var entities: Self.Entities
The RealityKit entities to be displayed in this RealityView.
Required
Instance Methods
func add(Entity)
Adds entity to this content.
func remove(Entity)
Removes entity from this content, if present.
func subscribe<E>(to: E.Type, componentType: (Component.Type)?, (E) -> Void) -> EventSubscription
Subscribes to the provided RealityKit Event.
func subscribe<E>(to: E.Type, on: (EventSource)?, (E) -> Void) -> EventSubscription
Subscribes to the provided RealityKit Event.
func subscribe<E>(to: E.Type, on: (EventSource)?, componentType: (Component.Type)?, (E) -> Void) -> EventSubscription
Subscribes to the provided RealityKit Event with handler.
Required
Relationships
Conforming Types
RealityViewContent
See Also
Working with content
struct RealityViewContent
The content of a RealityView that is displayed inline.
Beta
struct RealityViewEntityCollection
A collection of entities in a RealityView.
Beta
struct RealityViewAttachmentContent
A view that represents the contents of a RealityView with attachments.
Beta
struct RealityViewDefaultPlaceholder
A view that represents the default placeholder for a RealityView.
Beta
struct RealityViewAttachmentContent
A view that represents the contents of a RealityView with attachments.
Beta
struct RealityViewEntityCollection
A collection of entities in a RealityView.
Beta
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is RealityViewContentProtocol
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright Â© 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


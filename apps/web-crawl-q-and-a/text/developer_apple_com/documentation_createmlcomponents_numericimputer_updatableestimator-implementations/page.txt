https://developer.apple.com/documentation/createmlcomponents/numericimputer/updatableestimator-implementations

Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
S
LinearRegressorModel
S
LinearRegressor
r
P
Regressor
Regressors
S
OptionalUnwrapper
S
CategoricalImputer
S
Reshaper
func update(inout ImputeTransformer<Element>, with: some Sequence<Optional<Element>>, eventHandler: EventHandler?) throws
func appending<Other>(Other) -> some UpdatableSupervisedEstimator<ComposedTransformer<Self.Transformer, Other.Transformer>, Other.Annotation>
func appending<Other>(Other) -> some UpdatableTemporalEstimator<ComposedTemporalTransformer<TransformerToTemporalAdaptor<Self.Transformer>, Other.Transformer>>
func appending<Other>(Other) -> some UpdatableTemporalEstimator<ComposedTemporalTransformer<TransformerToTemporalAdaptor<Self.Transformer>, Other>>
func appending<Other>(Other) -> some UpdatableSupervisedTemporalEstimator<ComposedTemporalTransformer<TransformerToTemporalAdaptor<Self.Transformer>, Other.Transformer>, Other.Annotation>
func appending<Other>(Other) -> some UpdatableEstimator<ComposedTransformer<Self.Transformer, Other>>
func appending<Other>(Other) -> some UpdatableEstimator<ComposedTransformer<Self.Transformer, Other.Transformer>>
func adaptedAsSupervised<Annotation>(annotationType: Annotation.Type) -> UpdatableEstimatorToSupervisedAdaptor<Self, Annotation>
Estimator Implementations
Default Implementations
M
func fitted<S>(to: S, eventHandler: EventHandler?) -> NumericImputer<Element>.Transformer
Instance Methods
E
NumericImputer.Strategy
T
NumericImputer.Transformer
Fitting
P
var strategy: NumericImputer<Element>.Strategy
Documentation
Open Menu
UpdatableEstimator Implementations
Topics
Instance Methods
func adaptedAsSupervised<Annotation>(annotationType: Annotation.Type) -> UpdatableEstimatorToSupervisedAdaptor<Self, Annotation>
Exposes this estimator as a supervised estimator.
func adaptedAsTemporal() -> UpdatableEstimatorToTemporalAdaptor<Self>
Exposes this estimator as a temporal estimator.
func appending<Other>(Other) -> some UpdatableEstimator<ComposedTransformer<Self.Transformer, Other.Transformer>>
Composes this updatable estimator with another updatable estimator.
func appending<Other>(Other) -> some UpdatableEstimator<ComposedTransformer<Self.Transformer, Other>>
Composes this updatable estimator with a transformer.
func appending<Other>(Other) -> some UpdatableSupervisedTemporalEstimator<ComposedTemporalTransformer<TransformerToTemporalAdaptor<Self.Transformer>, Other.Transformer>, Other.Annotation>
Composes this updatable estimator with an updatable supervised temporal estimator.
func appending<Other>(Other) -> some UpdatableTemporalEstimator<ComposedTemporalTransformer<TransformerToTemporalAdaptor<Self.Transformer>, Other>>
Composes this updatable estimator with a temporal transformer.
func appending<Other>(Other) -> some UpdatableTemporalEstimator<ComposedTemporalTransformer<TransformerToTemporalAdaptor<Self.Transformer>, Other.Transformer>>
Composes this updatable estimator with an updatable temporal estimator.
func appending<Other>(Other) -> some UpdatableSupervisedEstimator<ComposedTransformer<Self.Transformer, Other.Transformer>, Other.Annotation>
Composes this updatable estimator with an updatable supervised estimator.
func decodeWithOptimizer(from: inout EstimatorDecoder) throws -> NumericImputer<Element>.Transformer
Reads the encoded transformer with a decoder.
Available when Element conforms to BinaryFloatingPoint, Decodable, and Encodable.
Beta
func encodeWithOptimizer(NumericImputer<Element>.Transformer, to: inout EstimatorEncoder) throws
Encodes the transformer to an encoder.
Available when Element conforms to BinaryFloatingPoint, Decodable, and Encodable.
Beta
func makeTransformer() -> NumericImputer<Element>.Transformer
Creates a default-initialized impute transformer suitable for incremental fitting.
Available when Element conforms to BinaryFloatingPoint, Decodable, and Encodable.
Beta
func update<InputSequence>(inout Self.Transformer, with: InputSequence) async throws
func update(inout ImputeTransformer<Element>, with: some Sequence<Optional<Element>>, eventHandler: EventHandler?) throws
Updates an impute transformer with a new sequence of examples.
Available when Element conforms to BinaryFloatingPoint, Decodable, and Encodable.
Beta
Current page is UpdatableEstimator Implementations
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright Â© 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


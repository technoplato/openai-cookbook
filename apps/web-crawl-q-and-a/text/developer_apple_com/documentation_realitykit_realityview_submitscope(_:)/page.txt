https://developer.apple.com/documentation/realitykit/realityview/submitscope(_:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func tint(Color?) -> some View
M
func textSelection<S>(S) -> some View
M
func textScale(Text.Scale, isEnabled: Bool) -> some View
M
func textInputAutocapitalization(TextInputAutocapitalization?) -> some View
M
func textFieldStyle<S>(S) -> some View
M
func textEditorStyle(some TextEditorStyle) -> some View
M
func textContentType(UITextContentType?) -> some View
M
func submitLabel(SubmitLabel) -> some View
M
func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View
M
func statusBarHidden(Bool) -> some View
M
func statusBar(hidden: Bool) -> some View
Deprecated
M
func springLoadingBehavior(SpringLoadingBehavior) -> some View
M
func speechSpellsOutCharacters(Bool) -> some View
M
func speechAnnouncementsQueued(Bool) -> some View
M
func speechAlwaysIncludesPunctuation(Bool) -> some View
Documentation
Open Menu
Swift
Instance Method
submitScope(_:)
Prevents submission triggers originating from this view to invoke a submission action configured by a submission modifier higher up in the view hierarchy.
RealityKit
SwiftUI
iOS 15.0+
iPadOS 15.0+
macOS 12.0+
Mac Catalyst 15.0+
tvOS 15.0+
watchOS 8.0+
visionOS 1.0+ Beta
func submitScope(_ isBlocking: Bool = true) -> some View
Parameters
isBlocking
A Boolean that indicates whether this scope is actively blocking submission triggers from reaching higher submission actions.
Discussion
Use this modifier when you want to avoid specific views from initiating a submission action configured by the View/onSubmit(of:_:) modifier. In the example below, the tag field doesn’t trigger the submission of the form:
Form {
    TextField("Username", text: $viewModel.userName)
    SecureField("Password", text: $viewModel.password)


    TextField("Tags", text: $viewModel.tags)
        .submitScope()
}
.onSubmit {
    guard viewModel.validate() else { return }
    viewModel.login()
}
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is submitScope(_:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


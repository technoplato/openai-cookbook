https://developer.apple.com/documentation/realitykit/hastransform/convert(position:to:)Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
M
func move(to: Transform, relativeTo: Entity?)
M
func move(to: float4x4, relativeTo: Entity?)
M
func look(at: SIMD3<Float>, from: SIMD3<Float>, upVector: SIMD3<Float>, relativeTo: Entity?)
Animating an Entity
M
func move(to: Transform, relativeTo: Entity?, duration: TimeInterval, timingFunction: AnimationTimingFunction) -> AnimationPlaybackController
M
func move(to: float4x4, relativeTo: Entity?, duration: TimeInterval, timingFunction: AnimationTimingFunction) -> AnimationPlaybackController
Converting Values Between Coordinate Spaces
M
func convert(position: SIMD3<Float>, from: Entity?) -> SIMD3<Float>
func look(at: SIMD3<Float>, from: SIMD3<Float>, upVector: SIMD3<Float>, relativeTo: Entity?, forward: Entity.ForwardDirection)
M
func requestOwnership(timeout: TimeInterval, (SynchronizationComponent.OwnershipTransferCompletionResult) -> Void)
M
func withUnsynchronized(() -> Void)
r
P
HasSynchronization
r
P
TransientComponent
Finding the Nearest Anchor
P
var anchor: (HasAnchoring)?
Calculating the Collision Shape
Documentation
Open Menu
Swift
Instance Method
convert(position:to:)
Converts a position from the local space of the entity on which you called this method to the local space of a reference entity.
iOS 13.0+
iPadOS 13.0+
macOS 10.15+
Mac Catalyst 13.0+
visionOS 1.0+ Beta
@MainActor
func convert(
    position: SIMD3<Float>,
    to referenceEntity: Entity?
) -> SIMD3<Float>
Parameters
position
The position given in the local space of the entity.
referenceEntity
The entity that defines a frame of reference. Set this to nil to indicate world space.
Return Value
The position specified relative to referenceEntity.
See Also
Converting Values Between Coordinate Spaces
func convert(position: SIMD3<Float>, from: Entity?) -> SIMD3<Float>
Converts a position from the local space of a reference entity to the local space of the entity on which you called this method.
func convert(direction: SIMD3<Float>, from: Entity?) -> SIMD3<Float>
Converts a direction vector from the local space of a reference entity to the local space of the entity on which you called this method.
func convert(direction: SIMD3<Float>, to: Entity?) -> SIMD3<Float>
Converts a direction vector from the local space of the entity on which you called this method to the local space of a reference entity.
func convert(normal: SIMD3<Float>, from: Entity?) -> SIMD3<Float>
Converts a normal vector from the local space of a reference entity to the local space of the entity on which you called this method.
func convert(normal: SIMD3<Float>, to: Entity?) -> SIMD3<Float>
Converts a normal vector from the local space of the entity on which you called this method to the local space of a reference entity.
func convert(transform: Transform, from: Entity?) -> Transform
Converts the scale, rotation, and position of a transform from the local space of a reference entity to the local space of the entity on which you called this method.
func convert(transform: Transform, to: Entity?) -> Transform
Converts the scale, rotation, and position of a transform from the local space of the entity on which you called this method to the local space of a reference entity.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is convert(position:to:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright Â© 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


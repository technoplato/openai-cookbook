https://developer.apple.com/documentation/createmlcomponents/classificationdistribution/split(maxsplits:omittingemptysubsequences:whereseparator:)

Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
S
TransformerToTemporalAdaptor
S
TransformerToEstimatorAdaptor
Transformer Adaptors
func meanAbsoluteError<T>(some Collection, some Collection) -> T
func maximumAbsoluteError<T>(some Collection, some Collection) -> T
func rootMeanSquaredError<T>(some Collection, some Collection) -> T
S
ClassificationMetrics
func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]
M
func ranges<C>(of: C) -> [Range<Self.Index>]
M
func randomElement<T>(using: inout T) -> Self.Element?
M
func randomElement() -> Self.Element?
M
func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence
M
func prefix(upTo: Self.Index) -> Self.SubSequence
M
func prefix(through: Self.Index) -> Self.SubSequence
M
func prefix(Int) -> Self.SubSequence
M
func map<T>((Self.Element) throws -> T) rethrows -> [T]
Documentation
Open Menu
Swift
Instance Method
split(maxSplits:omittingEmptySubsequences:whereSeparator:)
Returns the longest possible subsequences of the collection, in order, that don’t contain elements satisfying the given predicate.
Create ML Components
Swift
iOS 16.0+
iPadOS 16.0+
macOS 13.0+
Mac Catalyst 16.0+
tvOS 16.0+
visionOS 1.0+ Beta
func split(
    maxSplits: Int = Int.max,
    omittingEmptySubsequences: Bool = true,
    whereSeparator isSeparator: (Self.Element) throws -> Bool
) rethrows -> [Self.SubSequence]
Parameters
maxSplits
The maximum number of times to split the collection, or one less than the number of subsequences to return. If maxSplits + 1 subsequences are returned, the last one is a suffix of the original collection containing the remaining elements. maxSplits must be greater than or equal to zero. The default value is Int.max.
omittingEmptySubsequences
If false, an empty subsequence is returned in the result for each pair of consecutive elements satisfying the isSeparator predicate and for each element at the start or end of the collection satisfying the isSeparator predicate. The default value is true.
isSeparator
A closure that takes an element as an argument and returns a Boolean value indicating whether the collection should be split at that element.
Return Value
An array of subsequences, split from this collection’s elements.
Discussion
The resulting array consists of at most maxSplits + 1 subsequences. Elements that are used to split the sequence are not returned as part of any subsequence.
The following examples show the effects of the maxSplits and omittingEmptySubsequences parameters when splitting a string using a closure that matches spaces. The first use of split returns each word that was originally separated by one or more spaces.
let line = "BLANCHE:   I don't want realism. I want magic!"
print(line.split(whereSeparator: { $0 == " " }))
// Prints "["BLANCHE:", "I", "don\'t", "want", "realism.", "I", "want", "magic!"]"
The second example passes 1 for the maxSplits parameter, so the original string is split just once, into two new strings.
print(line.split(maxSplits: 1, whereSeparator: { $0 == " " }))
// Prints "["BLANCHE:", "  I don\'t want realism. I want magic!"]"
The final example passes false for the omittingEmptySubsequences parameter, so the returned array contains empty strings where spaces were repeated.
print(line.split(omittingEmptySubsequences: false, whereSeparator: { $0 == " " }))
// Prints "["BLANCHE:", "", "", "I", "don\'t", "want", "realism.", "I", "want", "magic!"]"
Complexity
O(n), where n is the length of the collection.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is split(maxSplits:omittingEmptySubsequences:whereSeparator:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines


https://developer.apple.com/documentation/coreml/mlshapedarrayslice/3763446-init

Skip Navigation
Apple Developer
News
Discover
Design
Develop
Distribute
Support
Account
P
var scalars: [Scalar]
P
var scalar: Scalar?
Accessing an Element
P
var underestimatedCount: Int
P
var count: Int
P
var scalarCount: Int
P
var isEmpty: Bool
init(unsafeUninitializedShape: [Int], initializingWith: (inout UnsafeMutableBufferPointer<Scalar>, [Int]) -> Void)
M
init<T>(converting: T)
M
init(converting: MLMultiArray)
M
init(MLMultiArray)
Creating a Shaped Array Slice from Another Type
M
init(randomScalarsIn: Range<Scalar>, shape: [Int])
M
init(identityMatrixOfSize: Int)
M
init(repeating: Scalar, shape: [Int])
M
init<S>(scalars: S, shape: [Int])
Documentation
Open Menu
Swift
Generic Initializer
init(concatenating:alongAxis:)
Merges a sequence of shaped arrays into one shaped array along an axis.
iOS 15.0+
iPadOS 15.0+
macOS 12.0+
Mac Catalyst 15.0+
tvOS 15.0+
watchOS 8.0+
visionOS 1.0+ Beta
Xcode 13.0+
init<S>(
    concatenating shapedArrays: S,
    alongAxis: Int
) where Scalar == S.Element.Scalar, S : Sequence, S.Element : MLShapedArrayProtocol
Parameters
shapedArrays
A sequence of shaped arrays.
alongAxis
A zero-based axis number the shaped arrays in multiArray merge along.
Tip
Select the shaped array’s highest dimension by passing a negative axis number. For example, an axis value of -1 or -2 selects the last or second-to-last dimension, respectively.
Discussion
All shaped arrays in the sequence must have the following:
The same underlying data type
The same number of dimensions
The same size for each corresponding dimension, except for the concatenation axis
For example, this code concatenates two shaped arrays along their second dimension:
// A 2x3 shaped array.
// 0 1 2
// 5 6 7
let shapedArray1 = MLShapedArray<Int32>(scalars: [0, 1, 2, 5, 6, 7],
                                        shape: [2, 3])


// A 2x2 shaped array.
// 3 4
// 8 9
let shapedArray2 = MLShapedArray<Int32>(scalars: [3, 4, 8, 9],
                                        shape: [2, 2])


// A 2x5 shaped array.
// 0 1 2 3 4
// 5 6 7 8 9
let shapedArray3 = MLShapedArray(concatenating: [shapedArray1,shapedArray2],
                                 alongAxis: 1)
See Also
Creating a Shaped Array Slice from Another Type
init(MLMultiArray)
Creates a shaped array slice from a multiarray.
init(converting: MLMultiArray)
Creates a shaped array slice by converting a multiarray.
init<T>(converting: T)
Creates a shaped array slice by converting another shaped array type.
Beta Software
This documentation contains preliminary information about an API or technology in development. This information is subject to change, and software implemented according to this documentation should be tested with final operating system software.
Learn more about using Apple's beta software
Current page is init(concatenating:alongAxis:)
Developer
Documentation
Platforms
iOS
iPadOS
macOS
tvOS
watchOS
visionOS
Tools
Swift
SwiftUI
Swift Playgrounds
TestFlight
Xcode
Xcode Cloud
SF Symbols
Topics & Technologies
Accessibility
Accessories
App Extension
App Store
Audio & Video
Augmented Reality
Business
Design
Distribution
Education
Fonts
Games
Health & Fitness
In-App Purchase
Localization
Maps & Location
Machine Learning
Security
Safari & Web
Resources
Documentation
Curriculum
Downloads
Forums
Videos
Support
Support Articles
Contact Us
Bug Reporting
System Status
Account
Apple Developer
App Store Connect
Certificates, IDs, & Profiles
Feedback Assistant
Programs
Apple Developer Program
Apple Developer Enterprise Program
App Store Small Business Program
MFi Program
News Partner Program
Video Partner Program
Security Bounty Program
Security Research Device Program
Events
Events Overview
App Accelerators
App Store Awards
Apple Design Awards
Apple Developer Academies
Entrepreneur Camp
Ask Apple
Tech Talks
WWDC
To view the latest developer news, visit News and Updates .
Light
Dark
Auto
Copyright © 2023 Apple Inc. All rights reserved. Terms of Use Privacy Policy Agreements and Guidelines

